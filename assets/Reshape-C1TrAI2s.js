import{ar as c,as as d,at as $,hE as N,a3 as b,e6 as j,gj as L,hL as B,av as w,f0 as K,aZ as S,gf as V,lg as X,dK as Y,gZ as q,dG as J,dL as E,lh as Q,bZ as W,ku as tt,bF as k,jS as O,aF as T,li as et,fn as it,h8 as M,lj as st,am as ot,s as rt}from"./index-cGsjYgnw.js";import{c as nt}from"./GraphicsLayer-DBoem6EB.js";import{d as at}from"./SnappingVisualizer2D-BmUTdApe.js";import{i as ht}from"./drawUtils-CVAmxWlI.js";import{a as pt,E as ct}from"./GraphicMover-C3soINQh.js";import{e as lt}from"./RouteLayerInteraction-CFpOGYMb.js";import{h as I}from"./quantityUtils-BCodB9PY.js";import{r as dt,C as mt,F as vt,R as yt,H as ut}from"./SketchTooltipInfo-h7pbQs5M.js";import{p as gt,i as _t}from"./SelectedVertexTooltipInfo-3jboi92n.js";import{i as ft}from"./TranslateTooltipInfo-Y_chsxUM.js";import{R as xt,h as U}from"./hitTestSelectUtils-Dmu0Kboe.js";import{h as Gt}from"./settings-B1FDsHFk.js";import{P as bt,E as Vt,e as Mt}from"./SnappingContext-CRjD6Fhm.js";import"./GraphicManipulator-CW4RDSmH.js";import"./projectPointToVector-ChbrHkLb.js";import"./elevationInfoUtils-BcQwXBrU.js";import"./drapedUtils-CngZ7xAc.js";import"./Stop-Dgn_Rgn3.js";import"./projectVectorToVector-CfMPrWog.js";import"./geodeticLengthOperator-8Cd3lYwq.js";import"./geodeticCurveType-CirnHLSB.js";import"./geodesicUtils-CgWJakNo.js";import"./earcut-D9gy186-.js";import"./plane-HiwvP9tU.js";import"./vectorStacks-CGdefod2.js";import"./mat3f64-B5o_lm6j.js";import"./mat4f64-q_b6UJoq.js";import"./quatf64-aQ5IuZRd.js";import"./triangle-DgYNOX0u.js";import"./sphere-Fi8gi249.js";import"./lineSegment-CdImpY8L.js";import"./MeshTransform-CK97zHAY.js";import"./quat-B1T8GAy7.js";import"./axisAngleDegrees-DB_HlJQY.js";import"./meshVertexSpaceUtils-CNmYJZrD.js";import"./MeshLocalVertexSpace-CwNqa7Fs.js";import"./memoize-DmxaQ-k8.js";import"./unitFormatUtils-C8fd1EbN.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./spatialReferenceEllipsoidUtils-Caqgk3vX.js";import"./PointSnappingHint-DM0SVsrw.js";let x=class extends dt{constructor(t){super(t),this.type="translate-vertex",this.distance=I,this.elevation=null,this.area=null,this.totalLength=null}clear(){this.distance=I,this.elevation=null,this.area=null,this.totalLength=null}};c([d()],x.prototype,"type",void 0),c([d()],x.prototype,"distance",void 0),c([d()],x.prototype,"elevation",void 0),c([d()],x.prototype,"area",void 0),c([d()],x.prototype,"totalLength",void 0),x=c([$("esri.views.interactive.tooltip.infos.TranslateVertexTooltipInfo")],x);function wt(t){const e={sketchOptions:t,viewType:"2d"};return{movePoint:new _t(e),selectedVertex:new gt(e),translateGraphic:new ft(e),translateVertices:new x(e)}}function St(t,e){function i(){const o=e(),n=o.sketchOptions.tooltips.effectiveEnabled?o.activeTooltipInfo:null;return{...o,activeTooltipInfo:n}}let s=!1;function r(o){s||(s=!0,o(),s=!1)}return N([b(()=>{var n,a;const o=i();return{context:o,geometry:(n=o.graphic)==null?void 0:n.geometry,vertexGeometry:(a=o.selectedVertex)==null?void 0:a.geometry}},({context:o})=>{r(()=>{Et(o),t.info=o.activeTooltipInfo})},j),b(()=>{const o=i(),{activeTooltipInfo:n}=o;if(n&&"key"in n)return{context:o,key:n.key}},(o,n)=>{o&&n&&o.key!==n.key&&r(()=>C(o.context))},L),mt(t,{onBeforePaste:()=>{s=!0},onAfterPaste:()=>{C(i()),s=!1}})])}function Et(t){const e=t.activeTooltipInfo;if(e){switch(e==null?void 0:e.type){case"move-point":return Tt(e,t);case"selected-vertex":return It(e,t)}e.sketchOptions=t.sketchOptions}}function Tt(t,{graphic:e}){D(t,e,e==null?void 0:e.geometry)}function It(t,{graphic:e,selectedVertex:i,automaticAreaMeasurementUtils:s,automaticLengthMeasurementUtils:r}){D(t,e,i==null?void 0:i.geometry);const o=e==null?void 0:e.geometry;switch(o==null?void 0:o.type){case"polygon":t.geometryType="polygon",t.totalLength.visible=!1,t.area.actual=s.autoArea2D(o);break;case"polyline":t.geometryType="polyline",t.totalLength.actual=r.autoLength2D(o),t.area.visible=!1}}function D(t,e,i){var s;e&&(i==null?void 0:i.type)==="point"&&(t.setLocationFromPoint(i),t.elevation.actual=xt(i),t.elevation.visible=!!((s=e.geometry)!=null&&s.hasZ),t.elevation.readOnly=!1,t.elevation.showAsZ=!0)}function C(t){function e(o,n){const a=n==null?void 0:n.geometry;if(!a||a.type!=="point")return;const{dx:h,dy:l,dz:p}=vt(o,a);if(h===0&&l===0&&p===0)return;const{x:v,y:u,z:y,m:g,spatialReference:f}=a,G=new w({x:v+h,y:u+l,z:y!=null?y+p:void 0,m:g,spatialReference:f});t.updateGeometry(n,G,a,h,l)}const{activeTooltipInfo:i,graphic:s,selectedVertex:r}=t;switch(i==null?void 0:i.type){case"move-point":return e(i,s);case"selected-vertex":return e(i,r)}}function kt(t,e,i,s){t.clear(),P(t,e,s,i)}function Ot(t,e,i,s,r){t.clear();const{automaticAreaMeasurementUtils:o,automaticLengthMeasurementUtils:n}=s;(i==null?void 0:i.type)==="polygon"?t.area=o.autoArea2D(i):(i==null?void 0:i.type)==="polyline"&&(t.totalLength=n.autoLength2D(i)),P(t,e,r,s)}function P(t,e,i,{automaticLengthMeasurementUtils:s}){if(!i)return;const{x:r,y:o}=i.origin,n=e.toMap(i),a=e.toMap(B(r,o)),h=s.autoDistanceBetweenPoints2D(a,n);t.distance=h??I}class Ct{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape-start"}}class Ht{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape"}}class At{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape-stop"}}class Rt{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move-start"}}class $t{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move"}}class Lt{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move-stop"}}class Ut{constructor(e){this.added=e,this.type="vertex-select"}}class Dt{constructor(e){this.removed=e,this.type="vertex-deselect"}}class Pt{constructor(e,i,s,r){this.added=e,this.graphic=i,this.oldGraphic=s,this.vertices=r,this.type="vertex-add"}}class zt{constructor(e,i,s,r){this.removed=e,this.graphic=i,this.oldGraphic=s,this.vertices=r,this.type="vertex-remove"}}const _=Gt.reshapeGraphics,Ft={vertices:{default:new V({style:"circle",size:_.vertex.size,color:_.vertex.color,outline:{color:_.vertex.outlineColor,width:1}}),hover:new V({style:"circle",size:_.vertex.hoverSize,color:_.vertex.hoverColor,outline:{color:_.vertex.hoverOutlineColor,width:1}}),selected:new V({style:"circle",size:_.selected.size,color:_.selected.color,outline:{color:_.selected.outlineColor,width:1}})},midpoints:{default:new V({style:"circle",size:_.midpoint.size,color:_.midpoint.color,outline:{color:_.midpoint.outlineColor,width:1}}),hover:new V({style:"circle",size:_.midpoint.size,color:_.midpoint.color,outline:{color:_.midpoint.outlineColor,width:1}})}};let m=class extends K.EventedAccessor{constructor(t){super(t),this._updateHandlesOnExternalGeometryChange=null,this._activeOperationInfo=null,this._editGeometryOperations=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingContext=null,this._snappingGraphicsLayer=null,this._hoverGraphic=null,this._snappingTask=null,this._stagedVertex=null,this.tooltip=null,this.activeTooltipInfo=null,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.highlightName=null,this.highlightsEnabled=!0,this.layer=null,this.midpointGraphics=new S,this.midpointSymbol=new V({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=new S,this.snappingManager=null,this.symbols=Ft,this.sketchOptions=new U,this.type="reshape",this.vertexGraphics=new S,this.view=null}initialize(){const t=this.view;this._highlightHelper=new pt({view:t}),this._setup(),this._updateHandlesOnExternalGeometryChange=X(()=>{var e;return(e=this.graphic)==null?void 0:e.geometry},e=>{if(!e)return;const i=new Set(this.selectedVertices.map(l=>{var p;return(p=l.attributes)==null?void 0:p.pointIndex}));this._highlightHelper.removeAll(),this._setUpHighlights(),this._setupGraphics(),this._clearSelection(),this.vertexGraphics.filter(l=>i.has(l.attributes.pointIndex)).forEach(l=>this._addToSelection(l));const{enableMovement:s,_mover:r,graphic:o,midpointGraphics:n,vertexGraphics:a}=this,h=a.concat(n).items;s&&h.push(o),r==null||r.set("graphics",h)},L),this.tooltip=yt(()=>({view:t,options:this.sketchOptions.tooltips})),this.tooltipInfos=wt(this.sketchOptions),this.addHandles([Y(()=>t==null?void 0:t.ready,()=>{const{layer:e,view:i}=this;lt(i,e),this.addHandles(i.on("key-down",s=>this._keyDownHandler(s),q.TOOL))},{once:!0,initial:!0}),b(()=>this.graphic,()=>this.refresh()),b(()=>this.layer,(e,i)=>{i&&(this._clearSelection(),this._resetGraphics(i)),this.refresh()}),b(()=>[this.highlightsEnabled,this.highlightName],()=>{var e;(e=this._highlightHelper)==null||e.removeAll(),this._setUpHighlights()}),b(()=>this.enableMidpoints,()=>this.refresh()),St(this.tooltip,()=>this._tooltipsContext),b(()=>this.view.effectiveTheme.accentColor,()=>this._updateSymbolsForTheme(),J),this._updateHandlesOnExternalGeometryChange]),this._updateTooltip()}destroy(){var t;this._reset(),(t=this._mover)==null||t.destroy(),this._mover=null,this.tooltip=E(this.tooltip)}get _coordinateHelper(){var t,e,i;return((t=this._editGeometryOperations)==null?void 0:t.data.coordinateHelper)??bt(!!((e=this.graphic.geometry)!=null&&e.hasZ),!!((i=this.graphic.geometry)!=null&&i.hasM),this.view.spatialReference)}get _selectedVertex(){return this.selectedVertices.length===1?this.selectedVertices.at(0):void 0}get _tooltipsContext(){const{automaticAreaMeasurementUtils:t,automaticLengthMeasurementUtils:e,sketchOptions:i,activeTooltipInfo:s,graphic:r}=this;return{sketchOptions:i,activeTooltipInfo:s,graphic:r,selectedVertex:this._selectedVertex,automaticAreaMeasurementUtils:t,automaticLengthMeasurementUtils:e,updateGeometry:(o,n,a,h,l)=>{this._setUpGeometryHelper();const p=o===this.graphic;if(p?this._emitMoveStartEvent(0,0):this._emitReshapeStartEvent(o),this._syncGeometryAfterVertexMove(o,n,h,l,!0),p){const{view:u}=this,y=u.toScreen(a),g=u.toScreen(n),f=((g==null?void 0:g.x)??0)-((y==null?void 0:y.x)??0),G=((g==null?void 0:g.y)??0)-((y==null?void 0:y.y)??0);this._emitMoveEvent(f,G),this._emitMoveStopEvent(f,G)}else this._emitReshapeEvent(o),this._emitReshapeStopEvent(o);this._editGeometryOperations=E(this._editGeometryOperations)}}}get state(){const t=this.view.ready,e=!(!this.graphic||!this.layer);return t&&e?"active":t?"ready":"disabled"}isUIGraphic(t){const e=[];return this.graphic&&e.push(this.graphic),e.concat(this.vertexGraphics.items,this.midpointGraphics.items),e.length>0&&e.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){const{selectedVertices:t}=this;t.length&&this._removeVertices(t)}_setup(){const{graphic:t,layer:e}=this;if(!e||(t==null?void 0:t.geometry)==null)return;const i=t.geometry;i.type!=="mesh"&&i.type!=="extent"?(i.type==="polygon"&&Q(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover()):this._logGeometryTypeError()}_setUpHighlights(){var t;this.highlightsEnabled&&this.graphic&&((t=this._highlightHelper)==null||t.add(this.graphic,this.highlightName))}_setUpGeometryHelper(){const t=this.graphic.geometry;if(t==null||t.type==="mesh"||t.type==="extent")return void this._logGeometryTypeError();const e=t.type==="multipoint"?new W({paths:[t.points],spatialReference:t.spatialReference}):t;this._editGeometryOperations=Vt.fromGeometry(e,tt.Local)}_saveSnappingContextForHandle(t,e){var s;this._snappingGraphicsLayer=new nt({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer);const i=this._editGeometryOperations;k(i),this._snappingContext=new Mt({editGeometryOperations:i,elevationInfo:{mode:"on-the-ground",offset:0},pointer:((s=e.viewEvent)==null?void 0:s.pointerType)||"mouse",excludeFeature:this.graphic,feature:this.graphic,visualizer:new at(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(t)})}_reset(){var t;this._clearSelection(),(t=this._highlightHelper)==null||t.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){var t;this.snappingManager!=null&&this.snappingManager.doneSnapping(),this._snappingGraphicsLayer!=null&&((t=this.view)!=null&&t.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=E(this._editGeometryOperations),this._snappingTask=O(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(t){this._removeMidpointGraphics(t),this._removeVertexGraphics(t),this.selectedVertices.removeAll(),this._updateTooltip()}_removeMidpointGraphics(t){const e=t||this.layer;e&&e.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach(i=>i.destroy()),this.midpointGraphics.removeAll()}_removeVertexGraphics(t){const e=t||this.layer;e&&e.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach(i=>i.destroy()),this.vertexGraphics.removeAll()}_setupGraphics(){const t=this.graphic.geometry;if(t!=null&&(t.type==="polyline"||t.type==="polygon")){const e=H(t);this.enableMidpoints&&this._setUpMidpointGraphics(e),this.enableVertices&&this._setUpVertexGraphics(e)}}_setUpMidpointGraphics(t){this._removeMidpointGraphics();const e=this._createMidpointGraphics(t);this.midpointGraphics.addMany(e),this.layer.addMany(e)}_setUpVertexGraphics(t){this._removeVertexGraphics();const e=this._createVertexGraphics(t);this.vertexGraphics.addMany(e),this._storeRelatedVertexIndices(),this.layer.addMany(e)}_createVertexGraphics(t){const{_graphicAttributes:e,symbols:i}=this,s=[];return t==null||t.forEach((r,o)=>{r.forEach((n,a)=>{var h;s.push(new T({geometry:this._coordinateHelper.arrayToPoint(n),symbol:(h=i==null?void 0:i.vertices)==null?void 0:h.default,attributes:{...e,pathIndex:o,pointIndex:a}}))})}),s}_createMidpointGraphics(t){var r;const{_graphicAttributes:e,symbols:i}=this,s=[];for(let o=0;o<t.length;o++){const n=t[o];for(let a=0;a<n.length;a++){const h=(a+1)%n.length;if(((r=this.graphic.geometry)==null?void 0:r.type)==="polyline"&&h===0)continue;const l=n[a],p=n[h],v=this._getMidpoint(l,p);s.push(new T({geometry:v,symbol:i.midpoints.default,attributes:{...e,pathIndex:o,pointIndexStart:a,pointIndexEnd:h}}))}}return s}_updateSymbolsForTheme(){var e;const t=this.view.effectiveTheme.accentColor;this.symbols={vertices:{...this.symbols.vertices,default:this.symbols.vertices.default.clone().set("color",t),hover:(e=this.symbols.vertices.hover)==null?void 0:e.clone().set("color",t)},midpoints:{...this.symbols.midpoints}};for(const i of this.vertexGraphics)this._isSelected(i)?i.symbol=this.symbols.vertices.selected:this._hoverGraphic===i?i.symbol=this.symbols.vertices.hover:i.symbol=this.symbols.vertices.default}_storeRelatedVertexIndices(){const t=this.vertexGraphics.items;if(!t)return;const e=t.map(({geometry:i})=>({x:i.x,y:i.y}));for(let i=0;i<e.length;i++){const s=[];for(let r=0;r<e.length;r++){if(i===r)continue;const o=e[i],n=e[r];o.x===n.x&&o.y===n.y&&s.push(r)}t[i].attributes.relatedGraphicIndices=s}}_setupMover(){const{enableMovement:t,graphic:e,midpointGraphics:i,vertexGraphics:s,view:r}=this,o=s.concat(i).items;t&&o.push(e),this._mover=new ct({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:o,view:r,callbacks:{onGraphicClick:n=>this._onGraphicClickCallback(n),onGraphicMoveStart:n=>this._onGraphicMoveStartCallback(n),onGraphicMove:n=>this._onGraphicMoveCallback(n),onGraphicMoveStop:n=>this._onGraphicMoveStopCallback(n),onGraphicPointerOver:n=>this._onGraphicPointerOverCallback(n),onGraphicPointerOut:n=>this._onGraphicPointerOutCallback(n)}})}_onGraphicClickCallback(t){var i,s;t.viewEvent.stopPropagation();const e=t.graphic;if(e===this.graphic)this.clearSelection(),this.emit("graphic-click",t),(s=(i=this.callbacks).onGraphicClick)==null||s.call(i,t);else if(this._isMidpoint(e)){if(t.viewEvent.button===2)return;const r=this.graphic.clone(),o=this._createVertexFromMidpoint(e);this.refresh(),this._emitVertexAddEvent([e],r,o)}else this._isVertex(e)&&(t.viewEvent.stopPropagation(),t.viewEvent.button===2?this._removeVertices(e):(t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(e)?this._removeFromSelection(e,!0):this._addToSelection(e)))}_setUpOperation(t){const{graphic:e,dx:i,dy:s}=t,r=e===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(e,t),this._activeOperationInfo={target:this.graphic,mover:e,operationType:r?"move":"reshape",totalDx:i,totalDy:s}}_onGraphicMoveStartCallback(t){const{dx:e,dy:i,graphic:s}=t;if(s===this.graphic){const{geometry:r}=s;return this._setUpOperation(t),this._emitMoveStartEvent(e,i),void(r!=null&&r.type==="point"&&this._onHandleMove(s,e,i,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(e,i)}))}if(!this.selectedVertices.includes(s)){if(this._clearSelection(),this._isMidpoint(s)){const r=this.graphic.clone(),o=this._createVertexFromMidpoint(s);this._emitVertexAddEvent([s],r,o)}this._addToSelection(s)}this._setUpOperation(t),this._emitReshapeStartEvent(s),this._onHandleMove(s,e,i,t,()=>{this._updateTooltip(s,t.viewEvent),this._emitReshapeEvent(s)})}_onGraphicMoveCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:r}=t;e.totalDx+=i,e.totalDy+=s;const{operationType:o}=e,{geometry:n}=r;if(n!=null){if(o!=="move")this._onHandleMove(r,i,s,t,()=>{this._updateTooltip(r,t.viewEvent),this._emitReshapeEvent(r)});else if(n.type==="point")this._onHandleMove(r,i,s,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)});else if(n.type==="polyline"||n.type==="polygon"){const a=H(n);this._updateVertexGraphicLocations(a),this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)}}}_onGraphicMoveStopCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:r}=t,{operationType:o}=e;e.totalDx+=i,e.totalDy+=s,this._onHandleMove(r,i,s,t,()=>o==="move"?this._emitMoveStopEvent():this._emitReshapeStopEvent(r)),this._isMidpoint(r)?this.refresh():(this._updateTooltip(this._isVertex(r)?r:null),this._resetSnappingStateVars(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(t){const{_coordinateHelper:e}=this;for(const i of this.vertexGraphics){const{pathIndex:s,pointIndex:r}=i.attributes;i.geometry=e.arrayToPoint(t[s][r])}this._updateMidpointGraphicLocations(t)}_updateMidpointGraphicLocations(t){for(const e of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:r}=e.attributes,o=t[i];e.geometry=this._getMidpoint(o[s],o[r])}}_getMidpoint(t,e){const{_coordinateHelper:i}=this,s=i.arrayToVector(t),r=i.arrayToVector(e),o=i.toXYZ(s),n=i.toXYZ(r),[a,h,l]=et(o,n),p=i.hasM()?0:void 0;return new w({x:a,y:h,z:l,m:p,spatialReference:i.spatialReference})}_getVertexFromEditGeometry(t){const[e,i]=A(t);return k(this._editGeometryOperations),this._editGeometryOperations.data.components[e].vertices[i]}_onHandleMove(t,e,i,s,r){O(this._snappingTask);const o=this._snappingContext;if(!o)return;const n=t.geometry,a=s.type==="graphic-move-stop";if(this.snappingManager!=null&&this.selectedVertices.length<2&&!a){const h=this.snappingManager;this._stagedVertex=h.update({point:n,context:o}),this._syncGeometryAfterVertexMove(t,new w(this._stagedVertex),e,i,a),r(),this._snappingTask=it(async l=>{const p=await h.snap({point:n,context:o,signal:l});p.valid&&(this._stagedVertex=p.apply(),this._syncGeometryAfterVertexMove(t,new w(this._stagedVertex),e,i,a),r())})}else{const h=this._stagedVertex!=null?new w(this._stagedVertex):n;this._syncGeometryAfterVertexMove(t,h,e,i,a),r()}}_syncGeometryAfterVertexMove(t,e,i,s,r=!1){var n,a;const o=(n=this._editGeometryOperations)==null?void 0:n.data.geometry;if(o)if(o.type==="point")t.geometry=e;else if(o.type==="mesh")t.geometry=o.centerAt(e);else{const{_coordinateHelper:h}=this,[l,p]=A(t);let v=M(o);const u=v[l].length-1,y=h.pointToArray(e);v[l][p]=y,o.type==="polygon"&&(p===0?v[l][u]=y:p===u&&(v[l][0]=y)),this._isVertex(t)&&(v=this._moveRelatedCoordinates(v,t,y),v=this._moveSelectedHandleCoordinates(v,t,i,s,o.type==="polygon"),this._updateMidpointGraphicLocations(v)),this._updateGraphicGeometry(o.clone());const g=h.pointToVector(e),f=this._getVertexFromEditGeometry(t),G=h.getZ(g),z=g[0]-f.pos[0],F=g[1]-f.pos[1],Z=G!=null?G-f.pos[2]:0;(a=this._editGeometryOperations)==null||a.moveVertices([f],z,F,Z),r&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(t),e):t.geometry=e)}}_moveRelatedCoordinates(t,e,i){const{relatedGraphicIndices:s}=e.attributes;for(const r of s){const o=this.vertexGraphics.at(r),{pathIndex:n,pointIndex:a}=o.attributes;t[n][a]=i,o.geometry=e.geometry}return t}_moveSelectedHandleCoordinates(t,e,i,s,r){for(const o of this.selectedVertices)if(o!==e){const{pathIndex:n,pointIndex:a,relatedGraphicIndices:h}=o.attributes,l=ht(o.geometry,i,s,this.view),p=M(l),v=t[n].length-1;t[n][a]=p,o.geometry=l,r&&(a===0?t[n][v]=p:a===v&&(t[n][0]=p));for(const u of h){const y=this.vertexGraphics.at(u),{pathIndex:g,pointIndex:f}=y.attributes;t[g][f]=p,y.geometry=l}}return t}_onGraphicPointerOverCallback(t){const e=t.graphic;this._hoverGraphic=e;const i=this._isVertex(e);i&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.hover),this._updateTooltip(i?e:null),this._updateHoverCursor(e)}_onGraphicPointerOutCallback(t){const e=t.graphic;this._hoverGraphic=null,this._isVertex(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.default),this.view.cursor="default",this._updateTooltip()}_createVertexFromMidpoint(t){const{_graphicAttributes:e,graphic:i}=this,s=i.geometry;if(s==null||s.type!=="polygon"&&s.type!=="polyline")return[];const r=s.clone(),o=[],{pathIndex:n,pointIndexStart:a,pointIndexEnd:h}=t.attributes,l=M(t.geometry),p=h===0?a+1:h,v=M(r);return v[n].splice(p,0,l),t.attributes={...e,pathIndex:n,pointIndex:p,relatedGraphicIndices:[]},o.push({coordinates:v[n][p],componentIndex:n,vertexIndex:p}),this._updateGraphicGeometry(r),o}_addToSelection(t){const e=R(t);for(const i of e)i.symbol=this.symbols.vertices.selected,this.selectedVertices.add(i),this._updateTooltip(i);this._emitSelectEvent(e)}_removeFromSelection(t,e){const{vertices:i}=this.symbols,s=e?i.hover:i.default;this.selectedVertices.remove(t),t.symbol=s,this._emitDeselectEvent([t]),this._updateTooltip()}_clearSelection(){const t=this.selectedVertices.toArray();if(t.length>0){for(const e of t)e.set("symbol",this.symbols.vertices.default);this.selectedVertices.removeAll(),this._emitDeselectEvent(t),this._updateTooltip()}}_keyDownHandler(t){this._activeOperationInfo==null&&ut(t,this.tooltip)||st.delete.includes(t.key)&&!t.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(t){const e=this.graphic.geometry;if(e==null||e.type!=="polygon"&&e.type!=="polyline"||e.type==="polygon"&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;const i=this.graphic.clone(),s=e.clone();let r=M(s);const o=[],n=R(t);for(const a of n){const{x:h,y:l}=a.geometry;for(let p=0;p<r.length;p++){const v=r[p];for(let u=0;u<v.length;u++){const[y,g]=v[u];h===y&&l===g&&(o.push({coordinates:r[p][u],componentIndex:p,vertexIndex:u}),r[p].splice(Number(u),1))}}}if(s.type==="polygon")r=r.filter(a=>{if(a.length<2)return!1;const[h,l]=a[0],[p,v]=a[a.length-1];return(a.length!==2||h!==p||l!==v)&&(h===p&&l===v||a.push(a[0]),!0)}),s.rings=r;else{for(const a of r)a.length===1&&r.splice(r.indexOf(a),1);s.paths=r}this._updateGraphicGeometry(s),this.refresh(),this._emitVertexRemoveEvent(n,i,o)}_isVertex(t){return this.vertexGraphics.includes(t)}_isSelected(t){return this._isVertex(t)&&this.selectedVertices.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_updateTooltip(t,e){let i=null;const{graphic:s,view:r,tooltipInfos:o}=this,n=s==null?void 0:s.geometry;(n==null?void 0:n.type)==="point"?i=o.movePoint:this._selectedVertex?i=o.selectedVertex:t===this.graphic?(i=o.translateGraphic,kt(i,r,this._tooltipsContext,e)):t&&this.selectedVertices.length>1&&(i=o.translateVertices,Ot(i,r,n,this._tooltipsContext,e)),this.activeTooltipInfo=i}_updateGraphicGeometry(t){var e,i;(e=this._updateHandlesOnExternalGeometryChange)==null||e.pause(),this.graphic.geometry=t,(i=this._updateHandlesOnExternalGeometryChange)==null||i.resume()}_emitMoveStartEvent(t,e){var s,r;const i=new Rt(this.graphic,t,e);this.emit("move-start",i),(r=(s=this.callbacks).onMoveStart)==null||r.call(s,i)}_emitMoveEvent(t,e){var s,r;const i=new $t(this.graphic,t,e);this.emit("move",i),(r=(s=this.callbacks).onMove)==null||r.call(s,i)}_emitMoveStopEvent(t,e){var s,r;if(t==null||e==null){const o=this._activeOperationInfo;if(!o)return;t=o.totalDx,e=o.totalDy}const i=new Lt(this.graphic,t,e);this.emit("move-stop",i),(r=(s=this.callbacks).onMoveStop)==null||r.call(s,i)}_emitReshapeStartEvent(t){var i,s;const e=new Ct(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-start",e),(s=(i=this.callbacks).onReshapeStart)==null||s.call(i,e)}_emitReshapeEvent(t){var i,s;const e=new Ht(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape",e),(s=(i=this.callbacks).onReshape)==null||s.call(i,e)}_emitReshapeStopEvent(t){var i,s;const e=new At(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-stop",e),(s=(i=this.callbacks).onReshapeStop)==null||s.call(i,e)}_emitSelectEvent(t){var i,s;const e=new Ut(t);this.emit("select",e),(s=(i=this.callbacks).onVertexSelect)==null||s.call(i,e)}_emitDeselectEvent(t){var i,s;const e=new Dt(t);this.emit("deselect",e),(s=(i=this.callbacks).onVertexDeselect)==null||s.call(i,e)}_emitVertexAddEvent(t,e,i){var r,o;const s=new Pt(t,this.graphic,e,i);this.emit("vertex-add",s),(o=(r=this.callbacks).onVertexAdd)==null||o.call(r,s)}_emitVertexRemoveEvent(t,e,i){var r,o;const s=new zt(t,this.graphic,e,i);this.emit("vertex-remove",s),(o=(r=this.callbacks).onVertexRemove)==null||o.call(r,s)}_logGeometryTypeError(){ot.getLogger(this).error(new rt("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};function H(t){const e=M(t.clone());if(t.type==="polygon")for(const i of e){const s=i[i.length-1];i[0][0]===s[0]&&i[0][1]===s[1]&&i.length>2&&i.pop()}return e}function A({attributes:t}){return[(t==null?void 0:t.pathIndex)||0,(t==null?void 0:t.pointIndex)||0]}function R(t){return t instanceof T?[t]:[...t]}c([d()],m.prototype,"_activeOperationInfo",void 0),c([d()],m.prototype,"_coordinateHelper",null),c([d()],m.prototype,"_editGeometryOperations",void 0),c([d()],m.prototype,"tooltip",void 0),c([d()],m.prototype,"tooltipInfos",void 0),c([d()],m.prototype,"activeTooltipInfo",void 0),c([d({constructOnly:!0})],m.prototype,"automaticAreaMeasurementUtils",void 0),c([d({constructOnly:!0})],m.prototype,"automaticLengthMeasurementUtils",void 0),c([d()],m.prototype,"_selectedVertex",null),c([d()],m.prototype,"_tooltipsContext",null),c([d()],m.prototype,"callbacks",void 0),c([d()],m.prototype,"enableMidpoints",void 0),c([d()],m.prototype,"enableMovement",void 0),c([d()],m.prototype,"enableVertices",void 0),c([d()],m.prototype,"graphic",void 0),c([d()],m.prototype,"highlightName",void 0),c([d()],m.prototype,"highlightsEnabled",void 0),c([d()],m.prototype,"layer",void 0),c([d({readOnly:!0})],m.prototype,"midpointGraphics",void 0),c([d()],m.prototype,"midpointSymbol",void 0),c([d({readOnly:!0})],m.prototype,"selectedVertices",void 0),c([d()],m.prototype,"snappingManager",void 0),c([d({readOnly:!0})],m.prototype,"state",null),c([d()],m.prototype,"symbols",void 0),c([d({type:U})],m.prototype,"sketchOptions",void 0),c([d({readOnly:!0})],m.prototype,"type",void 0),c([d({readOnly:!0})],m.prototype,"vertexGraphics",void 0),c([d()],m.prototype,"view",void 0),m=c([$("esri.views.draw.support.Reshape")],m);const ke=m;export{ke as default};
