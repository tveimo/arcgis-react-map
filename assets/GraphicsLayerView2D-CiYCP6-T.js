import{dK as m,dL as c,aF as g,aZ as n,L as d,c3 as h,dB as l,ar as o,as as w,at as u}from"./index-BU6th8yW.js";import{S as y,u as V}from"./LayerView-Dgm5y7em.js";import{t as v}from"./GraphicContainer-BwqLurX0.js";import{O as f}from"./GraphicsView2D-DGKW7V5c.js";import"./Container-DwbTQjC4.js";import"./AGraphicContainer-DbGs1bvH.js";import"./TechniqueInstance-D39HmumU.js";import"./UpdateTracking2D-ByuYEdOq.js";import"./Utils-mqNT16GQ.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-DMUPCaZc.js";import"./ProgramTemplate-l9rj7sUi.js";import"./TileContainer-aBkJrn1k.js";import"./WGLContainer-Cy3GIefH.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-BiE0eoXW.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-p8-yzuPr.js";import"./OptimizedFeature-Cy0wyyDO.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-CvGAmAlu.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-Bs5jOZiH.js";import"./ShaderBuilder-B82V1Zuo.js";import"./BindType-BBwFZqyN.js";import"./utils-CcXZS5mD.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BzM1hyhR.js";import"./AttributeStore-DHzhArXd.js";import"./queryUtils-B6VZ8xpk.js";import"./json-Wa8cmqdu.js";import"./timeSupport-7h_MoB7J.js";import"./normalizeUtilsSync-CNroo8u4.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-lh0VWsvr.js";let a=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>{var i;return(i=this.layer)==null?void 0:i.visible},()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):n.isCollection(i)&&i.length>0&&(r=i.map(s=>s&&s.uid).toArray());const e=r==null?void 0:r.filter(d);if(!(e!=null&&e.length))return h();const p=(t==null?void 0:t.name)??l;return this._addHighlights(e,p),h(()=>!this.destroyed&&this._removeHighlights(e,p))}_processHighlight(){var t;const i=this._getHighlights();(t=this.graphicsView)==null||t.setHighlight(i)}};o([w()],a.prototype,"graphicsView",void 0),a=o([u("esri.views.2d.layers.GraphicsLayerView2D")],a);const si=a;export{si as default};
