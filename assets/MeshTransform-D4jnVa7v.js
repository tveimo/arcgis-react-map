import{aN as n,aO as l,aP as u,aQ as p,aR as h,aS as m,aT as c,aU as x,aV as y,ar as r,as as a,at as b}from"./index-rbwFz4i4.js";import{e}from"./mat4f64-q_b6UJoq.js";import{b as A}from"./quat-DzDjyrhk.js";import{e as M}from"./quatf64-aQ5IuZRd.js";import{B as N,q as g,w as i,y as d,z as f}from"./axisAngleDegrees-BUCbZ_1g.js";let o=class extends n.ClonableMixin(l){constructor(t){super(t),this.translation=u(),this.rotationAxis=p(N),this.rotationAngle=0,this.scale=h(1,1,1)}get rotation(){return g(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=m(i(t)),this.rotationAngle=d(t)}get localMatrix(){const t=e();return A(s,i(this.rotation),f(this.rotation)),c(t,s,this.translation,this.scale),t}get localMatrixInverse(){return x(e(),this.localMatrix)}equals(t){return this===t||t!=null&&y(this.localMatrix,t.localMatrix)}};r([a({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"translation",void 0),r([a({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"rotationAxis",void 0),r([a({type:Number,nonNullable:!0,json:{write:!0}})],o.prototype,"rotationAngle",void 0),r([a({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"scale",void 0),r([a()],o.prototype,"rotation",null),r([a()],o.prototype,"localMatrix",null),r([a()],o.prototype,"localMatrixInverse",null),o=r([b("esri.geometry.support.MeshTransform")],o);const s=M();export{o as d};
