const c=Symbol("meshContext");function l(e){return e&&typeof e=="object"&&c in e?e[c]:void 0}function d(e,t){const n=l(e);return{...e,[c]:{...n,...t}}}const u=Symbol("meshMaterialContext");function p(e){return e&&typeof e=="object"&&u in e?e[u]:void 0}function x(e){const t=p(e);if(t!=null&&t.materialMap)return e;const n={materialMap:new Map};return{...e,[u]:n}}const s=Symbol("meshTextureContext");function m(e){return e&&typeof e=="object"&&s in e?e[s]:void 0}function b(e){const t=m(e);if(t!=null&&t.textureMap)return e;const n={textureMap:new Map};return{...e,[s]:n}}function a(e,t,n,i){const{loggerTag:r,stride:o}=t;return e.length%o!==0?(i.error(r,`Invalid array length, expected a multiple of ${o}`),new n([])):e}function g(e,t,n,i,r){if(!e)return e;if(e instanceof t)return a(e,i,t,r);for(const o of n)if(e instanceof o)return a(new t(e),i,t,r);if(Array.isArray(e))return a(new t(e),i,t,r);{const o=n.map(f=>`'${f.name}'`);return r.error(`Failed to set property, expected one of ${o}, but got ${e.constructor.name}`),new t([])}}function $(e,t,n){t[n]=y(e)}function y(e){const t=new Array(e.length);for(let n=0;n<e.length;n++)t[n]=e[n];return t}export{p as a,b,x as c,l as d,d as e,g as n,$ as r,m as u};
