import{Z as v,s as g,O as f,R as p,T as I,U as T}from"./index-rbwFz4i4.js";import{s as C}from"./associatedFeatureServiceUtils-w0qQwuCK.js";import{l as G}from"./fetchService-BV2YTup-.js";import{s as L,c as w,l as $,n as P,i as b,y as V,e as j}from"./loadUtils-CrnT64oV.js";import{a as F}from"./lazyLayerLoader-BqGUyDan.js";async function le(e){let{portalItem:a}=e;!a||a instanceof v||(a=new v(a));const r=await K(a);return new r.constructor({portalItem:a,...r.properties})}async function K(e){await e.load();const a=new j;return O(await W(e,a))}async function W(e,a){switch(e.type){case"3DTiles Service":return e.typeKeywords.includes("3DObject")?Z():H();case"CSV":return q();case"Feature Collection":return x(e);case"Feature Service":return k(e,a);case"Feed":return ae();case"GeoJson":return z();case"Group Layer":return re();case"Image Service":return U(e,a);case"KML":return B();case"Knowledge Graph Layer":return Q();case"Map Service":return D(e,a);case"Media Layer":return te();case"Scene Service":return J(e,a);case"Stream Service":return A();case"Video Service":return R(e,a);case"Vector Tile Service":return E();case"WCS":return X();case"WFS":return Y();case"WMS":return _();case"WMTS":return ee();default:throw new g("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function O(e){const a=e.className,r=F[a];return{constructor:await r(),properties:e.properties}}async function D(e,a){return await se(e,a)?{className:"TileLayer"}:{className:"MapImageLayer"}}async function k(e,a){const r=await N(e,a);if(typeof r=="object"){const{sourceJSON:t,className:s}=r,c={sourceJSON:t};return r.id!=null&&(c.layerId=r.id),{className:s||"FeatureLayer",properties:c}}return{className:"GroupLayer"}}async function J(e,a){var t;const r=await N(e,a,async()=>{try{if(!e.url)return[];const{serverUrl:s}=await C(e.url,{sceneLayerItem:e}),c=await a.fetchServiceMetadata(s);return(c==null?void 0:c.tables)??[]}catch{return[]}});if(typeof r=="object"){const s={};let c;if(r.id!=null?(s.layerId=r.id,c=`${e.url}/layers/${r.id}`):c=e.url,(t=e.typeKeywords)==null?void 0:t.length){for(const o of Object.keys(f))if(e.typeKeywords.includes(o))return{className:f[o]}}const n=await a.fetchServiceMetadata(c,{customParameters:await a.fetchCustomParameters(e,o=>{var l;return(l=L(o))==null?void 0:l.customParameters})});return{className:f[n==null?void 0:n.layerType]||"SceneLayer",properties:s}}if(r===!1){const s=await a.fetchServiceMetadata(e.url);if((s==null?void 0:s.layerType)==="Voxel")return{className:"VoxelLayer"}}return{className:"GroupLayer"}}async function x(e){await e.load();const a=p(e,"Map Notes"),r=p(e,"Markup");if(a||r)return{className:"MapNotesLayer"};if(p(e,"Route Layer"))return{className:"RouteLayer"};const t=await e.fetchData();return w(t)===1?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function U(e,a){var y,i,m,S,h;await e.load();const r=((y=e.typeKeywords)==null?void 0:y.map(M=>M.toLowerCase()))??[];if(r.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(r.includes("tiled imagery"))return{className:"ImageryTileLayer"};const t=await a.fetchItemData(e),s=t==null?void 0:t.layerType;if(s==="ArcGISTiledImageServiceLayer")return{className:"ImageryTileLayer"};if(s==="ArcGISImageServiceLayer")return{className:"ImageryLayer"};const c=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)}),n=(i=c.cacheType)==null?void 0:i.toLowerCase(),o=(m=c.capabilities)==null?void 0:m.toLowerCase().includes("tilesonly"),l=((h=(S=c.tileInfo)==null?void 0:S.format)==null?void 0:h.toLowerCase())??"",u=n==null&&["jpg","jpeg","png","png8","png24","png32","mixed"].includes(l);return n==="map"||u||o?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}function A(){return{className:"StreamLayer"}}async function R(e,a){return typeof await N(e,a)=="object"?{className:"VideoLayer"}:{className:"GroupLayer"}}function E(){return{className:"VectorTileLayer"}}function z(){return{className:"GeoJSONLayer"}}function H(){return{className:"IntegratedMesh3DTilesLayer"}}function Z(){return{className:"UnsupportedLayer"}}function q(){return{className:"CSVLayer"}}function B(){return{className:"KMLLayer"}}function Q(){return{className:"KnowledgeGraphLayer"}}function X(){return{className:"WCSLayer"}}function Y(){return{className:"WFSLayer"}}function _(){return{className:"WMSLayer"}}function ee(){return{className:"WMTSLayer"}}function ae(){return{className:"StreamLayer"}}function re(){return{className:"GroupLayer"}}function te(){return{className:"MediaLayer"}}async function se(e,a){const{tileInfo:r}=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)});return r}async function N(e,a,r){var l;const{url:t,type:s}=e,c=s==="Feature Service";if(!t)return{};if(/\/\d+$/.test(t)){if(c){const u=await a.fetchServiceMetadata(t,{customParameters:await a.fetchCustomParameters(e,y=>{var i;return(i=L(y))==null?void 0:i.customParameters})});return I(e,T()),{id:u.id,className:G(u.type),sourceJSON:u}}return{}}if(s==="Video Service")return!((((l=(await a.fetchServiceMetadata(t)).layers)==null?void 0:l.length)??0)>1)&&{};await e.load();let n=await a.fetchItemData(e);if(c){const{data:u,preferredHost:y}=await $(n,t,a);I(e,y);const i=d(u);if(typeof i=="object"){const m=P(u,i.id);i.className=b(m==null?void 0:m.layerType)}return i}if(s==="Scene Service"&&(n=await V(e,n,a)),w(n)>0)return d(n);const o=await a.fetchServiceMetadata(t);return r&&(o.tables=await r()),d(o)}function d(e){var a;return w(e)===1&&{id:(a=L(e))==null?void 0:a.id}}export{le as fromItem,W as selectLayerClassPath};
