const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/OperatorGeodesicBuffer-CwM_RMYT.js","assets/index-rbwFz4i4.js","assets/index-LscOx8cw.css","assets/Point2D-D2kgyQ2l.js","assets/Envelope2D-DpFkwyFI.js","assets/ProjectionTransformation-BiWvT251.js","assets/Transformation2D-DUMRLKSD.js","assets/OperatorDefinitions-DP7_WWTp.js","assets/GeometryCleaner-BEJM7I4l-CO46P0mi.js"])))=>i.map(i=>d[i]);
import{fB as f,_ as a,fy as c,fA as _,fz as l}from"./index-rbwFz4i4.js";let r;function p(){return!!r&&l()}async function P(){if(!p()){const[t,n]=await Promise.all([a(()=>import("./OperatorGeodesicBuffer-CwM_RMYT.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8])),a(()=>import("./ProjectionTransformation-BiWvT251.js").then(e=>e.aV),__vite__mapDeps([5,4,3,6,1,2,7])).then(e=>e.aG).then(({injectPe:e})=>e),c()]);r=new t.OperatorGeodesicBuffer,n(_)}}function d(t,n,e,o,u){return r.execute(t,n,e,o,u,!1,null)}function v(t,n,e,o,u,i){const s=r.executeMany(new f(t),n,e,o,u,!1,i,null);return Array.from(s)}function y(){return r.supportsCurves()}export{y as a,v as c,d as i,p as s,P as u};
