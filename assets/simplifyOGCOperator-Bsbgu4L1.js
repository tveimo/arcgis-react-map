import{fB as a}from"./index-Btyj_e22.js";import{m as p}from"./OperatorSimplifyOGC-B-tdkSgd.js";import{fromSpatialReference as u,getSpatialReference as s,fromGeometry as m,toGeometry as i}from"./apiConverter-BYW5cCQU.js";import"./Point2D-D2kgyQ2l.js";import"./ProjectionTransformation-CkhaapGK.js";import"./Envelope2D-DpFkwyFI.js";import"./Transformation2D-DUMRLKSD.js";import"./OperatorDefinitions-DP7_WWTp.js";import"./jsonConverter-5OTbKOt2.js";const o=new p;function c(t,e,r){return o.execute(t,e,r,null)}function f(t,e,r){const n=o.executeMany(new a(t),e,r,null);return Array.from(n)}function l(t,e,r,n){return o.isSimple(t,e,r,n,null)}function x(){return o.supportsCurves()}function g(t){const e=s(t);return i(c(m(t),u(e),!1),e)}function j(t){const e=t.map(m),r=s(t);return f(e,u(r),!1).map(n=>i(n,r))}function A(t,e){return l(m(t),u(s(t)),e!=null,e??null)}const B=x();export{g as execute,j as executeMany,A as isSimple,B as supportsCurves};
