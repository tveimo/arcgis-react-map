import{w as n,_ as p,D as s}from"./operatorConvexHull-DBiC-Qr3.js";import{fromGeometry as f,toGeometry as r,fromGeometries as c,fromGeometryToGXGeometry as u}from"./jsonConverter-B8tWc3ge.js";import"./index-BU6th8yW.js";import"./Point2D-D2kgyQ2l.js";import"./ProjectionTransformation-CR5swo6Y.js";import"./Envelope2D-DpFkwyFI.js";import"./Transformation2D-DUMRLKSD.js";import"./OperatorDefinitions-DP7_WWTp.js";function B(e){const o=f(e);return r(n(o.getGeometry()),o.getSpatialReference())}function C(e,o={}){const{merge:t=!1}=o,[m,a]=c(e);return p(m,t).map(i=>r(i,a))}function D(e){return s(u(e))}export{B as execute,C as executeMany,D as isConvex};
