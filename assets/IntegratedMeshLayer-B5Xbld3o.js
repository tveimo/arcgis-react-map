import{eD as y,eE as h,eF as m,ed as c,eG as u,eJ as f,eI as g,ee as v,dD as S,gj as w,gi as _,al as T,s as a,am as n,ar as i,as as o,gn as I,b_ as L,go as x,at as $}from"./index-rbwFz4i4.js";import{E as b,U as p}from"./SceneService-JvXIleM7.js";import{p as O,a as M,y as A,m as D}from"./I3SLayerDefinitions-EeNpfpTu.js";import{n as l}from"./SceneModifications-BdFHGH8w.js";import{$ as d,Z as E,w as U}from"./elevationInfoUtils-Cd1wEftL.js";import"./originUtils-BeACqsFa.js";import"./resourceUtils-CHhFT5Ae.js";import"./resourceUtils-DblmObSZ.js";import"./saveUtils-WLulC2fa.js";let t=class extends b(y(h(m(c(u(f(g(v)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles(S(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,w))}normalizeCtorArgs(e,s){return typeof e=="string"?{url:e,...s}:e}readModifications(e,s,r){this._modificationsSource={url:_(e,r),context:r}}set elevationInfo(e){e!=null&&e.mode!=="absolute-height"||this._set("elevationInfo",e),this._validateElevationInfo(e)}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const s=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(r){T(r)}if(await this._fetchService(s),this._modificationsSource!=null){const r=await l.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",r,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,s)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,s){return this._debouncedSaveOperations(p.SAVE_AS,{...s,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(p.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new a("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new a("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new a("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(e){const s="Integrated mesh layers";d(n.getLogger(this),E(s,"absolute-height",e)),d(n.getLogger(this),U(s,e))}};i([o({type:String,readOnly:!0})],t.prototype,"geometryType",void 0),i([o({type:["show","hide"]})],t.prototype,"listMode",void 0),i([o({type:["IntegratedMeshLayer"]})],t.prototype,"operationalLayerType",void 0),i([o({json:{read:!1},readOnly:!0})],t.prototype,"type",void 0),i([o({type:O,readOnly:!0})],t.prototype,"nodePages",void 0),i([o({type:[M],readOnly:!0})],t.prototype,"materialDefinitions",void 0),i([o({type:[A],readOnly:!0})],t.prototype,"textureSetDefinitions",void 0),i([o({type:[D],readOnly:!0})],t.prototype,"geometryDefinitions",void 0),i([o({readOnly:!0})],t.prototype,"serviceUpdateTimeStamp",void 0),i([o({type:l,clonable:e=>e.clone()}),I({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],t.prototype,"modifications",void 0),i([L(["web-scene","portal-item"],"modifications")],t.prototype,"readModifications",null),i([o(x)],t.prototype,"elevationInfo",null),i([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],t.prototype,"path",void 0),t=i([$("esri.layers.IntegratedMeshLayer")],t);const G=t;export{G as default};
