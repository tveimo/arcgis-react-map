import{aO as g,ar as n,as as i,b_ as u,at as y,aM as b,d5 as m,d4 as j,a6 as U}from"./index-Btyj_e22.js";let s=class extends g{constructor(a){super(a),this.container=null,this.ranges=null}readContainer(a,e){return{sourceId:e.sourceId,globalId:e.globalId}}readRanges(a,e){return[...e.gaps.map(t=>({firstUnit:t.start,numUnits:t.end-t.start+1,isGap:!0})),...e.unitIdentifiers.map(t=>({firstUnit:t.firstUnit,numUnits:t.numUnits,isGap:!1,content:{sourceId:t.sourceId,globalId:t.globalId}}))]}};n([i({type:Object})],s.prototype,"container",void 0),n([u("container",["sourceId","globalId"])],s.prototype,"readContainer",null),n([i({type:[Object]})],s.prototype,"ranges",void 0),n([u("ranges",["gaps","unitIdentifiers"])],s.prototype,"readRanges",null),s=n([y("esri.rest.networks.unitIdentifiers.support.UnitQueryResult")],s);async function h(a,e,t){const r=b(a),o=e.toJSON();e.objects&&(o.objects=JSON.stringify(e.objects));const d={...o,f:"json"},p=m({...r.query,...d}),c=j(p,{...t,method:"post"}),l=`${r.path}/unitIdentifiers/query`,{data:f}=await U(l,c);return f.objects.map(I=>s.fromJSON(I))}export{h as queryUnitIdentifiers};
