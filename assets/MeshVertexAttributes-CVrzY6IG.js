import{aN as h,aO as c,am as a,aH as l,ar as r,as as e,g4 as n,at as m}from"./index-rbwFz4i4.js";import{n as s,r as i}from"./meshProperties-BrNWSC8G.js";var g;let o=g=class extends h.ClonableMixin(c){constructor(t){super(t),this.color=null,this.position=new Float64Array(0),this.uv=null,this.normal=null,this.tangent=null}castColor(t){return s(t,Uint8Array,[Uint8ClampedArray],{loggerTag:".color=",stride:4},a.getLogger(this))}castPosition(t){return t&&t instanceof Float32Array&&a.getLogger(this).warn(".position=","Setting position attribute from a Float32Array may cause precision problems. Consider storing data in a Float64Array or a regular number array"),s(t,Float64Array,[Float32Array],{loggerTag:".position=",stride:3},a.getLogger(this))}castUv(t){return s(t,Float32Array,[Float64Array],{loggerTag:".uv=",stride:2},a.getLogger(this))}castNormal(t){return s(t,Float32Array,[Float64Array],{loggerTag:".normal=",stride:3},a.getLogger(this))}castTangent(t){return s(t,Float32Array,[Float64Array],{loggerTag:".tangent=",stride:4},a.getLogger(this))}clonePositional(){const t={position:l(this.position),normal:l(this.normal),tangent:l(this.tangent),uv:this.uv,color:this.color};return new g(t)}get usedMemory(){var t,p,u,y;return this.position.byteLength+(((t=this.uv)==null?void 0:t.byteLength)??0)+(((p=this.normal)==null?void 0:p.byteLength)??0)+(((u=this.tangent)==null?void 0:u.byteLength)??0)+(((y=this.color)==null?void 0:y.byteLength)??0)}};r([e({json:{write:i}})],o.prototype,"color",void 0),r([n("color")],o.prototype,"castColor",null),r([e({nonNullable:!0,json:{write:i}})],o.prototype,"position",void 0),r([n("position")],o.prototype,"castPosition",null),r([e({json:{write:i}})],o.prototype,"uv",void 0),r([n("uv")],o.prototype,"castUv",null),r([e({json:{write:i}})],o.prototype,"normal",void 0),r([n("normal")],o.prototype,"castNormal",null),r([e({json:{write:i}})],o.prototype,"tangent",void 0),r([n("tangent")],o.prototype,"castTangent",null),o=g=r([m("esri.geometry.support.MeshVertexAttributes")],o);export{o as c};
