import{bY as Y,bZ as K,il as D,av as f,bX as nt,f0 as ct,gd as lt,gf as H,gh as F,cF as T,h8 as U,h9 as V,dK as pt,a3 as I,e6 as _t,dL as Z,dG as ut,aF as E,ar as d,as as m,at as dt}from"./index-Btyj_e22.js";import{h as mt}from"./quantityUtils-CGixpcrU.js";import{i as w,s as L,a as gt,m as yt}from"./drawUtils-DA0ESM3S.js";import{a as vt,E as ft}from"./GraphicMover-CtKJ-AyO.js";import{e as Gt}from"./RouteLayerInteraction-ZG1mgNry.js";import{h as bt}from"./settings-D-Vkbhqy.js";import{h as Q}from"./hitTestSelectUtils-BH0EZUC2.js";import{R as xt}from"./SketchTooltipInfo-Dywi5IdF.js";import{s as wt,e as St,i as kt}from"./ExtentScaleTooltipInfo-B9j-ZpoE.js";import{i as Rt}from"./TranslateTooltipInfo-Dmvu2TNl.js";import"./GraphicsLayer-BfWfCcP3.js";import"./GraphicManipulator-BDYH_TVl.js";import"./projectPointToVector-BK33IwoO.js";import"./elevationInfoUtils-Cp7y6BMb.js";import"./drapedUtils-DwdF_0MW.js";import"./Stop-tjU0FCXm.js";import"./projectVectorToVector-DR1g-LQg.js";import"./geodeticLengthOperator-o-kLDtmL.js";import"./geodeticCurveType-CirnHLSB.js";import"./geodesicUtils-1jvsjlm_.js";import"./earcut-D9gy186-.js";import"./plane-DLQjn7Jn.js";import"./vectorStacks-D7GRVTeg.js";import"./mat3f64-B5o_lm6j.js";import"./mat4f64-q_b6UJoq.js";import"./quatf64-aQ5IuZRd.js";import"./triangle-CViB-VLO.js";import"./sphere-BWM9spN1.js";import"./lineSegment-DHEglvBo.js";import"./spatialReferenceEllipsoidUtils-hAdzTDsD.js";import"./MeshTransform-ByyEaDND.js";import"./quat-CAuRaFQ1.js";import"./axisAngleDegrees-PD2lQYHZ.js";import"./meshVertexSpaceUtils-CHeQiXId.js";import"./MeshLocalVertexSpace-DXtjzQmS.js";import"./memoize-DmxaQ-k8.js";import"./unitFormatUtils-DDltYdRb.js";import"./ByteSizeUnit-BsxeN7wM.js";function B(t,i,e,s){const o=[];for(const a of t){const h=a.slice();o.push(h);const n=i*(a[0]-s.x)-e*(a[1]-s.y)+s.x,r=e*(a[0]-s.x)+i*(a[1]-s.y)+s.y;h[0]=n,h[1]=r}return o}function z(t,i,e){const{hasM:s,hasZ:o,spatialReference:a}=t,h=i*Math.PI/180,n=Math.cos(h),r=Math.sin(h);if("xmin"in t&&(e=e??t.center,t=new Y({spatialReference:a,rings:[[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]]]})),"paths"in t){e=e??t.extent.center;const c=[];for(const l of t.paths)c.push(B(l,n,r,e));return new K({hasM:s,hasZ:o,spatialReference:a,paths:c})}if("rings"in t){e=e??t.extent.center;const c=[];for(const l of t.rings){const G=D(l),v=B(l,n,r,e);D(v)!==G&&v.reverse(),c.push(v)}return new Y({hasM:s,hasZ:o,spatialReference:a,rings:c})}if("x"in t){e=e??t;const c=new f({x:n*(t.x-e.x)-r*(t.y-e.y)+e.x,y:r*(t.x-e.x)+n*(t.y-e.y)+e.y,spatialReference:a});return t.z!=null&&(c.z=t.z),t.m!=null&&(c.m=t.m),c}return"points"in t?(e=e??t.extent.center,new nt({hasM:s,hasZ:o,points:B(t.points,n,r,e),spatialReference:a})):null}class Mt{constructor(i,e,s,o){this.graphics=i,this.mover=e,this.dx=s,this.dy=o,this.type="move-start"}}class It{constructor(i,e,s,o){this.graphics=i,this.mover=e,this.dx=s,this.dy=o,this.type="move"}}class q{constructor(i,e,s,o){this.graphics=i,this.mover=e,this.dx=s,this.dy=o,this.type="move-stop"}}class Ot{constructor(i,e,s){this.graphics=i,this.mover=e,this.angle=s,this.type="rotate-start"}}class Ct{constructor(i,e,s){this.graphics=i,this.mover=e,this.angle=s,this.type="rotate"}}class j{constructor(i,e,s){this.graphics=i,this.mover=e,this.angle=s,this.type="rotate-stop"}}class Ht{constructor(i,e,s,o){this.graphics=i,this.mover=e,this.xScale=s,this.yScale=o,this.type="scale-start"}}class Tt{constructor(i,e,s,o){this.graphics=i,this.mover=e,this.xScale=s,this.yScale=o,this.type="scale"}}class J{constructor(i,e,s,o){this.graphics=i,this.mover=e,this.xScale=s,this.yScale=o,this.type="scale-stop"}}const u=bt.transformGraphics,Et={centerIndicator:new H({style:"cross",size:u.center.size,color:u.center.color}),fill:{default:new F({color:u.fill.color,outline:{color:u.fill.outlineColor,join:"round",width:1}}),active:new F({color:u.fill.stagedColor,outline:{color:u.fill.outlineColor,join:"round",style:"dash",width:1}})},handles:{default:new H({style:"square",size:u.vertex.size,color:u.vertex.color,outline:{color:u.vertex.outlineColor,width:1}}),hover:new H({style:"square",size:u.vertex.hoverSize,color:u.vertex.hoverColor,outline:{color:u.vertex.hoverOutlineColor,width:1}})},rotator:{default:new H({style:"circle",size:u.vertex.size,color:u.vertex.color,outline:{color:u.vertex.outlineColor,width:1}}),hover:new H({style:"circle",size:u.vertex.hoverSize,color:u.vertex.hoverColor,outline:{color:u.vertex.hoverOutlineColor,width:1}})},rotatorLine:new lt({color:u.line.color,width:1})};let _=class extends ct.EventedAccessor{constructor(t){super(t),this._activeHandleGraphic=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._centerGraphic=null,this._backgroundGraphic=null,this._vertexGraphics=[],this._rotateHandleGraphic=null,this._rotateGraphicOffset=20,this._angleOfRotation=0,this._rotateLineGraphic=null,this._startInfo=null,this._totalDx=0,this._totalDy=0,this._xScale=1,this._yScale=1,this.tooltip=null,this.type="box",this.callbacks={onMoveStart(){},onMove(){},onMoveStop(){},onScaleStart(){},onScale(){},onScaleStop(){},onRotateStart(){},onRotate(){},onRotateStop(){},onGraphicClick(){}},this.enableMovement=!0,this.enableRotation=!0,this.enableScaling=!0,this.graphics=[],this.highlightName=null,this.highlightsEnabled=!0,this.layer=null,this.preserveAspectRatio=!1,this.showCenterGraphic=!0,this.symbols=Et,this.sketchOptions=new Q,this.view=null,this._getBounds=(()=>{const i=T();return(e,s)=>{e[0]=Number.POSITIVE_INFINITY,e[1]=Number.POSITIVE_INFINITY,e[2]=Number.NEGATIVE_INFINITY,e[3]=Number.NEGATIVE_INFINITY;for(const o of s){if(!o)continue;let a,h,n,r;if(o.type==="point")a=n=o.x,h=r=o.y;else if(o.type==="multipoint"){const c=U(o);[a,h,n,r]=V(i,[c])}else if(o.type==="extent")[a,h,n,r]=[o.xmin,o.ymin,o.xmax,o.ymax];else{const c=U(o);[a,h,n,r]=V(i,c)}e[0]=Math.min(a,e[0]),e[1]=Math.min(h,e[1]),e[2]=Math.max(n,e[2]),e[3]=Math.max(r,e[3])}return e}})()}initialize(){const t=this.view;this._highlightHelper=new vt({view:t}),this._setup(),this.addHandles([pt(()=>t==null?void 0:t.ready,()=>{const{layer:i,view:e}=this;Gt(e,i)},{once:!0,initial:!0}),I(()=>this.preserveAspectRatio,()=>{this._activeHandleGraphic&&(this._scaleGraphic(this._activeHandleGraphic),this._updateGraphics(),this._updateTooltip(this._activeHandleGraphic))}),I(()=>t==null?void 0:t.scale,()=>{this._updateRotateGraphic(),this._updateRotateLineGraphic()}),I(()=>this.graphics,()=>this.refresh()),I(()=>this.layer,(i,e)=>{e&&this._resetGraphics(e),this.refresh()}),I(()=>[this.highlightsEnabled,this.highlightName],()=>{var i;(i=this._highlightHelper)==null||i.removeAll(),this._setUpHighlights()}),I(()=>this.sketchOptions.tooltips.effectiveEnabled,i=>{this.tooltip=i?xt(()=>({view:t,options:this.sketchOptions.tooltips})):Z(this.tooltip)},_t),I(()=>this.view.effectiveTheme.accentColor,()=>this._updateSymbolsForTheme(),ut),this.on("move-start",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onMoveStart)==null?void 0:s.call(e,i)}),this.on("move",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onMove)==null?void 0:s.call(e,i)}),this.on("move-stop",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onMoveStop)==null?void 0:s.call(e,i)}),this.on("rotate-start",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onRotateStart)==null?void 0:s.call(e,i)}),this.on("rotate",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onRotate)==null?void 0:s.call(e,i)}),this.on("rotate-stop",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onRotateStop)==null?void 0:s.call(e,i)}),this.on("scale-start",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onScaleStart)==null?void 0:s.call(e,i)}),this.on("scale",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onScale)==null?void 0:s.call(e,i)}),this.on("scale-stop",i=>{var e,s;return(s=(e=this.callbacks)==null?void 0:e.onScaleStop)==null?void 0:s.call(e,i)})])}destroy(){this._reset(),this.tooltip=Z(this.tooltip)}get state(){var e;const t=((e=this.view)==null?void 0:e.ready)??!1,i=this.graphics.length&&this.layer;return t&&i?"active":t?"ready":"disabled"}isUIGraphic(t){return this._vertexGraphics.includes(t)||t===this._backgroundGraphic||t===this._centerGraphic||t===this._rotateHandleGraphic||t===this._rotateLineGraphic}move(t,i){if(this._mover&&this.graphics.length){for(const e of this.graphics){const s=e.geometry,o=w(s,t,i,this.view);e.geometry=o}this.refresh(),this.emit("move-stop",new q(this.graphics,null,t,i))}}scale(t,i){if(this._mover&&this.graphics.length){for(const e of this.graphics){const s=e.geometry,o=L(s,t,i);e.geometry=o}this.refresh(),this.emit("scale-stop",new J(this.graphics,null,t,i))}}rotate(t,i){if(this._mover&&this.graphics.length){if(!i){const e=this._vertexGraphics[1].geometry.x,s=this._vertexGraphics[3].geometry.y;i=new f(e,s,this.view.spatialReference)}for(const e of this.graphics){const s=e.geometry,o=z(s,t,i);e.geometry=o}this.refresh(),this.emit("rotate-stop",new j(this.graphics,null,t))}}refresh(){this._reset(),this._setup()}reset(){this.graphics=[]}_setup(){this.state==="active"&&(this._setUpHighlights(),this._setupGraphics(),this._setupMover(),this._updateGraphics())}_reset(){var t;(t=this._highlightHelper)==null||t.removeAll(),this._resetGraphicStateVars(),this._resetGraphics(),this._updateTooltip(),this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetGraphicStateVars(){this._startInfo=null,this._activeHandleGraphic=null,this._totalDx=0,this._totalDy=0,this._xScale=1,this._yScale=1,this._angleOfRotation=0}_resetGraphics(t){(t=t||this.layer)&&(t.removeMany(this._vertexGraphics),t.remove(this._backgroundGraphic),t.remove(this._centerGraphic),t.remove(this._rotateHandleGraphic),t.remove(this._rotateLineGraphic)),this._vertexGraphics.forEach(i=>!i.destroyed&&i.destroy()),!this._backgroundGraphic.destroyed&&this._backgroundGraphic.destroy(),!this._centerGraphic.destroyed&&this._centerGraphic.destroy(),!this._rotateHandleGraphic.destroyed&&this._rotateHandleGraphic.destroy(),!this._rotateLineGraphic.destroyed&&this._rotateLineGraphic.destroy(),this._vertexGraphics=[],this._backgroundGraphic=null,this._centerGraphic=null,this._rotateHandleGraphic=null,this._rotateLineGraphic=null}_setupMover(){let t=[];this.enableScaling&&(t=t.concat(this._vertexGraphics)),this.enableRotation&&t.push(this._rotateHandleGraphic),this.enableMovement&&(t=t.concat(this.graphics,this._backgroundGraphic)),this.showCenterGraphic&&t.push(this._centerGraphic),this._mover=new ft({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,view:this.view,graphics:t,callbacks:{onGraphicClick:i=>this._onGraphicClickCallback(i),onGraphicMoveStart:i=>this._onGraphicMoveStartCallback(i),onGraphicMove:i=>this._onGraphicMoveCallback(i),onGraphicMoveStop:i=>this._onGraphicMoveStopCallback(i),onGraphicPointerOver:i=>this._onGraphicPointerOverCallback(i),onGraphicPointerOut:i=>this._onGraphicPointerOutCallback(i)}})}_getStartInfo(t){const[i,e,s,o]=this._getBoxBounds(T()),a=Math.abs(s-i),h=Math.abs(o-e),n=(s+i)/2,r=(o+e)/2,{x:c,y:l}=t.geometry;return{width:a,height:h,centerX:n,centerY:r,startX:c,startY:l,graphicInfos:this._getGraphicInfos(),box:this._backgroundGraphic.geometry,rotate:this._rotateHandleGraphic.geometry}}_getGraphicInfos(){return this.graphics.map(t=>this._getGraphicInfo(t))}_getGraphicInfo(t){const i=t.geometry,[e,s,o,a]=this._getBounds(T(),[i]);return{width:Math.abs(o-e),height:Math.abs(a-s),centerX:(o+e)/2,centerY:(a+s)/2,geometry:i}}_onGraphicClickCallback(t){t.viewEvent.stopPropagation(),this.emit("graphic-click",t),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(t)}_onGraphicMoveStartCallback(t){const{_angleOfRotation:i,_xScale:e,_yScale:s,_backgroundGraphic:o,_vertexGraphics:a,_rotateHandleGraphic:h,symbols:n}=this,r=t.graphic;this._resetGraphicStateVars(),this._hideGraphicsBeforeUpdate(),o.symbol=n.fill.active,this._startInfo=this._getStartInfo(r),this._updateTooltip(r,t.viewEvent),r===h?(this.view.cursor="grabbing",this.emit("rotate-start",new Ot(this.graphics,r,i))):a.includes(r)?(this._activeHandleGraphic=r,this.emit("scale-start",new Ht(this.graphics,r,e,s))):this.emit("move-start",new Mt(this.graphics,r,t.dx,t.dy))}_onGraphicMoveCallback(t){const i=t.graphic;if(this._startInfo)if(this._vertexGraphics.includes(i))this._scaleGraphic(i),this._updateTooltip(i,t.viewEvent),this.emit("scale",new Tt(this.graphics,i,this._xScale,this._yScale));else if(i===this._rotateHandleGraphic)this._rotateGraphic(i),this._updateTooltip(i,t.viewEvent),this.emit("rotate",new Ct(this.graphics,i,this._angleOfRotation));else{const{dx:e,dy:s}=t;this._totalDx+=e,this._totalDy+=s,this._moveGraphic(i,e,s),this._updateTooltip(i,t.viewEvent),this.emit("move",new It(this.graphics,i,e,s))}}_onGraphicMoveStopCallback(t){const i=t.graphic;if(!this._startInfo)return void this.refresh();const{_angleOfRotation:e,_totalDx:s,_totalDy:o,_xScale:a,_yScale:h,_vertexGraphics:n,_rotateHandleGraphic:r}=this;this.refresh(),i===r?(this.view.cursor="pointer",this.emit("rotate-stop",new j(this.graphics,i,e))):n.includes(i)?this.emit("scale-stop",new J(this.graphics,i,a,h)):this.emit("move-stop",new q(this.graphics,i,s,o))}_onGraphicPointerOverCallback(t){const{_backgroundGraphic:i,_vertexGraphics:e,graphics:s,_rotateHandleGraphic:o,symbols:a,view:h}=this,n=t.graphic;if(this._hoveredGraphic=n,n===o)return o.symbol=a.rotator.hover,h.cursor="pointer",void this._updateTooltip(n);if(s.includes(n)||n===i)return void(h.cursor="move");if(!e.includes(n))return void(h.cursor="pointer");this._updateTooltip(n),t.graphic.symbol=a.handles.hover;const r=h.rotation;let c,l=t.index;switch(l<8&&(r>=0&&r<45?l%=8:l=r>=45&&r<90?(l+1)%8:r>=90&&r<135?(l+2)%8:r>=135&&r<180?(l+3)%8:r>=180&&r<225?(l+4)%8:r>=225&&r<270?(l+5)%8:r>=270&&r<315?(l+6)%8:(l+7)%8),l){case 0:case 4:c="nwse-resize";break;case 1:case 5:c="ns-resize";break;case 2:case 6:c="nesw-resize";break;case 3:case 7:c="ew-resize";break;default:c="pointer"}h.cursor=c}_onGraphicPointerOutCallback(t){const{_vertexGraphics:i,_rotateHandleGraphic:e,symbols:s,view:o}=this;this._hoveredGraphic=null,t.graphic===e?e.symbol=s.rotator.default:i.includes(t.graphic)&&(t.graphic.symbol=s.handles.default),o.cursor="default",this._updateTooltip()}_scaleGraphic(t){const{_startInfo:i,_vertexGraphics:e,preserveAspectRatio:s,view:o}=this,{centerX:a,centerY:h,graphicInfos:n,height:r,startX:c,startY:l,width:G}=i,{resolution:v,transform:p}=o.state,g=e.indexOf(t);g!==1&&g!==5||this._updateX(t,a),g!==3&&g!==7||this._updateY(t,h);const{x:k,y:C}=t.geometry,W=p[0]*k+p[2]*C+p[4],tt=p[1]*k+p[3]*C+p[5],R=(n==null?void 0:n.map(y=>y.geometry))??[],et=R.every(y=>y.type==="point");if((G===0||r===0)&&et){const y=O((k-c)/v),b=O((l-C)/v);for(let S=0;S<R.length;S++)this.graphics[S].geometry=w(R[S],y,b,o,!0);return this._centerGraphic.geometry=new f(k,C,o.spatialReference),void(this._backgroundGraphic.geometry=w(i.box,y,b,o,!0))}if(s){const y=O(p[0]*a+p[2]*h+p[4],2),b=O(p[1]*a+p[3]*h+p[5],2),S=O(p[0]*c+p[2]*l+p[4],2),$=O(p[1]*c+p[3]*l+p[5],2);let x=gt(y,b,S,$,W,tt);x!==0&&Math.abs(x)!==1/0||(x=1),this._xScale=this._yScale=x;for(const M of R){const N=R.indexOf(M);this.graphics[N].geometry=L(M,this._xScale,this._yScale,[a,h])}this._updateBackgroundGraphic()}else{let y=k-c,b=l-C;if(g===1||g===5?y=0:g!==3&&g!==7||(b=0),y===0&&b===0)return;const S=a+y/2,$=h+b/2;let x=(G+(c>a?y:-1*y))/G,M=(r+(l<h?b:-1*b))/r;g!==1&&g!==5&&x!==0&&Math.abs(x)!==1/0||(x=1),g!==3&&g!==7&&M!==0&&Math.abs(M)!==1/0||(M=1),this._xScale=x,this._yScale=M;const N=(S-a)/v,it=($-h)/v,st=L(i.box,this._xScale,this._yScale);this._backgroundGraphic.geometry=w(st,N,it,o,!0);const{centerX:X,centerY:A}=this._getGraphicInfo(this._backgroundGraphic),ot=(X-a)/v,at=-1*(A-h)/v;for(const P of R){const rt=R.indexOf(P),ht=L(P,this._xScale,this._yScale,[a,h]);this.graphics[rt].geometry=w(ht,ot,at,o,!0)}this._centerGraphic.geometry=new f(X,A,o.spatialReference)}}_rotateGraphic(t){var v;const{centerX:i,centerY:e,startX:s,startY:o,box:a,rotate:h}=this._startInfo,n=this.view.spatialReference,r=new f(s,o,n),c=new f(i,e,n),l=t.geometry;this._angleOfRotation=yt(r,l,c);const G=((v=this._startInfo.graphicInfos)==null?void 0:v.map(p=>p.geometry))??[];for(const p of G){const g=G.indexOf(p),k=z(p,this._angleOfRotation,c);this.graphics[g].geometry=k}this._backgroundGraphic.geometry=z(a,this._angleOfRotation,c),this._rotateHandleGraphic.geometry=z(h,this._angleOfRotation,c)}_moveGraphic(t,i,e){if(this.graphics.includes(t)){const s=this._backgroundGraphic.geometry;this._backgroundGraphic.geometry=w(s,i,e,this.view);for(const o of this.graphics)o!==t&&(o.geometry=w(o.geometry,i,e,this.view))}else if(t===this._centerGraphic){const s=this._backgroundGraphic.geometry;this._backgroundGraphic.geometry=w(s,i,e,this.view)}if(t===this._backgroundGraphic||t===this._centerGraphic)for(const s of this.graphics)s.geometry=w(s.geometry,i,e,this.view)}_setUpHighlights(){var t;this.highlightsEnabled&&this.graphics.length&&((t=this._highlightHelper)==null||t.add(this.graphics,this.highlightName))}_setupGraphics(){const{_graphicAttributes:t,symbols:i}=this;this._centerGraphic=new E({symbol:i.centerIndicator,attributes:t}),this.showCenterGraphic&&this.layer.add(this._centerGraphic),this._backgroundGraphic=new E({symbol:i.fill.default,attributes:t}),this.layer.add(this._backgroundGraphic),this._rotateLineGraphic=new E({symbol:i.rotatorLine,attributes:t}),this._rotateHandleGraphic=new E({symbol:i.rotator.default,attributes:t}),this.enableRotation&&!this._hasExtentGraphic()&&this.layer.addMany([this._rotateLineGraphic,this._rotateHandleGraphic]);for(let e=0;e<8;e++)this._vertexGraphics.push(new E({symbol:i.handles.default,attributes:t}));this.enableScaling&&this.layer.addMany(this._vertexGraphics)}_updateSymbolsForTheme(){var i,e;const t=this.view.effectiveTheme.accentColor;this.symbols={...this.symbols,fill:{active:(i=this.symbols.fill.active)==null?void 0:i.clone().set("outline.color",t),default:(e=this.symbols.fill.default)==null?void 0:e.clone().set("outline.color",t)},handles:{...this.symbols.handles,default:this.symbols.handles.default.clone().set("outline.color",t)},rotator:{...this.symbols.rotator,default:this.symbols.rotator.default.clone().set("outline.color",t)},rotatorLine:this.symbols.rotatorLine.clone().set("color",t)};for(const s of this._vertexGraphics)s.symbol=s===this._hoveredGraphic?this.symbols.handles.hover:this.symbols.handles.default;this._backgroundGraphic.symbol=this.symbols.fill.default,this._rotateHandleGraphic.symbol=this._rotateHandleGraphic===this._hoveredGraphic?this.symbols.rotator.hover:this.symbols.rotator.default,this._rotateLineGraphic.symbol=this.symbols.rotatorLine}_updateGraphics(){this._updateBackgroundGraphic(),this._updateHandleGraphics(),this._updateCenterGraphic(),this._updateRotateGraphic(),this._updateRotateLineGraphic()}_hideGraphicsBeforeUpdate(){this._centerGraphic.visible=!1,this._rotateHandleGraphic.visible=!1,this._rotateLineGraphic.visible=!1,this._vertexGraphics.forEach(t=>t.visible=!1)}_updateHandleGraphics(){const t=this._getCoordinates(!0);this._vertexGraphics.forEach((i,e)=>{const[s,o]=t[e];this._updateXY(i,s,o)})}_updateBackgroundGraphic(){const t=this._getCoordinates().map(([i,e])=>[i,e]);this._backgroundGraphic.geometry=new Y({rings:[t],spatialReference:this.view.spatialReference})}_updateCenterGraphic(){const[t,i,e,s]=this._getBoxBounds(T()),o=(e+t)/2,a=(s+i)/2;this._centerGraphic.geometry=new f(o,a,this.view.spatialReference)}_updateRotateGraphic(){if(!this._vertexGraphics.length)return;const{x:t,y:i}=this._vertexGraphics[1].geometry,e=i+this.view.state.resolution*this._rotateGraphicOffset;this._rotateHandleGraphic.geometry=new f(t,e,this.view.spatialReference)}_updateRotateLineGraphic(){var e;if(!this._vertexGraphics.length||!((e=this._rotateHandleGraphic)!=null&&e.geometry))return;const t=this._vertexGraphics[1].geometry,i=this._rotateHandleGraphic.geometry;this._rotateLineGraphic.geometry=new K({paths:[[[t.x,t.y],[i.x,i.y]]],spatialReference:this.view.spatialReference})}_updateXY(t,i,e){t.geometry=new f(i,e,this.view.spatialReference)}_updateX(t,i){const e=t.geometry.y;t.geometry=new f(i,e,this.view.spatialReference)}_updateY(t,i){const e=t.geometry.x;t.geometry=new f(e,i,this.view.spatialReference)}_hasExtentGraphic(){return this.graphics.some(t=>(t==null?void 0:t.geometry)!=null&&t.geometry.type==="extent")}_getBoxBounds(t){const i=this.graphics.map(e=>e.geometry);return this._getBounds(t,i)}_getCoordinates(t){const[i,e,s,o]=this._getBoxBounds(T());if(t){const a=(i+s)/2,h=(o+e)/2;return[[i,o],[a,o],[s,o],[s,h],[s,e],[a,e],[i,e],[i,h]]}return[[i,o],[s,o],[s,e],[i,e]]}_updateTooltip(t,i){if(this.tooltip==null)return;if(!t)return void this.tooltip.clear();const{_backgroundGraphic:e,graphics:s,_vertexGraphics:o,_rotateHandleGraphic:a}=this;t===a?this._updateRotateTooltip():o.includes(t)?this._updateScaleTooltip():(s.includes(t)||t===e)&&this._updateMoveTooltip(i)}_updateRotateTooltip(){this.tooltip!=null&&(this.tooltip.info=new wt({sketchOptions:this.sketchOptions,angle:-this._angleOfRotation}))}_updateScaleTooltip(){const{tooltip:t,_xScale:i,_yScale:e,sketchOptions:s,view:o,automaticLengthMeasurementUtils:a}=this;if(t==null)return;const h=this._getCoordinates(),n=St({topLeft:h[0],topRight:h[1],bottomRight:h[2],bottomLeft:h[3],spatialReference:o.spatialReference,automaticLengthMeasurementUtils:a});if(n==null)return;const{xSize:r,ySize:c}=n,l=Math.abs(i),G=Math.abs(e);t.info=new kt({sketchOptions:s,xScale:l,yScale:G,xSize:r,ySize:c})}_updateMoveTooltip(t){const{tooltip:i,sketchOptions:e,view:s,automaticLengthMeasurementUtils:o}=this;if(i==null)return;const a=new Rt({sketchOptions:e});if(t){const{x:h,y:n}=t.origin,r=s.toMap(t),c=s.toMap({x:h,y:n}),l=o.autoDistanceBetweenPoints2D(c,r);a.distance=l??mt}i.info=a}};function O(t,i=2){return Number.parseFloat(t.toFixed(i))}d([m()],_.prototype,"tooltip",void 0),d([m({readOnly:!0})],_.prototype,"type",void 0),d([m()],_.prototype,"callbacks",void 0),d([m()],_.prototype,"enableMovement",void 0),d([m()],_.prototype,"enableRotation",void 0),d([m()],_.prototype,"enableScaling",void 0),d([m()],_.prototype,"graphics",void 0),d([m()],_.prototype,"highlightName",void 0),d([m()],_.prototype,"highlightsEnabled",void 0),d([m()],_.prototype,"layer",void 0),d([m()],_.prototype,"preserveAspectRatio",void 0),d([m()],_.prototype,"showCenterGraphic",void 0),d([m({readOnly:!0})],_.prototype,"state",null),d([m()],_.prototype,"symbols",void 0),d([m({type:Q})],_.prototype,"sketchOptions",void 0),d([m({constructOnly:!0})],_.prototype,"view",void 0),d([m({constructOnly:!0})],_.prototype,"automaticLengthMeasurementUtils",void 0),_=d([dt("esri.views.draw.support.Box")],_);const ve=_;export{ve as default};
