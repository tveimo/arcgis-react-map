import{aw as s,s as p,aH as i}from"./index-cGsjYgnw.js";import{c as m}from"./MeshVertexAttributes-9TJiGg0h.js";import{e as a}from"./meshProperties-BrNWSC8G.js";import{B as l}from"./vertexSpaceConversion-Chd8fRCW.js";import"./mat3f64-B5o_lm6j.js";import"./mat4f64-q_b6UJoq.js";import"./spatialReferenceEllipsoidUtils-Caqgk3vX.js";import"./computeTranslationToOriginAndRotation-BpriSjts.js";import"./projectPointToVector-ChbrHkLb.js";import"./meshVertexSpaceUtils-CNmYJZrD.js";import"./MeshLocalVertexSpace-CwNqa7Fs.js";import"./vec3-CQRt6PU7.js";import"./BufferView-UaDNtq90.js";import"./vec4-RF0J0_Yu.js";async function j(r,o,t){await Promise.resolve(),s(t);const e=l(r,o,{useEllipsoid:t==null?void 0:t.useEllipsoid});if(!e)throw new p("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");return r.clone(a(void 0,{vertexAttributes:new m({...e,uv:i(r.vertexAttributes.uv),color:i(r.vertexAttributes.color)}),vertexSpace:o,transform:null}))}export{j as convertMeshVertexSpace};
