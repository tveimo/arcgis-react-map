import{a6 as v,s as y,ar as n,as as u,gb as j,ao as _,b_ as f,ae as x,iv as P,iw as O,at as $,a2 as K,ix as L,p as V,iy as U,iz as M,am as z,Z as C,W as k,o as E}from"./index-BU6th8yW.js";import{i as A}from"./originUtils-DrfbVDlU.js";import{p as q,n as F}from"./resourceUtils-DwbwznHw.js";import{s as J}from"./saveUtils-CkdCsJRp.js";async function B(a,d,s,r,t,i,e){let l=null;if(s!=null){const h=`${a}/nodepages/`,m=h+Math.floor(s.rootIndex/s.nodesPerPage);try{return{type:"page",rootPage:(await v(m,{query:{f:"json",...r,token:t},responseType:"json",signal:e})).data,rootIndex:s.rootIndex,pageSize:s.nodesPerPage,lodMetric:s.lodSelectionMetricType,urlPrefix:h}}catch(N){i!=null&&i.warn("#fetchIndexInfo()","Failed to load root node page. Falling back to node documents.",m,N),l=N}}if(!d)return null;const o=d==null?void 0:d.split("/").pop(),p=`${a}/nodes/`,c=p+o;try{return{type:"node",rootNode:(await v(c,{query:{f:"json",...r,token:t},responseType:"json",signal:e})).data,urlPrefix:p}}catch(h){throw new y("sceneservice:root-node-missing","Root node missing.",{pageError:l,nodeError:h,url:c})}}const G=a=>{const d=a;let s=class extends d{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.url=null,this.indexInfo=null,this._debouncedSaveOperations=K(async(r,t,i)=>{switch(r){case S.SAVE:return this._save(t);case S.SAVE_AS:return this._saveAs(i,t)}})}readSpatialReference(r,t){return I(t)}readFullExtent(r,t,i){if(r!=null&&typeof r=="object"){const o=r.spatialReference==null?{...r,spatialReference:I(t)}:r;return x.fromJSON(o,i)}const e=t.store,l=I(t);return l==null||(e==null?void 0:e.extent)==null||!Array.isArray(e.extent)||e.extent.some(o=>o<w)?null:new x({xmin:e.extent[0],ymin:e.extent[1],xmax:e.extent[2],ymax:e.extent[3],spatialReference:l})}parseVersionString(r){const t={major:Number.NaN,minor:Number.NaN,versionString:r},i=r.split(".");return i.length>=2&&(t.major=parseInt(i[0],10),t.minor=parseInt(i[1],10)),t}readVersion(r,t){const i=t.store,e=i.version!=null?i.version.toString():"";return this.parseVersionString(e)}readTitlePortalItem(r){return this.sublayerTitleMode!=="item-title"?void 0:r}readTitleService(r,t){var l;const i=(l=this.portalItem)==null?void 0:l.title;if(this.sublayerTitleMode==="item-title")return this.url?L(this.url,t.name):t.name;let e=t.name;if(!e&&this.url){const o=V(this.url);o!=null&&(e=o.title)}return this.sublayerTitleMode==="item-title-and-service-name"&&i&&(e=i+" - "+e),U(e)}get parsedUrl(){return M(this,{separator:"layers"})}async _fetchIndexAndUpdateExtent(r,t){var i;this.indexInfo=B(((i=this.parsedUrl)==null?void 0:i.path)??"",this.rootNode,r,this.customParameters,this.apiKey,z.getLogger(this),t),this.fullExtent==null||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(r){var t,i,e,l;if((r==null?void 0:r.type)==="page"){const o=r.rootIndex%r.pageSize,p=(i=(t=r.rootPage)==null?void 0:t.nodes)==null?void 0:i[o];if(((e=p==null?void 0:p.obb)==null?void 0:e.center)==null||p.obb.halfSize==null)throw new y("sceneservice:invalid-node-page","Invalid node page.");if(p.obb.center[0]<w||this.fullExtent==null||this.fullExtent.hasZ)return;const c=p.obb.halfSize,h=p.obb.center[2],m=Math.sqrt(c[0]*c[0]+c[1]*c[1]+c[2]*c[2]);this.fullExtent.zmin=h-m,this.fullExtent.zmax=h+m}else if((r==null?void 0:r.type)==="node"){const o=(l=r.rootNode)==null?void 0:l.mbs;if(!Array.isArray(o)||o.length!==4||o[0]<w)return;const p=o[2],c=o[3],{fullExtent:h}=this;h&&(h.zmin=p-c,h.zmax=p+c)}}async _fetchService(r){if(this.url==null)throw new y("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(this.layerId==null&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(r);t!=null&&(this.layerId=t)}return this._fetchServiceLayer(r)}async _fetchFirstLayerId(r){const t=await v(this.url??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(r){var l;const t=await v(((l=this.parsedUrl)==null?void 0:l.path)??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r});t.ssl&&this.url&&(this.url=this.url.replace(/^http:/i,"https:"));let i=!1;if(t.data.layerType&&t.data.layerType==="Voxel"&&(i=!0),i)return this._fetchVoxelServiceLayer();const e=t.data;this.read(e,this._getServiceContext()),this.validateLayer(e)}async _fetchVoxelServiceLayer(r){var i;const t=(await v(((i=this.parsedUrl)==null?void 0:i.path)+"/layer",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r})).data;this.read(t,this._getServiceContext()),this.validateLayer(t)}_getServiceContext(){var r;return{origin:"service",portalItem:this.portalItem,portal:(r=this.portalItem)==null?void 0:r.portal,url:this.parsedUrl}}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&typeof this.beforeSave=="function"&&await this.beforeSave()}validateLayer(r){}async _saveAs(r,t){const i={...T,...t};let e=C.from(r);if(!e)throw new y("sceneservice:portal-item-required","_saveAs() requires a portal item to save to");e.id&&(e=e.clone(),e.id=null);const l=e.portal||k.getDefault();await this._ensureLoadBeforeSave(),e.type=b,e.portal=l;const o=E(e,"portal-item",!0),p={layers:[this.write({},o)]};return await Promise.all(o.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(p,o,i),this.url&&(e.url=this.url),e.title||(e.title=this.title),R(e,i,g.newItem),await l.signIn(),await l.user.addItem({item:e,folder:i==null?void 0:i.folder,data:p}),await q(this.resourceReferences,o),this.portalItem=e,A(o),o.portalItem=e,e}async _save(r){const t={...T,...r};if(!this.portalItem)throw new y("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(this.portalItem.type!==b)throw new y("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${b}"`);await this._ensureLoadBeforeSave();const i=E(this.portalItem,"portal-item",!0),e={layers:[this.write({},i)]};return await Promise.all(i.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(e,i,t),this.url&&(this.portalItem.url=this.url),this.portalItem.title||(this.portalItem.title=this.title),R(this.portalItem,t,g.existingItem),await F(this.portalItem,e,this.resourceReferences,i),A(i),this.portalItem}async _validateAgainstJSONSchema(r,t,i){const e=i==null?void 0:i.validationOptions;J(t,{errorName:"sceneservice:save"},{ignoreUnsupported:e==null?void 0:e.ignoreUnsupported,supplementalUnsupportedErrors:["scenemodification:unsupported"]}),e==null||e.enabled}};return n([u(j)],s.prototype,"id",void 0),n([u({type:_})],s.prototype,"spatialReference",void 0),n([f("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],s.prototype,"readSpatialReference",null),n([u({type:x})],s.prototype,"fullExtent",void 0),n([f("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],s.prototype,"readFullExtent",null),n([u({readOnly:!0,type:P})],s.prototype,"heightModelInfo",void 0),n([u({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],s.prototype,"minScale",void 0),n([u({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],s.prototype,"maxScale",void 0),n([u({readOnly:!0})],s.prototype,"version",void 0),n([f("version",["store.version"])],s.prototype,"readVersion",null),n([u({type:String,json:{read:{source:"copyrightText"}}})],s.prototype,"copyright",void 0),n([u({type:String,json:{read:!1}})],s.prototype,"sublayerTitleMode",void 0),n([u({type:String})],s.prototype,"title",void 0),n([f("portal-item","title")],s.prototype,"readTitlePortalItem",null),n([f("service","title",["name"])],s.prototype,"readTitleService",null),n([u({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],s.prototype,"layerId",void 0),n([u(O({separator:"layers"}))],s.prototype,"url",void 0),n([u({readOnly:!0})],s.prototype,"parsedUrl",null),n([u({readOnly:!0})],s.prototype,"store",void 0),n([u({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],s.prototype,"rootNode",void 0),s=n([$("esri.layers.mixins.SceneService")],s),s},w=-1e38;function I(a){if(a.spatialReference!=null)return _.fromJSON(a.spatialReference);const d=a.store,s=d.indexCRS||d.geographicCRS,r=s&&parseInt(s.slice(s.lastIndexOf("/")+1),10);return r!=null?new _(r):null}function R(a,d,s){a.typeKeywords||(a.typeKeywords=[]);const r=d.getTypeKeywords();for(const t of r)a.typeKeywords.push(t);a.typeKeywords&&(a.typeKeywords=a.typeKeywords.filter((t,i,e)=>e.indexOf(t)===i),s===g.newItem&&(a.typeKeywords=a.typeKeywords.filter(t=>t!=="Hosted Service")))}var g;(function(a){a[a.existingItem=0]="existingItem",a[a.newItem=1]="newItem"})(g||(g={}));const b="Scene Service",T={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var S;(function(a){a[a.SAVE=0]="SAVE",a[a.SAVE_AS=1]="SAVE_AS"})(S||(S={}));export{G as E,S as U,B as r};
