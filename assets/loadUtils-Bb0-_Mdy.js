import{t as m,l as p}from"./fetchService-Cqs3r9_l.js";import{s as b}from"./associatedFeatureServiceUtils-CCLPDrLN.js";import{U as h}from"./index-Btyj_e22.js";class w{constructor(){this._serviceMetadatas=new Map,this._itemDatas=new Map}async fetchServiceMetadata(a,e){const r=this._serviceMetadatas.get(a);if(r)return r;const s=await m(a,e);return this._serviceMetadatas.set(a,s),s}async fetchItemData(a){const{id:e}=a;if(!e)return null;const{_itemDatas:r}=this;if(r.has(e))return r.get(e);const s=await a.fetchData();return r.set(e,s),s}async fetchCustomParameters(a,e){const r=await this.fetchItemData(a);return r&&typeof r=="object"&&(e?e(r):r.customParameters)||null}}function i(t){const a={id:t.id,name:t.name},e=p(t.type);return e!=="FeatureLayer"&&(a.layerType=e),a}async function S(t,a,e){var s,u,c;let r;if((t==null?void 0:t.layers)==null||(t==null?void 0:t.tables)==null){const l=await e.fetchServiceMetadata(a,{customParameters:(s=y(t))==null?void 0:s.customParameters});r=h(),(t=t||{}).layers=t.layers||((u=l==null?void 0:l.layers)==null?void 0:u.map(i)),t.tables=t.tables||((c=l==null?void 0:l.tables)==null?void 0:c.map(i))}return{data:t,preferredHost:r}}function y(t){if(!t)return null;const{layers:a,tables:e}=t;return a!=null&&a.length?a[0]:e!=null&&e.length?e[0]:null}function I(t,a){return a==null?null:[...t.layers||[],...t.tables||[]].find(e=>e.id===a)}function v(t,a){return[...t.layers||[],...t.tables||[]].filter(({layerType:e})=>e?a.includes(e):a.includes("ArcGISFeatureLayer"))}function M(t){var a,e;return(((a=t==null?void 0:t.layers)==null?void 0:a.length)??0)+(((e=t==null?void 0:t.tables)==null?void 0:e.length)??0)}function P(t){switch(t){case"catalog":return["CatalogLayer"];case"feature":return["ArcGISFeatureLayer"];case"oriented-imagery":return["OrientedImageryLayer"];case"subtype-group":return["SubtypeGroupLayer","SubtypeGroupTable"]}return null}function G(t){switch(t){case"CatalogLayer":return"CatalogLayer";case"OrientedImageryLayer":return"OrientedImageryLayer";case"SubtypeGroupLayer":case"SubtypeGroupTable":return"SubtypeGroupLayer"}return"FeatureLayer"}async function D(t,a,e){var u,c,l,f;if(!(t!=null&&t.url))return a??{};if(a??(a={}),!a.layers){const n=await e.fetchServiceMetadata(t.url);a.layers=(u=n.layers)==null?void 0:u.map(i)}const{serverUrl:r,portalItem:s}=await b(t.url,{sceneLayerItem:t,customParameters:(c=y(a))==null?void 0:c.customParameters}).catch(()=>({serverUrl:null,portalItem:null}));if(r==null)return a.tables=[],a;if(!a.tables&&s){const n=await s.fetchData().catch(()=>null);if(n!=null&&n.tables)a.tables=n.tables.map(i);else{const o=await e.fetchServiceMetadata(r,{customParameters:(l=y(n))==null?void 0:l.customParameters}).catch(()=>null);a.tables=(f=o==null?void 0:o.tables)==null?void 0:f.map(i)}}if(a.tables)for(const n of a.tables)n.url=`${r}/${n.id}`;return a}export{i as a,M as c,w as e,G as i,S as l,I as n,P as o,y as s,v as u,D as y};
