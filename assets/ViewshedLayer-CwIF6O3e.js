import{aO as P,aN as C,l7 as G,ar as i,as as s,av as H,g4 as J,dm as b,l8 as U,at as j,a3 as A,e6 as D,aZ as L,e3 as Y,l9 as Z,ae as k,h as B,bp as q,e4 as I,du as F,eE as K,eG as Q,ee as W,d2 as X}from"./index-BU6th8yW.js";import{c as ee,b as te}from"./featureReferenceUtils-DM-PYV_Z.js";import{l as ie}from"./Analysis-B4OLCw9v.js";import"./sphere-D5EejnPf.js";import"./mat3f64-B5o_lm6j.js";import"./vectorStacks-kQzuygRx.js";import"./mat4f64-q_b6UJoq.js";import"./quatf64-aQ5IuZRd.js";import"./IntersectorType-gQim6TH1.js";let a=class extends P.JSONSupportMixin(C){constructor(e){super(e),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45,this.feature=null}get valid(){return this.observer!=null&&this.farDistance>0}equals(e){return G(this.observer,e.observer)&&this.farDistance===e.farDistance&&this.heading===e.heading&&this.tilt===e.tilt&&this.horizontalFieldOfView===e.horizontalFieldOfView&&this.verticalFieldOfView===e.verticalFieldOfView&&ee(this.feature,e.feature)}};i([s({type:H,json:{write:{isRequired:!0}}})],a.prototype,"observer",void 0),i([s({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],a.prototype,"farDistance",void 0),i([s({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}}),J(e=>b.normalize(U(e),void 0,!0))],a.prototype,"heading",void 0),i([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"tilt",void 0),i([s({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}})],a.prototype,"horizontalFieldOfView",void 0),i([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"verticalFieldOfView",void 0),i([s(te)],a.prototype,"feature",void 0),i([s({readOnly:!0,json:{read:!1}})],a.prototype,"valid",null),a=i([j("esri.analysis.Viewshed")],a);const _=L.ofType(a);let l=class extends ie{constructor(t){super(t),this.type="viewshed",this._extent=null}initialize(){this.addHandles(A(()=>this._computeExtent(),t=>{t.pending==null&&(this._extent=t.extent)},D))}get viewsheds(){return this._get("viewsheds")||new _}set viewsheds(t){this._set("viewsheds",Y(t,this.viewsheds,_))}get spatialReference(){for(const t of this.viewsheds)if(t.observer!=null)return t.observer.spatialReference;return null}get extent(){return this._extent}get valid(){return this.viewsheds.every(t=>t.valid)}async waitComputeExtent(){const t=this._computeExtent();t.pending!=null&&await t.pending}_computeExtent(){const{spatialReference:t}=this;if(t==null)return{pending:null,extent:null};const u=this.viewsheds.filter(r=>r.observer!=null),d=u.map(r=>r.observer).toArray(),p=Z(d,t);return p.pending!=null?{pending:p.pending,extent:null}:{pending:null,extent:p.geometries.map((r,h)=>{const O=u.at(h);return r!=null&&O!=null?this._computeViewshedExtent(this.viewsheds.at(h),r):null}).filter(r=>r!=null).reduce((r,h)=>se(r,h),null)}}_computeViewshedExtent(t,u){const{farDistance:d,heading:p,tilt:r,horizontalFieldOfView:h,verticalFieldOfView:O}=t,{spatialReference:m}=u,V=h/2,$=O/2,z=d/m.metersPerUnit,S=[b.normalize(p-V),p,b.normalize(p+V)],c=k.fromPoint(u),g=f=>{const y=S.map(o=>b.normalize(o-f));if(y[0]>y[2]||h===360)return z;const w=y.map(o=>Math.abs(o>180?360-o:o)).reduce((o,x)=>o>x?x:o);return w>90?0:z*Math.cos(q(w))};c.xmax+=g(90),c.xmin-=g(-90),c.ymax+=g(0),c.ymin-=g(180);const v=u.z;if(v!=null){let f=v,y=v;const w=r-90,o=F(w+$,-90,90),x=F(w-$,-90,90),N=m!=null&&m.isGeographic?d:z;f+=N*R(o),y+=N*R(x);const T=M($)*N,E=R(w)*T*(1-M(V));r<90&&(f-=E),r>90&&(y-=E),c.zmax=Math.max(f,v),c.zmin=Math.min(y,v)}return c}equals(t){return this===t||super.equals(t)&&B(this.viewsheds.toArray(),t.viewsheds.toArray(),(u,d)=>u.equals(d))}clear(){this.viewsheds.removeAll()}};function se(e,t){return e==null?t:t==null?e:e.union(t)}function M(e){return Math.cos(q(e))}function R(e){return Math.sin(q(e))}i([s({type:["viewshed"]})],l.prototype,"type",void 0),i([s({cast:I,type:_,nonNullable:!0})],l.prototype,"viewsheds",null),i([s({readOnly:!0})],l.prototype,"spatialReference",null),i([s()],l.prototype,"_extent",void 0),i([s()],l.prototype,"extent",null),i([s({readOnly:!0})],l.prototype,"valid",null),l=i([j("esri.analysis.ViewshedAnalysis")],l);let n=class extends K(Q(W)){constructor(e){super(e),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new l,this.opacity=1}initialize(){this.addHandles(A(()=>this.source,(e,t)=>{t!=null&&t.parent===this&&(t.parent=null),e!=null&&(e.parent=this)},D))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(e){this.source===e&&(this.source=new l)}get analysis(){return this.source}set analysis(e){this.source=e}get viewsheds(){return this.source.viewsheds}set viewsheds(e){this.source.viewsheds=e}writeViewsheds(e,t,u,d){t.viewsheds=e.filter(p=>p.valid).toJSON(d)}};i([s({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),i([s({type:["ViewshedLayer"]})],n.prototype,"operationalLayerType",void 0),i([s({type:l,nonNullable:!0})],n.prototype,"source",void 0),i([s({readOnly:!0})],n.prototype,"spatialReference",null),i([s({readOnly:!0})],n.prototype,"fullExtent",null),i([s({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],n.prototype,"opacity",void 0),i([s({type:["show","hide"]})],n.prototype,"listMode",void 0),i([s({type:L.ofType(a),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],n.prototype,"viewsheds",null),i([X("web-scene","viewsheds")],n.prototype,"writeViewsheds",null),n=i([j("esri.layers.ViewshedLayer")],n);const ye=n;export{ye as default};
