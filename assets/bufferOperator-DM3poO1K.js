import{h0 as c,L as x}from"./index-Btyj_e22.js";import{f as y,l as G}from"./operatorBuffer-B8dwoTX8.js";import{getSpatialReference as f,fromGeometry as g,toGeometry as u,fromGeometries as N}from"./jsonConverter-5OTbKOt2.js";import"./Point2D-D2kgyQ2l.js";import"./ProjectionTransformation-CkhaapGK.js";import"./Envelope2D-DpFkwyFI.js";import"./Transformation2D-DUMRLKSD.js";import"./OperatorDefinitions-DP7_WWTp.js";import"./GeometryCleaner-BEJM7I4l-CO46P0mi.js";import"./OperatorSimplifyOGC-B-tdkSgd.js";import"./OperatorGeneralize-BPH3-DTm.js";function L(o,e,a={}){const{unit:t}=a,m=f(o);t&&m&&(e=c(e,t,m));const i=g(o),r=i.getSpatialReference();return u(y(i.getGeometry(),r,e),r)}function P(o,e,a={}){let{maxDeviation:t=NaN,maxVerticesInFullCircle:m=96,union:i=!1,unit:r}=a;const n=f(o);r&&n&&(e=e.map(p=>c(p,r,n)),t&&(t=c(t,r,n)));const[l,s]=N(o);return G(l,s,e,t,m,i).map(p=>u(p,s)).filter(x)}export{L as execute,P as executeMany};
