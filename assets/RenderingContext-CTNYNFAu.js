import{b as k}from"./WGLContainer-DJMUa6oo.js";import{glslifyDefineMap as tt,ProgramCache as et}from"./webglDeps-Dv6wpIOF.js";import{t as st}from"./Utils-BRojpG24.js";import{o as S,a as z}from"./ProgramTemplate-ClOphZSE.js";import{f3 as A,jn as O,jy as d,cv as B,cu as D,ct as F,cs as Y,k0 as C,j$ as T,pG as g,ji as m,jo as l,a4 as v,dS as j,dW as H,dV as I,dY as rt,dU as q,dT as it,pH as at,pI as nt,dX as lt,jj as M,hK as G,jp as b,pJ as U,jH as p,pK as w,ng as N,pL as ot,jl as c,cK as ht,pM as ft,pN as L,aj as ut,jk as x}from"./index-cGsjYgnw.js";import{t as Z}from"./VertexElementDescriptor-BLyltQyJ.js";import{B as _t,a as ct,Q as dt}from"./renderState-BEh_Q5tn.js";import{n as X}from"./glsl-Cj7KC756.js";import{R as Q}from"./FramebufferObject-Cytd8ppB.js";import{t as J,f as Et,a as gt}from"./testSVGPremultipliedAlpha-DcW96snx.js";const bt=a=>{let t="";t+=a[0].toUpperCase();for(let e=1;e<a.length;e++){const s=a[e];s===s.toUpperCase()?(t+="_",t+=s):t+=s.toUpperCase()}return t},pt=a=>{const t={};for(const e in a)t[bt(e)]=a[e];return tt(t)},Lt=(a,t,e,s)=>{const r=a+a.slice(Math.max(0,a.lastIndexOf("/"))),n=t+t.slice(Math.max(0,t.lastIndexOf("/"))),i=pt(s);return{attributes:e,shaders:{vertexShader:i+k(`${r}.vert`),fragmentShader:i+k(`${n}.frag`)}}};let Xt=class{constructor(t,e){this._rctx=t,this._attributes=[{name:"position",offset:0,type:A.SHORT,count:2}],this.layout={hash:st(this._attributes),attributes:this._attributes,stride:4},this._vertexBuffer=S.createVertex(t,O.STATIC_DRAW,new Uint16Array(e)),this._vao=new z(t,new Map([["a_position",0]]),new Map([["geometry",[new Z("a_position",2,A.SHORT,0,4)]]]),new Map([["geometry",this._vertexBuffer]])),this._count=e.length/2}bind(){this._rctx.bindVAO(this._vao)}unbind(){this._rctx.bindVAO(null)}dispose(){this._vao.dispose()}draw(){this._rctx.bindVAO(this._vao),this._rctx.drawArrays(d.TRIANGLE_STRIP,0,this._count)}};class W{constructor(){this.blend=!1,this.blendColor={r:0,g:0,b:0,a:0},this.blendFunction={srcRGB:B.ONE,dstRGB:B.ZERO,srcAlpha:B.ONE,dstAlpha:B.ZERO},this.blendEquation={mode:D.ADD,modeAlpha:D.ADD},this.colorMask={r:!0,g:!0,b:!0,a:!0},this.faceCulling=!1,this.cullFace=F.BACK,this.frontFace=Y.CCW,this.scissorTest=!1,this.scissorRect={x:0,y:0,width:0,height:0},this.depthTest=!1,this.depthFunction=C.LESS,this.clearDepth=1,this.depthWrite=!0,this.depthRange={zNear:0,zFar:1},this.viewport=null,this.stencilTest=!1,this.polygonOffsetFill=!1,this.polygonOffset=[0,0],this.stencilFunction={face:F.FRONT_AND_BACK,func:C.ALWAYS,ref:0,mask:1},this.clearStencil=0,this.stencilWriteMask=1,this.stencilOperation={face:F.FRONT_AND_BACK,fail:T.KEEP,zFail:T.KEEP,zPass:T.KEEP},this.clearColor={r:0,g:0,b:0,a:0},this.program=null,this.vertexBuffer=null,this.indexBuffer=null,this.uniformBuffer=null,this.pixelPackBuffer=null,this.pixelUnpackBuffer=null,this.copyReadBuffer=null,this.copyWriteBuffer=null,this.transformFeedbackBuffer=null,this.uniformBufferBindingPoints=new Array,this.transformBufferBindingPoints=new Array,this.readFramebuffer=null,this.drawFramebuffer=null,this.drawBuffers={defaultFramebuffer:[g.BACK],fbos:new WeakMap},this.renderbuffer=null,this.activeTexture=0,this.textureUnitMap=new Array,this.vertexArrayObject=null}}let Ft=class{constructor(){for(this._current=new Array,this._allocations=null;this._current.length<m.COUNT;)this._current.push(0)}increment(t,e,s=1){var r;this._current[t]+=s,(r=this._allocations)==null||r.add(e)}decrement(t,e,s=1){var r;this._current[t]-=s,(r=this._allocations)==null||r.remove(e)}get current(){return this._current}get total(){return this.current.reduce((t,e,s)=>t+(s<m.UNCOUNTED?e:0),0)}get resourceInformation(){var e;let t="";if(this.total>0){t+=`Live objects:
`;for(let s=0;s<m.COUNT;++s){const r=this._current[s];r>0&&(t+=`${m[s]}: ${r}
`)}}return t+=(e=this._allocations)==null?void 0:e.resetLog(),t}},$=class{constructor(t,e,s){const r=e.textureFilterAnisotropic;this.versionString=t.getParameter(t.VERSION),this.maxVertexTextureImageUnits=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxVertexAttributes=t.getParameter(t.MAX_VERTEX_ATTRIBS);const n=s.maxAnisotropy??1/0;this.maxMaxAnisotropy=r?Math.min(t.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY),n):1,this.maxTextureImageUnits=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE),this.maxPreferredTexturePixels=s.maxPreferredTexturePixels??1/0,this.maxRenderbufferSize=t.getParameter(t.MAX_RENDERBUFFER_SIZE),this.maxViewportDims=t.getParameter(t.MAX_VIEWPORT_DIMS),this.maxUniformBufferBindings=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS),this.maxVertexUniformBlocks=t.getParameter(t.MAX_VERTEX_UNIFORM_BLOCKS),this.maxFragmentUniformBlocks=t.getParameter(t.MAX_FRAGMENT_UNIFORM_BLOCKS),this.maxUniformBlockSize=t.getParameter(t.MAX_UNIFORM_BLOCK_SIZE),this.uniformBufferOffsetAlignment=t.getParameter(t.UNIFORM_BUFFER_OFFSET_ALIGNMENT),this.maxArrayTextureLayers=t.getParameter(t.MAX_ARRAY_TEXTURE_LAYERS),this.maxSamples=t.getParameter(t.MAX_SAMPLES),this.maxDrawBuffers=t.getParameter(t.MAX_DRAW_BUFFERS)}};class y{constructor(t){this._rctx=t,this._indexBuffer=this._createIndexbuffer(),this._program=this._createHelperProgram()}static getShaderSources(){return{vertex:`#version 300 es
    precision highp float;

    void main(void) {
      gl_Position = vec4(0.0, 0.0, float(gl_VertexID)-2.0, 1.0);
    }`,fragment:`#version 300 es
    precision highp float;

    out vec4 fragColor;

    void main(void) {
      fragColor = vec4(0.0, 0.0, 0.0, 1.0);
    }`}}_createHelperProgram(){const t=y.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}_createIndexbuffer(){return S.createIndex(this._rctx,O.STATIC_DRAW,new Uint32Array([0]))}run(){this._program.compiled&&this._indexBuffer&&(this._rctx.bindVAO(null),this._rctx.useProgram(this._program),this._rctx.bindBuffer(this._indexBuffer,l.ELEMENT_ARRAY_BUFFER),this._rctx.drawElements(d.POINTS,1,A.UNSIGNED_INT,0))}dispose(){this._program.dispose(),this._indexBuffer.dispose()}get test(){}}class Rt extends J{constructor(t){super(),this._rctx=t,this._helperProgram=null,v("mac")&&v("chrome")&&(this._program=this._prepareProgram(),this._helperProgram=this._prepareHelperProgram())}dispose(){var t;super.dispose(),(t=this._helperProgram)==null||t.dispose(),this._helperProgram=null}_test(t){const e=this._rctx,s=e.getBoundFramebufferObject(),{x:r,y:n,width:i,height:o}=e.getViewport();e.resetState();const h=new j(1);h.wrapMode=H.CLAMP_TO_EDGE,h.samplingMode=I.NEAREST;const u=new Q(e,h),_=S.createIndex(this._rctx,O.STATIC_DRAW,new Uint8Array([0]));e.bindFramebuffer(u),e.setViewport(0,0,1,1),e.useProgram(this._helperProgram),e.bindBuffer(_,l.ELEMENT_ARRAY_BUFFER),e.drawElements(d.POINTS,1,A.UNSIGNED_BYTE,0),e.useProgram(t),e.bindVAO(null),e.drawArrays(d.TRIANGLES,0,258);const E=new Uint8Array(4);return u.readPixels(0,0,1,1,rt.RGBA,q.UNSIGNED_BYTE,E),e.setViewport(r,n,i,o),e.bindFramebuffer(s),u.dispose(),_.dispose(),E[0]===255}_prepareProgram(){const e=`#version 300 es
    precision highp float;

    out float triangleId;

    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));

    void main(void) {
      triangleId = floor(float(gl_VertexID)/3.0);

      vec3 position = triangleVertices[gl_VertexID % 3];
      float offset = triangleId / ${X.float(85)};
      position.z = 0.5 - offset;

      gl_Position = vec4(position, 1.0);
    }
    `,s=`#version 300 es
    precision highp float;

    in float triangleId;

    out vec4 fragColor;

    void main(void) {
      fragColor = triangleId == ${X.float(85)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);
    }
    `;return this._rctx.programCache.acquire(e,s,new Map([]))}_prepareHelperProgram(){const t=y.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}}class Bt extends J{constructor(t){var r,n;if(super(),this._rctx=t,!t.gl||!((r=t.capabilities.colorBufferFloat)!=null&&r.textureFloat&&((n=t.capabilities.colorBufferFloat)!=null&&n.floatBlend)))return;const e=`
    precision highp float;
    attribute vec2 a_pos;

    void main() {
      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);
    }
    `,s=`
     precision highp float;

     void main() {
      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);
     }
    `;this._program=t.programCache.acquire(e,s,new Map([["a_pos",0]]))}_test(t){const e=this._rctx,s=new j(1);s.wrapMode=H.CLAMP_TO_EDGE,s.dataType=q.FLOAT,s.internalFormat=it.RGBA32F,s.samplingMode=I.NEAREST;const r=new Q(e,s),n=S.createVertex(e,O.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),i=new z(e,new Map([["a_pos",0]]),new Map([["geometry",[new Z("a_pos",2,A.UNSIGNED_SHORT,0,4)]]]),new Map([["geometry",n]]));e.gl.getError(),e.useProgram(t);const o=e.getBoundFramebufferObject(),{x:h,y:u,width:_,height:E}=e.getViewport();e.bindFramebuffer(r),e.setViewport(0,0,1,1),e.bindVAO(i),e.drawArrays(d.TRIANGLE_STRIP,0,4);const R=_t({blending:ct});e.setPipelineState(R),e.drawArrays(d.TRIANGLE_STRIP,0,4);const P=e.gl.getError();return e.setViewport(h,u,_,E),e.bindFramebuffer(o),i.dispose(),r.dispose(),P!==at.INVALID_OPERATION||(console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."),!1)}}class mt{constructor(t){this.rctx=t,this.floatBufferBlend=new Bt(t),this.svgPremultipliesAlpha=new Et(t),this.drawArraysRequiresIndicesTypeReset=new Rt(t)}dispose(){this.svgPremultipliesAlpha.dispose(),this.floatBufferBlend.dispose(),this.drawArraysRequiresIndicesTypeReset.dispose()}}function Tt(a,t){if(t.compressedTextureETC)return null;const e=a.getExtension("WEBGL_compressed_texture_etc");return e?{COMPRESSED_R11_EAC:e.COMPRESSED_R11_EAC,COMPRESSED_SIGNED_R11_EAC:e.COMPRESSED_SIGNED_R11_EAC,COMPRESSED_RG11_EAC:e.COMPRESSED_RG11_EAC,COMPRESSED_SIGNED_RG11_EAC:e.COMPRESSED_SIGNED_RG11_EAC,COMPRESSED_RGB8_ETC2:e.COMPRESSED_RGB8_ETC2,COMPRESSED_SRGB8_ETC2:e.COMPRESSED_SRGB8_ETC2,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:e.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:e.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_RGBA8_ETC2_EAC:e.COMPRESSED_RGBA8_ETC2_EAC,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC}:null}function At(a,t){if(t.compressedTextureS3TC)return null;const e=a.getExtension("WEBGL_compressed_texture_s3tc");return e?{COMPRESSED_RGB_S3TC_DXT1:e.COMPRESSED_RGB_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT1:e.COMPRESSED_RGBA_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT3:e.COMPRESSED_RGBA_S3TC_DXT3_EXT,COMPRESSED_RGBA_S3TC_DXT5:e.COMPRESSED_RGBA_S3TC_DXT5_EXT}:null}function xt(a,t){if(t.textureFilterAnisotropic)return null;const e=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");return e?{MAX_TEXTURE_MAX_ANISOTROPY:e.MAX_TEXTURE_MAX_ANISOTROPY_EXT,TEXTURE_MAX_ANISOTROPY:e.TEXTURE_MAX_ANISOTROPY_EXT}:null}function Ct(a,t){const e=!t.colorBufferHalfFloat&&a.getExtension("EXT_color_buffer_half_float")||!t.colorBufferFloat&&a.getExtension("EXT_color_buffer_float"),s=!t.colorBufferFloat&&a.getExtension("EXT_color_buffer_float"),r=!t.floatBlend&&!t.colorBufferFloat&&a.getExtension("EXT_float_blend");return e||s||r?{textureFloat:!!s,textureHalfFloat:!!e,floatBlend:!!r,R16F:a.R16F,RG16F:a.RG16F,RGBA16F:a.RGBA16F,R32F:a.R32F,RG32F:a.RG32F,RGBA32F:a.RGBA32F,R11F_G11F_B10F:a.R11F_G11F_B10F,RGB16F:a.RGB16F}:null}function V(a,t,e,s,r){if(t[e])return!1;for(const n of r)if(a.getExtension(n))return!0;return!1}function St(a,t){if(t.textureNorm16)return null;const e=a.getExtension("EXT_texture_norm16");return e?{R16:e.R16_EXT,RG16:e.RG16_EXT,RGB16:e.RGB16_EXT,RGBA16:e.RGBA16_EXT,R16_SNORM:e.R16_SNORM_EXT,RG16_SNORM:e.RG16_SNORM_EXT,RGB16_SNORM:e.RGB16_SNORM_EXT,RGBA16_SNORM:e.RGBA16_SNORM_EXT}:null}function Ot(a,t){const e=t.loseContext&&a.getExtension("WEBGL_lose_context");return e?{loseRenderingContext:()=>e.loseContext()}:null}class Pt{constructor(t,e){this._gl=t,this._compressedTextureETC=null,this._compressedTextureS3TC=null,this._textureFilterAnisotropic=null,this._colorBufferFloat=null,this._loseContext=null,this._textureNorm16=null,this._textureFloatLinear=null,this._parallelShaderCompile=null,this._rendererInfo=null,this._disabledExtensions=e.disabledExtensions||{},this._debugWebGLExtensions=e.debugWebGLExtensions||{}}get compressedTextureETC(){return this._compressedTextureETC??(this._compressedTextureETC=Tt(this._gl,this._disabledExtensions)),this._compressedTextureETC}get compressedTextureS3TC(){return this._compressedTextureS3TC??(this._compressedTextureS3TC=At(this._gl,this._disabledExtensions)),this._compressedTextureS3TC}get textureFilterAnisotropic(){return this._textureFilterAnisotropic??(this._textureFilterAnisotropic=xt(this._gl,this._disabledExtensions)),this._textureFilterAnisotropic}get disjointTimerQuery(){return this._disjointTimerQuery??(this._disjointTimerQuery=gt(this._gl,this._disabledExtensions)),this._disjointTimerQuery}get colorBufferFloat(){return this._colorBufferFloat??(this._colorBufferFloat=Ct(this._gl,this._disabledExtensions)),this._colorBufferFloat}get textureNorm16(){return this._textureNorm16??(this._textureNorm16=St(this._gl,this._disabledExtensions)),this._textureNorm16}get textureFloatLinear(){return this._textureFloatLinear??(this._textureFloatLinear=V(this._gl,this._disabledExtensions,"textureFloatLinear",!1,["OES_texture_float_linear"])),this._textureFloatLinear}get parallelShaderCompile(){return this._parallelShaderCompile??(this._parallelShaderCompile=V(this._gl,this._disabledExtensions,"parallelShaderCompile",!1,["KHR_parallel_shader_compile"])),this._parallelShaderCompile}get loseContext(){return this._loseContext??(this._loseContext=Ot(this._gl,this._debugWebGLExtensions)),this._loseContext}get rendererInfo(){return this._rendererInfo??(this._rendererInfo=nt(this._gl)),this._rendererInfo}enable(t){return this[t]}}let Kt=class{constructor(t,e){this.gl=t,this.instanceCounter=new Ft,this.programCache=new et(this),this._transformFeedbackRequestInfo=null,this._state=new W,this._numOfDrawCalls=0,this._numOfTriangles=0,this.configure(e)}configure(t){this._capabilities=new Pt(this.gl,t),this._parameters=new $(this.gl,this._capabilities,t),lt.TEXTURE_UNIT_FOR_UPDATES=this._parameters.maxTextureImageUnits-1;const e=this.gl.getParameter(this.gl.VIEWPORT);this._state=new W,this._state.viewport={x:e[0],y:e[1],width:e[2],height:e[3]},this._stateTracker=new dt({setBlending:s=>{if(s){this.setBlendingEnabled(!0),this.setBlendEquationSeparate(s.opRgb,s.opAlpha),this.setBlendFunctionSeparate(s.srcRgb,s.dstRgb,s.srcAlpha,s.dstAlpha);const r=s.color;this.setBlendColor(r.r,r.g,r.b,r.a)}else this.setBlendingEnabled(!1)},setCulling:s=>{s?(this.setFaceCullingEnabled(!0),this.setCullFace(s.face),this.setFrontFace(s.mode)):this.setFaceCullingEnabled(!1)},setPolygonOffset:s=>{s?(this.setPolygonOffsetFillEnabled(!0),this.setPolygonOffset(s.factor,s.units)):this.setPolygonOffsetFillEnabled(!1)},setDepthTest:s=>{s?(this.setDepthTestEnabled(!0),this.setDepthFunction(s.func)):this.setDepthTestEnabled(!1)},setStencilTest:s=>{if(s){this.setStencilTestEnabled(!0);const r=s.function;this.setStencilFunction(r.func,r.ref,r.mask);const n=s.operation;this.setStencilOp(n.fail,n.zFail,n.zPass)}else this.setStencilTestEnabled(!1)},setDepthWrite:s=>{s?(this.setDepthWriteEnabled(!0),this.setDepthRange(s.zNear,s.zFar)):this.setDepthWriteEnabled(!1)},setColorWrite:s=>{s?this.setColorMask(s.r,s.g,s.b,s.a):this.setColorMask(!1,!1,!1,!1)},setStencilWrite:s=>{s?this.setStencilWriteMask(s.mask):this.setStencilWriteMask(0)},setDrawBuffers:s=>{if(s)this.setDrawBuffers(s.buffers);else{const{drawFramebuffer:r}=this._state;r===null?this.setDrawBuffers([g.BACK]):r.colorAttachments.length===0?this.setDrawBuffers([g.NONE]):this.setDrawBuffers([M])}}}),this.enforceState(),G(this._driverTest),this._driverTest=new mt(this)}updateOptions(t){this._parameters=new $(this.gl,this._capabilities,t)}dispose(){G(this._driverTest),this.programCache.dispose(),this.bindVAO(null),this.unbindBuffer(l.ARRAY_BUFFER),this.unbindBuffer(l.ELEMENT_ARRAY_BUFFER),this.unbindBuffer(l.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(l.PIXEL_PACK_BUFFER),this.unbindBuffer(l.PIXEL_UNPACK_BUFFER),this.unbindBuffer(l.COPY_READ_BUFFER),this.unbindBuffer(l.COPY_WRITE_BUFFER),this._state.textureUnitMap.length=0,b()&&console.log(this.instanceCounter.resourceInformation)}get driverTest(){return this._driverTest}get contextAttributes(){return this.gl.getContextAttributes()}get parameters(){return this._parameters}setPipelineState(t){this._stateTracker.setPipeline(t)}setBlendingEnabled(t){this._state.blend!==t&&(t===!0?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND),this._state.blend=t,this._stateTracker.invalidateBlending())}externalProgramUpdate(){var t;(t=this._state.program)==null||t.stop(),this._state.program=null}externalTextureUnitUpdate(t,e){for(let s=0;s<t.length;++s)this._state.textureUnitMap[t[s]]=null;e>=0&&(this._state.activeTexture=e)}externalVertexArrayObjectUpdate(){this.gl.bindVertexArray(null),this._state.vertexArrayObject=null,this._state.vertexBuffer=null,this._state.indexBuffer=null}externalVertexBufferUpdate(){this._state.vertexBuffer=null}externalIndexBufferUpdate(){this._state.indexBuffer=null}setBlendColor(t,e,s,r){t===this._state.blendColor.r&&e===this._state.blendColor.g&&s===this._state.blendColor.b&&r===this._state.blendColor.a||(this.gl.blendColor(t,e,s,r),this._state.blendColor.r=t,this._state.blendColor.g=e,this._state.blendColor.b=s,this._state.blendColor.a=r,this._stateTracker.invalidateBlending())}setBlendFunction(t,e){t===this._state.blendFunction.srcRGB&&e===this._state.blendFunction.dstRGB||(this.gl.blendFunc(t,e),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=t,this._state.blendFunction.dstRGB=e,this._state.blendFunction.dstAlpha=e,this._stateTracker.invalidateBlending())}setBlendFunctionSeparate(t,e,s,r){this._state.blendFunction.srcRGB===t&&this._state.blendFunction.srcAlpha===s&&this._state.blendFunction.dstRGB===e&&this._state.blendFunction.dstAlpha===r||(this.gl.blendFuncSeparate(t,e,s,r),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=s,this._state.blendFunction.dstRGB=e,this._state.blendFunction.dstAlpha=r,this._stateTracker.invalidateBlending())}setBlendEquation(t){this._state.blendEquation.mode!==t&&(this.gl.blendEquation(t),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=t,this._stateTracker.invalidateBlending())}setBlendEquationSeparate(t,e){this._state.blendEquation.mode===t&&this._state.blendEquation.modeAlpha===e||(this.gl.blendEquationSeparate(t,e),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=e,this._stateTracker.invalidateBlending())}setColorMask(t,e,s,r){this._state.colorMask.r===t&&this._state.colorMask.g===e&&this._state.colorMask.b===s&&this._state.colorMask.a===r||(this.gl.colorMask(t,e,s,r),this._state.colorMask.r=t,this._state.colorMask.g=e,this._state.colorMask.b=s,this._state.colorMask.a=r,this._stateTracker.invalidateColorWrite())}setClearColor(t,e,s,r){this._state.clearColor.r===t&&this._state.clearColor.g===e&&this._state.clearColor.b===s&&this._state.clearColor.a===r||(this.gl.clearColor(t,e,s,r),this._state.clearColor.r=t,this._state.clearColor.g=e,this._state.clearColor.b=s,this._state.clearColor.a=r)}setFaceCullingEnabled(t){this._state.faceCulling!==t&&(t===!0?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this._state.faceCulling=t,this._stateTracker.invalidateCulling())}setPolygonOffsetFillEnabled(t){this._state.polygonOffsetFill!==t&&(t===!0?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL),this._state.polygonOffsetFill=t,this._stateTracker.invalidatePolygonOffset())}setPolygonOffset(t,e){this._state.polygonOffset[0]===t&&this._state.polygonOffset[1]===e||(this._state.polygonOffset[0]=t,this._state.polygonOffset[1]=e,this.gl.polygonOffset(t,e),this._stateTracker.invalidatePolygonOffset())}setCullFace(t){this._state.cullFace!==t&&(this.gl.cullFace(t),this._state.cullFace=t,this._stateTracker.invalidateCulling())}setFrontFace(t){this._state.frontFace!==t&&(this.gl.frontFace(t),this._state.frontFace=t,this._stateTracker.invalidateCulling())}setScissorTestEnabled(t){this._state.scissorTest!==t&&(t===!0?this.gl.enable(this.gl.SCISSOR_TEST):this.gl.disable(this.gl.SCISSOR_TEST),this._state.scissorTest=t)}setScissorRect(t,e,s,r){this._state.scissorRect.x===t&&this._state.scissorRect.y===e&&this._state.scissorRect.width===s&&this._state.scissorRect.height===r||(this.gl.scissor(t,e,s,r),this._state.scissorRect.x=t,this._state.scissorRect.y=e,this._state.scissorRect.width=s,this._state.scissorRect.height=r)}setDepthTestEnabled(t){this._state.depthTest!==t&&(t===!0?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST),this._state.depthTest=t,this._stateTracker.invalidateDepthTest())}setClearDepth(t){this._state.clearDepth!==t&&(this.gl.clearDepth(t),this._state.clearDepth=t)}setDepthFunction(t){this._state.depthFunction!==t&&(this.gl.depthFunc(t),this._state.depthFunction=t,this._stateTracker.invalidateDepthTest())}setDepthWriteEnabled(t){this._state.depthWrite!==t&&(this.gl.depthMask(t),this._state.depthWrite=t,this._stateTracker.invalidateDepthWrite())}setDepthRange(t,e){this._state.depthRange.zNear===t&&this._state.depthRange.zFar===e||(this.gl.depthRange(t,e),this._state.depthRange.zNear=t,this._state.depthRange.zFar=e,this._stateTracker.invalidateDepthWrite())}setStencilTestEnabled(t){this._state.stencilTest!==t&&(t===!0?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST),this._state.stencilTest=t,this._stateTracker.invalidateStencilTest())}setClearStencil(t){t!==this._state.clearStencil&&(this.gl.clearStencil(t),this._state.clearStencil=t)}setStencilFunction(t,e,s){this._state.stencilFunction.func===t&&this._state.stencilFunction.ref===e&&this._state.stencilFunction.mask===s||(this.gl.stencilFunc(t,e,s),this._state.stencilFunction.face=F.FRONT_AND_BACK,this._state.stencilFunction.func=t,this._state.stencilFunction.ref=e,this._state.stencilFunction.mask=s,this._stateTracker.invalidateStencilTest())}setStencilFunctionSeparate(t,e,s,r){this._state.stencilFunction.face===t&&this._state.stencilFunction.func===e&&this._state.stencilFunction.ref===s&&this._state.stencilFunction.mask===r||(this.gl.stencilFuncSeparate(t,e,s,r),this._state.stencilFunction.face=t,this._state.stencilFunction.func=e,this._state.stencilFunction.ref=s,this._state.stencilFunction.mask=r,this._stateTracker.invalidateStencilTest())}setStencilWriteMask(t){this._state.stencilWriteMask!==t&&(this.gl.stencilMask(t),this._state.stencilWriteMask=t,this._stateTracker.invalidateStencilWrite())}setStencilOp(t,e,s){this._state.stencilOperation.face===F.FRONT_AND_BACK&&this._state.stencilOperation.fail===t&&this._state.stencilOperation.zFail===e&&this._state.stencilOperation.zPass===s||(this.gl.stencilOp(t,e,s),this._state.stencilOperation.face=F.FRONT_AND_BACK,this._state.stencilOperation.fail=t,this._state.stencilOperation.zFail=e,this._state.stencilOperation.zPass=s,this._stateTracker.invalidateStencilTest())}setStencilOpSeparate(t,e,s,r){this._state.stencilOperation.face===t&&this._state.stencilOperation.fail===e&&this._state.stencilOperation.zFail===s&&this._state.stencilOperation.zPass===r||(this.gl.stencilOpSeparate(t,e,s,r),this._state.stencilOperation.face=t,this._state.stencilOperation.fail=e,this._state.stencilOperation.zFail=s,this._state.stencilOperation.zPass=r,this._stateTracker.invalidateStencilTest())}setActiveTexture(t,e=!1){const s=this._state.activeTexture;return t>=0&&(e||t!==this._state.activeTexture)&&(this.gl.activeTexture(U+t),this._state.activeTexture=t),s}setDrawBuffers(t){const{drawFramebuffer:e}=this._state,s=e===null,r=s?this._state.drawBuffers.defaultFramebuffer:this._state.drawBuffers.fbos.get(e);if((r==null?void 0:r.length)!==t.length||!r.every((n,i)=>n===t[i]))if(t.length>this.parameters.maxDrawBuffers)console.error("Setting more active draw buffers than GL.MAX_DRAW_BUFFERS allows.");else{if(s){if(t.length>1)return void console.error("The default framebuffer can only have one active draw buffer.");if(t[0]!==g.BACK&&t[0]!==g.NONE)return void console.error("The default framebuffer can only use the constants GL.BACK or GL.NONE as draw buffers.")}s||!t.includes(g.BACK)?(this.gl.drawBuffers(t),s?this._state.drawBuffers.defaultFramebuffer=t:this._state.drawBuffers.fbos.set(e,t),this._stateTracker.invalidateDrawBuffers()):console.error("A framebuffer object can only use the constants GL.COLOR_ATTACHMENTi or GL.NONE as draw buffers.")}}clear(t,e=255){var s;if(t){if(t&p.COLOR){const r=(s=this._state.drawFramebuffer)==null?void 0:s.colorAttachments;r&&this.setDrawBuffers(r),this.setColorMask(!0,!0,!0,!0)}t&p.DEPTH&&this.setDepthWriteEnabled(!0),t&p.STENCIL&&this.setStencilWriteMask(e),this.gl.clear(t)}}clearFramebuffer(t,e=!1,s=!1){let r=0;if(t){const i=Math.max(1e-13,t[3]);this.setClearColor(t[0],t[1],t[2],i),r|=p.COLOR}e&&(r|=p.DEPTH),s===!1?s=0:(s===!0&&(s=255),r|=p.STENCIL),r&&this.clear(r,s)}clearBuffer(t,e,s=w.COLOR,r=void 0){this.gl.clearBufferfv(s,t,e,r)}clearBufferInteger(t,e,s=w.COLOR,r=void 0){this.gl.clearBufferiv(s,t,e,r)}clearBufferUnsignedInteger(t,e,s=w.COLOR,r=void 0){this.gl.clearBufferuiv(s,t,e,r)}drawArrays(t,e,s){var r,n;if(this._transformFeedbackRequestInfo){if(t!==this._transformFeedbackRequestInfo.primitiveType)throw new Error("DrawArrays called during transform feedback, but primitiveType does not match that of the current transform feedback request");if(((r=this._state.program)==null?void 0:r.hasTransformFeedbackVaryings)==null)throw new Error("DrawArrays called during transform feedback, but the shader program was not linked with a transform feedback varying")}if(b()&&(this._numOfDrawCalls++,this._numOfTriangles+=K(t,s),v("enable-feature:webgl-debug:textureReadWrite"))){const i=this._state.textureUnitMap;for(let o=0;o<i.length;o++){const h=i[o];if(h!=null&&h===((n=this._state.drawFramebuffer)==null?void 0:n.colorTexture))throw new Error(`Detected readWrite. Texture already bound at index ${o}`)}}this.gl.drawArrays(t,e,s),N(this.gl)}drawArraysInstanced(t,e,s,r){this.gl.drawArraysInstanced(t,e,s,r),N(this.gl)}drawElements(t,e,s,r){if(this._transformFeedbackRequestInfo)throw new Error("Cannot called drawElements during a transform feedback request");if(b()&&(this._numOfDrawCalls++,this._numOfTriangles+=K(t,e)),this.gl.drawElements(t,e,s,r),b()){const n=ot(this);if(n){const i=this.getBoundVAO(),o=i==null?void 0:i.indexBuffer,h=i==null?void 0:i.vertexBuffers,u={indexBuffer:o,vertexBuffers:h},_={mode:t,count:e,type:s,offset:r},E=(o==null?void 0:o.size)??0,R=r+e,P=E<R?`. Buffer is too small. Attempted to draw index ${R} of ${E}`:"";console.error(`drawElements: ${n}${P}`,{args:_,vao:u})}}}drawElementsInstanced(t,e,s,r,n){this.gl.drawElementsInstanced(t,e,s,r,n),N(this.gl)}logInfo(){b()&&console.log(`DrawCalls: ${this._numOfDrawCalls}, Triangles: ${this._numOfTriangles}`)}resetInfo(){b()&&(this._numOfDrawCalls=0,this._numOfTriangles=0)}get capabilities(){return this._capabilities}setViewport(t,e,s,r){s=Math.max(Math.round(s),1),r=Math.max(Math.round(r),1);const n=this._state.viewport;n.x===t&&n.y===e&&n.width===s&&n.height===r||(n.x=t,n.y=e,n.width=s,n.height=r,this.gl.viewport(t,e,s,r))}setViewport4fv(t){this.setViewport(t[0],t[1],t[2],t[3])}restoreViewport({x:t,y:e,width:s,height:r}){this.setViewport(t,e,s,r)}getViewport(){const t=this._state.viewport;return{x:t.x,y:t.y,width:t.width,height:t.height}}useProgram(t){var e;this._state.program!==t&&((e=this._state.program)==null||e.stop(),this._state.program=t,this.gl.useProgram((t==null?void 0:t.glName)??null))}bindTexture(t,e,s=!1){(e>=this.parameters.maxTextureImageUnits||e<0)&&console.error("Input texture unit is out of range of available units!");const r=this._state.textureUnitMap[e];return(t==null?void 0:t.glName)==null?(r!=null&&(this.setActiveTexture(e,s),this.gl.bindTexture(r.descriptor.target,null)),this._state.textureUnitMap[e]=null,r):s||r!==t?(this.setActiveTexture(e,s),this.gl.bindTexture(t.descriptor.target,t.glName),t.applyChanges(),this._state.textureUnitMap[e]=t,r):(t.isDirty&&(this.setActiveTexture(e,s),t.applyChanges()),r)}unbindTexture(t){if(t!=null)for(let e=0;e<this.parameters.maxTextureImageUnits;e++)this._state.textureUnitMap[e]===t&&(this.bindTexture(null,e),this._state.textureUnitMap[e]=null)}bindFramebuffer(t,e=!1){if(e||this._state.readFramebuffer!==t||this._state.drawFramebuffer!==t){if(this._stateTracker.invalidateDrawBuffers(),t==null)return this.gl.bindFramebuffer(c.FRAMEBUFFER,null),void(this._state.readFramebuffer=this._state.drawFramebuffer=null);t.initializeAndBind(c.FRAMEBUFFER),this._state.readFramebuffer=t,this._state.drawFramebuffer=t}}bindFramebufferSeparate(t,e,s=!1){const r=e===c.READ_FRAMEBUFFER,n=r?this._state.readFramebuffer:this._state.drawFramebuffer;(s||n!==t)&&(t==null?this.gl.bindFramebuffer(e,null):t.initializeAndBind(e),r?this._state.readFramebuffer=t??null:(this._stateTracker.invalidateDrawBuffers(),this._state.drawFramebuffer=t??null))}blitFramebuffer(t,e,s=p.COLOR,r=I.NEAREST,n=0,i=0,o=t.width,h=t.height,u=0,_=0,E=e.width,R=e.height){this.bindFramebufferSeparate(t,c.READ_FRAMEBUFFER,!0),this.bindFramebufferSeparate(e,c.DRAW_FRAMEBUFFER,!0),this.gl.blitFramebuffer(n,i,o,h,u,_,E,R,s,r)}bindBuffer(t,e){if(t)switch(e??(e=t.bufferType),e){case l.ARRAY_BUFFER:this._state.vertexBuffer=f(this.gl,t,e,this._state.vertexBuffer);break;case l.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=f(this.gl,t,e,this._state.indexBuffer);break;case l.UNIFORM_BUFFER:this._state.uniformBuffer=f(this.gl,t,e,this._state.uniformBuffer);break;case l.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=f(this.gl,t,e,this._state.pixelPackBuffer);break;case l.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=f(this.gl,t,e,this._state.pixelUnpackBuffer);break;case l.COPY_READ_BUFFER:this._state.copyReadBuffer=f(this.gl,t,e,this._state.copyReadBuffer);break;case l.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=f(this.gl,t,e,this._state.copyWriteBuffer);break;case l.TRANSFORM_FEEDBACK_BUFFER:this._state.transformFeedbackBuffer=f(this.gl,t,e,this._state.transformFeedbackBuffer)}}bindRenderbuffer(t){const e=this.gl;t||(e.bindRenderbuffer(e.RENDERBUFFER,null),this._state.renderbuffer=null),this._state.renderbuffer!==t&&(e.bindRenderbuffer(e.RENDERBUFFER,t.glName),this._state.renderbuffer=t)}_getBufferBinding(t,e){if(e>=this.parameters.maxUniformBufferBindings||e<0)return console.error("Uniform buffer binding point is out of range!"),null;const s=t===l.UNIFORM_BUFFER?this._state.uniformBufferBindingPoints:this._state.transformBufferBindingPoints;let r=s[e];return r==null&&(r={buffer:null,offset:0,size:0},s[e]=r),r}bindBufferBase(t,e,s){const r=this._getBufferBinding(t,e);r!=null&&(r.buffer===s&&r.offset===0&&r.size===0||(this.gl.bindBufferBase(t,e,s?s.glName:null),r.buffer=s,r.offset=0,r.size=0))}bindBufferRange(t,e,s,r,n){const i=this._getBufferBinding(t,e);i!=null&&(i.buffer===s&&i.offset===r&&i.size===n||(r%this._parameters.uniformBufferOffsetAlignment===0?(this.gl.bindBufferRange(t,e,s.glName,r,n),i.buffer=s,i.offset=r,i.size=n):console.error("Uniform buffer binding offset is not a multiple of the context offset alignment")))}bindUBO(t,e,s,r){e!=null?(b()&&(r??e.byteLength)>this._parameters.maxUniformBlockSize&&console.error("Attempting to bind more data than the maximum uniform block size"),e.initialize(),s!==void 0&&r!==void 0?this.bindBufferRange(l.UNIFORM_BUFFER,t,e.buffer,s,r):this.bindBufferBase(l.UNIFORM_BUFFER,t,e.buffer)):this.bindBufferBase(l.UNIFORM_BUFFER,t,null)}unbindUBO(t){for(let e=0,s=this._state.uniformBufferBindingPoints.length;e<s;e++){const r=this._state.uniformBufferBindingPoints[e];r!=null&&r.buffer===t.buffer&&this.bindBufferBase(l.UNIFORM_BUFFER,e,null)}}unbindBuffer(t){switch(t){case l.ARRAY_BUFFER:this._state.vertexBuffer=f(this.gl,null,t,this._state.vertexBuffer);break;case l.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=f(this.gl,null,t,this._state.indexBuffer);break;case l.UNIFORM_BUFFER:this._state.uniformBuffer=f(this.gl,null,t,this._state.uniformBuffer);break;case l.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=f(this.gl,null,t,this._state.pixelPackBuffer);break;case l.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=f(this.gl,null,t,this._state.pixelUnpackBuffer);break;case l.COPY_READ_BUFFER:this._state.copyReadBuffer=f(this.gl,null,t,this._state.copyReadBuffer);break;case l.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=f(this.gl,null,t,this._state.copyWriteBuffer)}}bindVAO(t=null){t!=null?this._state.vertexArrayObject!==t&&(t.bind(),this._state.vertexArrayObject=t):this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null)}bindTransformFeedback(t){const{gl:e}=this;e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,t.glName)}beginTransformFeedback(t,e){if(this._transformFeedbackRequestInfo)throw new Error("Already in a transform feedback request");const{gl:s}=this;s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,t.glName),s.beginTransformFeedback(e),this._transformFeedbackRequestInfo={primitiveType:e}}endTransformFeedback(){if(!this._transformFeedbackRequestInfo)throw new Error("Not in a transform feedback request");const{gl:t}=this;t.endTransformFeedback(),t.bindTransformFeedback(t.TRANSFORM_FEEDBACK,null),this._transformFeedbackRequestInfo=null}async clientWaitAsync(t=ht(10)){const{gl:e}=this,s=e.fenceSync(ft.SYNC_GPU_COMMANDS_COMPLETE,0);if(!s)throw new Error("Client wait failed, could not create sync object");let r;this.instanceCounter.increment(m.Sync,s),e.flush();do await ut(t),r=e.clientWaitSync(s,0,0);while(r===L.TIMEOUT_EXPIRED);if(this.instanceCounter.decrement(m.Sync,s),e.deleteSync(s),r===L.WAIT_FAILED)throw new Error("Client wait failed")}getBoundFramebufferObject(t=c.FRAMEBUFFER){return t===c.READ_FRAMEBUFFER?this._state.readFramebuffer:this._state.drawFramebuffer}temporaryBindFramebufferObject(t,e,s=!1){const r=this.getBoundFramebufferObject();try{this.bindFramebuffer(t,s),e()}finally{this.bindFramebuffer(r,s)}}getBoundVAO(){return this._state.vertexArrayObject}resetState(){this.useProgram(null),this.bindVAO(null),this.bindFramebuffer(null,!0),this.unbindBuffer(l.ARRAY_BUFFER),this.unbindBuffer(l.ELEMENT_ARRAY_BUFFER),this.unbindBuffer(l.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(l.PIXEL_PACK_BUFFER),this.unbindBuffer(l.PIXEL_UNPACK_BUFFER),this.unbindBuffer(l.COPY_READ_BUFFER),this.unbindBuffer(l.COPY_WRITE_BUFFER);for(let t=0;t<this.parameters.maxTextureImageUnits;++t)this.bindTexture(null,t);this.setBlendingEnabled(!1),this.setBlendFunction(B.ONE,B.ZERO),this.setBlendEquation(D.ADD),this.setBlendColor(0,0,0,0),this.setFaceCullingEnabled(!1),this.setCullFace(F.BACK),this.setFrontFace(Y.CCW),this.setPolygonOffsetFillEnabled(!1),this.setPolygonOffset(0,0),this.setScissorTestEnabled(!1),this.setScissorRect(0,0,this.gl.canvas.width,this.gl.canvas.height),this.setDepthTestEnabled(!1),this.setDepthFunction(C.LESS),this.setDepthRange(0,1),this.setStencilTestEnabled(!1),this.setStencilFunction(C.ALWAYS,0,0),this.setStencilOp(T.KEEP,T.KEEP,T.KEEP),this.setClearColor(0,0,0,0),this.setClearDepth(1),this.setClearStencil(0),this.setColorMask(!0,!0,!0,!0),this.setStencilWriteMask(4294967295),this.setDepthWriteEnabled(!0),this.setDrawBuffers([g.BACK]),this.setViewport(0,0,this.gl.canvas.width,this.gl.canvas.height)}enforceState(){var s,r,n;const{gl:t}=this;t.bindVertexArray(null);for(let i=0;i<this.parameters.maxVertexAttributes;i++)t.disableVertexAttribArray(i);this._state.vertexBuffer?t.bindBuffer(this._state.vertexBuffer.bufferType,this._state.vertexBuffer.glName):t.bindBuffer(l.ARRAY_BUFFER,null),this._state.indexBuffer?t.bindBuffer(this._state.indexBuffer.bufferType,this._state.indexBuffer.glName):t.bindBuffer(l.ELEMENT_ARRAY_BUFFER,null),this._state.uniformBuffer?t.bindBuffer(this._state.uniformBuffer.bufferType,this._state.uniformBuffer.glName):t.bindBuffer(l.UNIFORM_BUFFER,null);for(let i=0;i<this._parameters.maxUniformBufferBindings;i++){const o=this._state.uniformBufferBindingPoints[i];if(o!=null){const{buffer:h,offset:u,size:_}=o;h!==null?u===0&&_===0?t.bindBufferBase(l.UNIFORM_BUFFER,i,h.glName):t.bindBufferRange(l.UNIFORM_BUFFER,i,h.glName,u,_):t.bindBufferBase(l.UNIFORM_BUFFER,i,null)}}if(this._state.pixelPackBuffer?t.bindBuffer(this._state.pixelPackBuffer.bufferType,this._state.pixelPackBuffer.glName):t.bindBuffer(l.PIXEL_PACK_BUFFER,null),this._state.pixelUnpackBuffer?t.bindBuffer(this._state.pixelUnpackBuffer.bufferType,this._state.pixelUnpackBuffer.glName):t.bindBuffer(l.PIXEL_UNPACK_BUFFER,null),this._state.copyReadBuffer?t.bindBuffer(this._state.copyReadBuffer.bufferType,this._state.copyReadBuffer.glName):t.bindBuffer(l.COPY_READ_BUFFER,null),this._state.copyWriteBuffer?t.bindBuffer(this._state.copyWriteBuffer.bufferType,this._state.copyWriteBuffer.glName):t.bindBuffer(l.COPY_WRITE_BUFFER,null),t.bindFramebuffer(c.READ_FRAMEBUFFER,null),t.readBuffer(t.BACK),this._state.readFramebuffer&&(t.bindFramebuffer(c.READ_FRAMEBUFFER,this._state.readFramebuffer.glName),t.readBuffer(M)),t.bindFramebuffer(c.DRAW_FRAMEBUFFER,((s=this._state.drawFramebuffer)==null?void 0:s.glName)??null),this._state.drawFramebuffer===null){const i=this._state.drawBuffers.defaultFramebuffer;t.drawBuffers(i??[g.BACK])}else{const i=this._state.drawBuffers.fbos.get(this._state.drawFramebuffer);t.drawBuffers(i??[M])}if(this._state.vertexArrayObject){const i=this._state.vertexArrayObject;this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null),this.bindVAO(i)}t.useProgram(((r=this._state.program)==null?void 0:r.glName)??null),t.blendColor(this._state.blendColor.r,this._state.blendColor.g,this._state.blendColor.b,this._state.blendColor.a),t.bindRenderbuffer(t.RENDERBUFFER,((n=this._state.renderbuffer)==null?void 0:n.glName)??null),this._state.blend===!0?t.enable(this.gl.BLEND):t.disable(this.gl.BLEND),t.blendEquationSeparate(this._state.blendEquation.mode,this._state.blendEquation.modeAlpha),t.blendFuncSeparate(this._state.blendFunction.srcRGB,this._state.blendFunction.dstRGB,this._state.blendFunction.srcAlpha,this._state.blendFunction.dstAlpha),t.clearColor(this._state.clearColor.r,this._state.clearColor.g,this._state.clearColor.b,this._state.clearColor.a),t.clearDepth(this._state.clearDepth),t.clearStencil(this._state.clearStencil),t.colorMask(this._state.colorMask.r,this._state.colorMask.g,this._state.colorMask.b,this._state.colorMask.a),t.cullFace(this._state.cullFace),t.depthFunc(this._state.depthFunction),t.depthRange(this._state.depthRange.zNear,this._state.depthRange.zFar),this._state.depthTest===!0?t.enable(t.DEPTH_TEST):t.disable(t.DEPTH_TEST),t.depthMask(this._state.depthWrite),t.frontFace(this._state.frontFace),t.lineWidth(1),this._state.faceCulling===!0?t.enable(t.CULL_FACE):t.disable(t.CULL_FACE),t.polygonOffset(this._state.polygonOffset[0],this._state.polygonOffset[1]),this._state.polygonOffsetFill===!0?t.enable(t.POLYGON_OFFSET_FILL):t.disable(t.POLYGON_OFFSET_FILL),t.scissor(this._state.scissorRect.x,this._state.scissorRect.y,this._state.scissorRect.width,this._state.scissorRect.height),this._state.scissorTest===!0?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST),t.stencilFunc(this._state.stencilFunction.func,this._state.stencilFunction.ref,this._state.stencilFunction.mask),t.stencilOpSeparate(this._state.stencilOperation.face,this._state.stencilOperation.fail,this._state.stencilOperation.zFail,this._state.stencilOperation.zPass),this._state.stencilTest===!0?t.enable(t.STENCIL_TEST):t.disable(t.STENCIL_TEST),t.stencilMask(this._state.stencilWriteMask);for(let i=0;i<this.parameters.maxTextureImageUnits;i++){t.activeTexture(U+i),t.bindTexture(x.TEXTURE_2D,null),t.bindTexture(x.TEXTURE_CUBE_MAP,null),t.bindTexture(x.TEXTURE_3D,null),t.bindTexture(x.TEXTURE_2D_ARRAY,null);const o=this._state.textureUnitMap[i];o!=null&&t.bindTexture(o.descriptor.target,o.glName)}t.activeTexture(U+this._state.activeTexture);const e=this._state.viewport;t.viewport(e.x,e.y,e.width,e.height),this.resetInfo()}};function f(a,t,e,s){return t?s!==t&&a.bindBuffer(e,t.glName):a.bindBuffer(e,null),t}function K(a,t){switch(a){case d.POINTS:return 2*t;case d.TRIANGLES:return t/3;case d.TRIANGLE_STRIP:case d.TRIANGLE_FAN:return t-2;default:return 0}}export{Xt as n,Lt as o,Kt as v};
