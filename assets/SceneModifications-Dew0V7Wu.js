import{aO as d,aB as h,fL as w,bY as g,iX as N,aH as O,ar as s,as as c,gn as f,d2 as J,at as S,aZ as R,M as v,a6 as x}from"./index-BU6th8yW.js";var y;let o=y=class extends d{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,r,a,t){var n;if((n=t.layer)!=null&&n.spatialReference&&!t.layer.spatialReference.equals(this.geometry.spatialReference)){if(!h(e.spatialReference,t.layer.spatialReference))return void((t==null?void 0:t.messages)&&t.messages.push(new w("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:t.layer.spatialReference,context:t})));const l=new g;N(e,l,t.layer.spatialReference),r[a]=l.toJSON(t)}else r[a]=e.toJSON(t)}clone(){return new y({geometry:O(this.geometry),type:this.type})}};s([c({type:g}),f()],o.prototype,"geometry",void 0),s([J(["web-scene","portal-item"],"geometry")],o.prototype,"writeGeometry",null),s([c({type:["clip","mask","replace"],nonNullable:!0}),f()],o.prototype,"type",void 0),o=y=s([S("esri.layers.support.SceneModification")],o);var i;let p=i=class extends d.JSONSupportMixin(R.ofType(o)){constructor(e){super(e),this.url=null}clone(){return new i({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(r=>r.toJSON(e)).filter(r=>!!r.geometry)}static fromJSON(e,r){const a=new i;for(const t of e)a.add(o.fromJSON(t,r));return a}static async fromUrl(e,r,a){const t={url:v(e),origin:"service"},n=await x(e,{responseType:"json",signal:a==null?void 0:a.signal}),l=r.toJSON(),m=[];for(const u of n.data)m.push(o.fromJSON({...u,geometry:{spatialReference:l,...u.geometry}},t));return new i({url:e,items:m})}};s([c({type:String})],p.prototype,"url",void 0),p=i=s([S("esri.layers.support.SceneModifications")],p);export{p as n};
