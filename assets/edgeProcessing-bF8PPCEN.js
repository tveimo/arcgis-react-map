import{e as Ot}from"./deduplicate-Dl3YaKLF.js";import{O as C}from"./InterleavedLayout-C_iHOV72.js";import{e as c}from"./VertexAttribute-B3BTnNfN.js";import{t as et}from"./glUtil-yUsI6eag.js";import{aP as T,e7 as nt,fZ as St,fY as q,bo as at,ba as Z,fE as it,bc as dt,be as ht,f$ as At,f_ as Et,bp as gt,fG as Tt,mt as wt}from"./index-Btyj_e22.js";import{e as J}from"./Normals-Bg756jHt.js";const vt=C().vec3f(c.POSITION).u16(c.COMPONENTINDEX).freeze(),$t=C().vec2u8(c.SIDENESS).freeze();et($t);const j=C().vec3f(c.POSITION0).vec3f(c.POSITION1).vec2i16(c.NORMALCOMPRESSED).u16(c.COMPONENTINDEX).u8(c.VARIANTOFFSET,{glNormalized:!0}).u8(c.VARIANTSTROKE).u8(c.VARIANTEXTENSION,{glNormalized:!0}).freeze(),H=C().vec3f(c.POSITION0).vec3f(c.POSITION1).vec2i16(c.NORMALCOMPRESSED).vec2i16(c.NORMAL2COMPRESSED).u16(c.COMPONENTINDEX).u8(c.VARIANTOFFSET,{glNormalized:!0}).u8(c.VARIANTSTROKE).u8(c.VARIANTEXTENSION,{glNormalized:!0}).freeze();c.POSITION0,c.POSITION1,c.COMPONENTINDEX,c.VARIANTOFFSET,c.VARIANTSTROKE,c.VARIANTEXTENSION,c.NORMALCOMPRESSED,c.NORMAL2COMPRESSED,c.SIDENESS;class yt{constructor(){this.position0=T(),this.position1=T(),this.faceNormal0=T(),this.faceNormal1=T(),this.componentIndex=0,this.cosAngle=0}}const _=-1;function Pt(t,n,s){const r=t.vertices.position,i=t.vertices.componentIndex,u=m.position0,h=m.position1,g=m.faceNormal0,S=m.faceNormal1,{edges:a,normals:p}=xt(t),I=a.length/4,A=n.allocate(I);let R=0;const F=I,w=s==null?void 0:s.allocate(F);let B=0,e=0,o=0;z.length=0;for(let d=0;d<I;++d){const $=4*d;r.getVec(a.data[$],u),r.getVec(a.data[$+1],h);const x=z.pushNew();x.index=4*d,x.length=St(u,h)}z.sort((d,$)=>$.length-d.length);const f=new Array,l=new Array;z.forAll(({length:d,index:$})=>{const x=a.data[$],It=a.data[$+1],st=a.data[$+2],ot=a.data[$+3],rt=ot===_;if(r.getVec(x,u),r.getVec(It,h),rt){const E=3*st;q(g,p.data[E],p.data[E+1],p.data[E+2]),at(S,g),m.componentIndex=i.get(x),m.cosAngle=Z(g,S)}else{let E=3*st;if(q(g,p.data[E],p.data[E+1],p.data[E+2]),E=3*ot,q(S,p.data[E],p.data[E+1],p.data[E+2]),m.componentIndex=i.get(x),m.cosAngle=Z(g,S),Rt(m,Lt))return;m.cosAngle<-.9999&&at(S,g)}e+=d,o++,rt||Mt(m,Ft)?(n.write(A,R++,m),f.push(d)):Vt(m,Nt)&&(w&&s&&s.write(w,B++,m),l.push(d))});const O=new Float32Array(f.reverse()),v=new Float32Array(l.reverse()),y=w&&s?{instancesData:w.slice(0,B),lodInfo:{lengths:v}}:void 0;return{regular:{instancesData:A.slice(0,R),lodInfo:{lengths:O}},silhouette:y,averageEdgeLength:e/o}}function Mt(t,n){return t.cosAngle<n}function Rt(t,n){return t.cosAngle>n}function Vt(t,n){const s=At(t.cosAngle);return Et(ct,t.position1,t.position0),s*(Z(dt(bt,t.faceNormal0,t.faceNormal1),ct)>0?-1:1)>n}function xt(t){const n=t.faces.length/3,s=t.faces,r=t.neighbors,i=t.vertices.position;N.length=G.length=0;for(let u=0;u<n;u++){const h=3*u,g=r[h],S=r[h+1],a=r[h+2],p=s[h],I=s[h+1],A=s[h+2];i.getVec(p,V),i.getVec(I,X),i.getVec(A,U),it(X,X,V),it(U,U,V),dt(V,X,U),ht(V,V),G.pushArray(V),(g===_||p<I)&&(N.push(p),N.push(I),N.push(u),N.push(g)),(S===_||I<A)&&(N.push(I),N.push(A),N.push(u),N.push(S)),(a===_||A<p)&&(N.push(A),N.push(p),N.push(u),N.push(a))}return{edges:N,normals:G}}class Dt{constructor(){this.index=0,this.length=0}}const z=new nt({allocator:t=>t||new Dt,deallocator:null}),N=new nt({deallocator:null}),G=new nt({deallocator:null}),m=new yt,bt=T(),ct=T(),V=T(),X=T(),U=T(),Nt=gt(4),Lt=Math.cos(Nt),Ct=gt(35),Ft=Math.cos(Ct);function lt(t,n,s){const r=n/3,i=new Uint32Array(s+1),u=new Uint32Array(s+1),h=(e,o)=>{e<o?i[e+1]++:u[o+1]++};for(let e=0;e<r;e++){const o=t[3*e],f=t[3*e+1],l=t[3*e+2];h(o,f),h(f,l),h(l,o)}let g=0,S=0;for(let e=0;e<s;e++){const o=i[e+1],f=u[e+1];i[e+1]=g,u[e+1]=S,g+=o,S+=f}const a=new Uint32Array(6*r),p=i[s],I=(e,o,f)=>{if(e<o){const l=i[e+1]++;a[2*l]=o,a[2*l+1]=f}else{const l=u[o+1]++;a[2*p+2*l]=e,a[2*p+2*l+1]=f}};for(let e=0;e<r;e++){const o=t[3*e],f=t[3*e+1],l=t[3*e+2];I(o,f,e),I(f,l,e),I(l,o,e)}const A=(e,o)=>{const f=2*e,l=o-e;for(let O=1;O<l;O++){const v=a[f+2*O],y=a[f+2*O+1];let d=O-1;for(;d>=0&&a[f+2*d]>v;d--)a[f+2*d+2]=a[f+2*d],a[f+2*d+3]=a[f+2*d+1];a[f+2*d+2]=v,a[f+2*d+3]=y}};for(let e=0;e<s;e++)A(i[e],i[e+1]),A(p+u[e],p+u[e+1]);const R=new Int32Array(3*r),F=(e,o)=>e===t[3*o]?0:e===t[3*o+1]?1:e===t[3*o+2]?2:-1,w=(e,o)=>{const f=F(e,o);R[3*o+f]=-1},B=(e,o,f,l)=>{const O=F(e,o);R[3*o+O]=l;const v=F(f,l);R[3*l+v]=o};for(let e=0;e<s;e++){let o=i[e];const f=i[e+1];let l=u[e];const O=u[e+1];for(;o<f&&l<O;){const v=a[2*o],y=a[2*p+2*l];v===y?(B(e,a[2*o+1],y,a[2*p+2*l+1]),o++,l++):v<y?(w(e,a[2*o+1]),o++):(w(y,a[2*p+2*l+1]),l++)}for(;o<f;)w(e,a[2*o+1]),o++;for(;l<O;)w(a[2*p+2*l],a[2*p+2*l+1]),l++}return R}const Y=.7;let mt=class{updateSettings(n){this.settings=n,this._edgeHashFunction=n.reducedPrecision?zt:Bt}write(n,s,r){W.seed=this._edgeHashFunction(r);const i=W.getIntRange(0,255),u=W.getIntRange(0,this.settings.variants-1),h=W.getFloat(),g=255*(.5*Xt(-(1-Math.min(h/Y,1))+Math.max(0,h-Y)/(1-Y),1.2)+.5);n.position0.setVec(s,r.position0),n.position1.setVec(s,r.position1),n.componentIndex.set(s,r.componentIndex),n.variantOffset.set(s,i),n.variantStroke.set(s,u),n.variantExtension.set(s,g)}};const P=new Float32Array(6),M=new Uint32Array(P.buffer),L=new Uint32Array(1);function Bt(t){return P[0]=t.position0[0],P[1]=t.position0[1],P[2]=t.position0[2],P[3]=t.position1[0],P[4]=t.position1[1],P[5]=t.position1[2],L[0]=31*(31*(31*(31*(31*(166811+M[0])+M[1])+M[2])+M[3])+M[4])+M[5],L[0]}function zt(t){const n=P;n[0]=D(t.position0[0]),n[1]=D(t.position0[1]),n[2]=D(t.position0[2]),n[3]=D(t.position1[0]),n[4]=D(t.position1[1]),n[5]=D(t.position1[2]),L[0]=5381;for(let s=0;s<M.length;s++)L[0]=31*L[0]+M[s];return L[0]}const ft=1e4;function D(t){return Math.round(t*ft)/ft}function Xt(t,n){return Math.abs(t)**n*Math.sign(t)}const K=class K{constructor(){this._commonWriter=new mt}updateSettings(n){this._commonWriter.updateSettings(n)}allocate(n){return j.createBuffer(n)}write(n,s,r){this._commonWriter.write(n,s,r),Tt(b,r.faceNormal0,r.faceNormal1),ht(b,b);const{typedBuffer:i,typedBufferStride:u}=n.normalCompressed;J(i,s,b[0],b[1],b[2],u)}};K.Layout=j,K.glLayout=et(j,1);let Q=K;const k=class k{constructor(){this._commonWriter=new mt}updateSettings(n){this._commonWriter.updateSettings(n)}allocate(n){return H.createBuffer(n)}write(n,s,r){this._commonWriter.write(n,s,r);{const{typedBuffer:i,typedBufferStride:u}=n.normalCompressed;J(i,s,r.faceNormal0[0],r.faceNormal0[1],r.faceNormal0[2],u)}{const{typedBuffer:i,typedBufferStride:u}=n.normal2Compressed;J(i,s,r.faceNormal1[0],r.faceNormal1[1],r.faceNormal1[2],u)}}};k.Layout=H,k.glLayout=et(H,1);let tt=k;const b=T(),W=new wt;function Yt(t){const n=Ut(t.data,t.skipDeduplicate,t.indices,t.indicesLength);return ut.updateSettings(t.writerSettings),pt.updateSettings(t.writerSettings),Pt(n,ut,pt)}function Ut(t,n,s,r){if(n){const h=lt(s,r,t.count);return new Wt(s,r,h,t)}const i=Ot(t.buffer,t.stride/4,{originalIndices:s}),u=lt(i.indices,r,i.uniqueCount);return{faces:i.indices,facesLength:i.indices.length,neighbors:u,vertices:vt.createView(i.buffer)}}class Wt{constructor(n,s,r,i){this.faces=n,this.facesLength=s,this.neighbors=r,this.vertices=i}}const ut=new Q,pt=new tt,Zt=C().vec3f(c.POSITION0).vec3f(c.POSITION1),Jt=C().vec3f(c.POSITION0).vec3f(c.POSITION1).u16(c.COMPONENTINDEX);export{vt as E,Zt as a,Pt as d,Yt as f,Jt as g,Ut as u};
