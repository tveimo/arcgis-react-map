import{aO as _t,s as Rt,mr as ut,aH as Lt,am as Y,ar as G,as as z,g4 as Nt,at as jt,ms as mt,ab as Et,a4 as et,aw as Ot,mt as Ut,cB as qt,ae as Gt,bp as Wt}from"./index-cGsjYgnw.js";let Pt=class{constructor(e=null,n=null,o=null){this.minValue=e,this.maxValue=n,this.noDataValue=o}};var H;let F=H=class extends _t{static createEmptyBand(t,e){return new(H.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let o=0;o<t.length;o++){const l=t[o];for(let i=0;i<e;i++)l[i]||(n[i]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){var t;return(t=this.pixels)==null?void 0:t.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new Rt("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new Pt)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(n=>zt(n,this.mask));const t=this.mask;let e=0;if(t!=null)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||t==="f64"||t==="f32"||!this.pixels)return;const[e,n]=ut(t),o=this.pixels,l=this.width*this.height,i=o.length;let s,h,a;const r=[];for(let c=0;c<i;c++){a=H.createEmptyBand(t,l),s=o[c];for(let f=0;f<l;f++)h=s[f],a[f]=h>n?n:h<e?e:h;r.push(a)}this.pixels=r,this.pixelType=t}extractBands(t){var f;const{pixels:e,statistics:n}=this;if(t==null||t.length===0||!e||e.length===0)return this;const o=e.length,l=t.some(p=>p>=e.length),i=o===t.length&&!t.some((p,u)=>p!==u);if(l||i)return this;const s=((f=this.bandMasks)==null?void 0:f.length)===o?t.map(p=>this.bandMasks[p]):void 0;let{mask:h,validPixelCount:a}=this;const{width:r,height:c}=this;return s!=null&&s.length&&(h=H.combineBandMasks(s),a=h.filter(p=>!!p).length),new H({pixelType:this.pixelType,width:r,height:c,mask:h,bandMasks:s,validPixelCount:a,maskIsAlpha:this.maskIsAlpha,pixels:t.map(p=>e[p]),statistics:n&&t.map(p=>n[p])})}clone(){const t=new H({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount,premultiplyAlpha:this.premultiplyAlpha,depthCount:this.depthCount});let e;this.mask!=null&&(t.mask=new Uint8Array(this.mask)),this.noDataValues&&(t.noDataValues=[...this.noDataValues]),this.bandMasks&&(t.bandMasks=this.bandMasks.map(o=>new Uint8Array(o)));const n=H.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const o=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=o?this.pixels[e].slice():new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=Lt(this.statistics[e]);return t}getTransferableObject(){const{pixels:t,bandMasks:e,mask:n}=this;this.pixels=[],this.bandMasks=void 0,this.mask=void 0;const o=this.toJSON();this.pixels=t,this.bandMasks=e,this.mask=n,o.pixels=t&&[...t],o.bandMasks=e&&[...e],o.mask=n;const l=[];return[...t??[],n,...e??[]].filter(i=>i!=null&&ArrayBuffer.isView(i)).forEach(i=>{i&&!l.includes(i.buffer)&&l.push(i.buffer)}),{pixelBlock:o,transferList:l}}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:o,pixels:l}=this;if(!t||!(l!=null&&l.length))return void Y.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let i,s,h,a;i=s=h=l[0],l.length>=3?(s=l[1],h=l[2]):l.length===2&&(s=l[1]);const r=new Uint32Array(t),c=this.width*this.height;if(i.length===c)if(e!=null&&e.length===c)if(n)for(a=0;a<c;a++){const f=e[a];if(f){const p=f/255;r[a]=o?f<<24|h[a]*p<<16|s[a]*p<<8|i[a]*p:f<<24|h[a]<<16|s[a]<<8|i[a]}}else for(a=0;a<c;a++)e[a]&&(r[a]=255<<24|h[a]<<16|s[a]<<8|i[a]);else for(a=0;a<c;a++)r[a]=255<<24|h[a]<<16|s[a]<<8|i[a];else Y.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:o}=this;if(!t||!(e!=null&&e.length))return void Y.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const l=this.pixelType;let i=1,s=0,h=1;if(o&&o.length>0){for(const m of o)if(m.minValue!=null&&(s=Math.min(s,m.minValue)),m.maxValue!=null&&m.minValue!=null){const g=m.maxValue-m.minValue;h=Math.max(h,g)}i=255/h}else{let m=255;l==="s8"?(s=-128,m=127):l==="u16"?m=65535:l==="s16"?(s=-32768,m=32767):l==="u32"?m=4294967295:l==="s32"?(s=-2147483648,m=2147483647):l==="f32"?(s=-34e38,m=34e38):l==="f64"&&(s=-Number.MAX_VALUE,m=Number.MAX_VALUE),i=255/(m-s)}const a=new Uint32Array(t),r=this.width*this.height;let c,f,p,u,d;if(c=f=p=e[0],c.length!==r)return Y.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(f=e[1],e.length>=3&&(p=e[2]),n!=null&&n.length===r)for(u=0;u<r;u++)n[u]&&(a[u]=255<<24|(p[u]-s)*i<<16|(f[u]-s)*i<<8|(c[u]-s)*i);else for(u=0;u<r;u++)a[u]=255<<24|(p[u]-s)*i<<16|(f[u]-s)*i<<8|(c[u]-s)*i;else if(n!=null&&n.length===r)for(u=0;u<r;u++)d=(c[u]-s)*i,n[u]&&(a[u]=255<<24|d<<16|d<<8|d);else for(u=0;u<r;u++)d=(c[u]-s)*i,a[u]=255<<24|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!(e!=null&&e.length))return Y.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let o,l,i,s;o=l=i=e[0],e.length>=3?(l=e[1],i=e[2]):e.length===2&&(l=e[1]);const h=this.width*this.height;if(o.length!==h)return Y.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let a=0;if(n!=null&&n.length===h)for(s=0;s<h;s++)t[a++]=o[s],t[a++]=l[s],t[a++]=i[s],t[a++]=1&n[s];else for(s=0;s<h;s++)t[a++]=o[s],t[a++]=l[s],t[a++]=i[s],t[a++]=1}};function zt(t,e){let n=1/0,o=-1/0;const l=t.length;let i,s=0;if(e!=null)for(i=0;i<l;i++)e[i]&&(s=t[i],n=s<n?s:n,o=s>o?s:o);else for(i=0;i<l;i++)s=t[i],n=s<n?s:n,o=s>o?s:o;return new Pt(n,o)}G([z({json:{write:!0}})],F.prototype,"width",void 0),G([z({json:{write:!0}})],F.prototype,"height",void 0),G([z({json:{write:!0}})],F.prototype,"pixelType",void 0),G([Nt("pixelType")],F.prototype,"castPixelType",null),G([z({json:{write:!0}})],F.prototype,"validPixelCount",void 0),G([z({json:{write:!0}})],F.prototype,"mask",void 0),G([z({json:{write:!0}})],F.prototype,"maskIsAlpha",void 0),G([z({json:{write:!0}})],F.prototype,"pixels",void 0),G([z()],F.prototype,"premultiplyAlpha",void 0),G([z({json:{write:!0}})],F.prototype,"statistics",void 0),G([z({json:{write:!0}})],F.prototype,"depthCount",void 0),G([z({json:{write:!0}})],F.prototype,"noDataValues",void 0),G([z({json:{write:!0}})],F.prototype,"bandMasks",void 0),F=H=G([jt("esri.layers.support.PixelBlock")],F);var gt,xt;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(gt||(gt={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(xt||(xt={}));const wt=9;function R(t){var e;return t!=null&&((e=t.pixels)==null?void 0:e.length)>0}function ge(t){var c;if(!(t!=null&&t.length)||t.some(f=>!R(f)))return null;if(t.length===1)return((c=t[0])==null?void 0:c.clone())??null;const e=t,{width:n,height:o,pixelType:l}=e[0];if(e.some(f=>f.width!==n||f.height!==o))return null;const i=e.map(({mask:f})=>f).filter(f=>f!=null);let s=null;i.length&&(s=new Uint8Array(n*o),s.set(i[0]),i.length>1&&It(i.slice(1),s));const h=[];e.forEach(({pixels:f})=>h.push(...f));const a=e.map(({statistics:f})=>f).filter(f=>f==null?void 0:f.length),r=[];return a.forEach(f=>r.push(...f)),new F({pixelType:l,width:n,height:o,mask:s,pixels:h,statistics:r.length?r:null})}function xe(t){if(!t)return;const e=t.colormap;if(!e||e.length===0)return;const n=e.sort((a,r)=>a[0]-r[0]),o=n[0][0]<0?n[0][0]:0,l=Math.max(256,n[n.length-1][0]-o+1),i=new Uint8Array(4*l),s=[],h=n[0].length===5;if(l>65536)return n.forEach(a=>{s[a[0]-o]=h?a.slice(1):a.slice(1).concat([255])}),{indexed2DColormap:s,offset:o,alphaSpecified:h};if(t.fillUnspecified){let a=n[0];for(let r=a[0]-o,c=0;r<l;r++)i[4*r]=a[1],i[4*r+1]=a[2],i[4*r+2]=a[3],i[4*r+3]=h?a[4]:255,r===a[0]-o&&(a=c===n.length-1?a:n[++c])}else for(let a=0;a<n.length;a++){const r=n[a],c=4*(r[0]-o);i[c]=r[1],i[c+1]=r[2],i[c+2]=r[3],i[c+3]=h?r[4]:255}return{indexedColormap:i,offset:o,alphaSpecified:h}}function we(t,e){if(!R(t)||!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),o=n.pixels;let l=n.mask;const i=n.width*n.height;if(o.length!==1)return t;const{indexedColormap:s,indexed2DColormap:h,offset:a,alphaSpecified:r}=e,c=o[0],f=new Uint8Array(c.length),p=new Uint8Array(c.length),u=new Uint8Array(c.length);let d,m=0;if(s){const g=s.length-1;if(l!=null)for(let x=0;x<i;x++)l[x]&&(m=4*(c[x]-a),m<a||m>g?l[x]=0:(f[x]=s[m],p[x]=s[m+1],u[x]=s[m+2],l[x]=s[m+3]));else{l=new Uint8Array(i);for(let x=0;x<i;x++)m=4*(c[x]-a),m<a||m>g?l[x]=0:(f[x]=s[m],p[x]=s[m+1],u[x]=s[m+2],l[x]=s[m+3]);n.mask=l}}else if(h)if(l!=null)for(let g=0;g<i;g++)l[g]&&(d=h[c[g]],f[g]=d[0],p[g]=d[1],u[g]=d[2],l[g]=d[3]);else{l=new Uint8Array(i);for(let g=0;g<i;g++)d=h[c[g]],f[g]=d[0],p[g]=d[1],u[g]=d[2],l[g]=d[3];n.mask=l}return n.pixels=[f,p,u],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=r,n}function ye(t,e){if(!R(t))return null;const{pixels:n,mask:o}=t,l=n.length;let i=e.lut;const{offset:s}=e;i&&i[0].length===1&&(i=n.map(()=>i));const h=[],a=e.outputPixelType||"u8";for(let c=0;c<l;c++){const f=Tt(n[c],o,i[c],s||0,a);h.push(f)}const r=new F({width:t.width,height:t.height,pixels:h,mask:o,pixelType:a});return r.updateStatistics(),r}function Tt(t,e,n,o,l){const i=t.length,s=F.createEmptyBand(l,i);if(e)for(let h=0;h<i;h++)e[h]&&(s[h]=n[t[h]-o]);else for(let h=0;h<i;h++)s[h]=n[t[h]-o];return s}function ke(t,e){if(!R(t))return null;const n=t.clone(),{pixels:o}=n,l=n.width*n.height,i=e.length,s=Math.floor(i/2),h=e[Math.floor(s)],a=o[0],r=new Uint8Array(l),c=new Uint8Array(l),f=new Uint8Array(l);let p=n.mask;const u=e[0].mappedColor.length===4;p||(p=new Uint8Array(l),p.fill(u?255:1),n.mask=p);for(let d=0;d<l;d++)if(p[d]){const m=a[d];let g=!1,x=s,k=h,A=0,M=i-1;for(;M-A>1;){if(m===k.value){g=!0;break}m>k.value?A=x:M=x,x=Math.floor((A+M)/2),k=e[Math.floor(x)]}g||(m===e[A].value?(k=e[A],g=!0):m===e[M].value?(k=e[M],g=!0):m<e[A].value?g=!1:m>e[A].value&&(m<e[M].value?(k=e[A],g=!0):M===i-1?g=!1:(k=e[M],g=!0))),g?(r[d]=k.mappedColor[0],c[d]=k.mappedColor[1],f[d]=k.mappedColor[2],p[d]=k.mappedColor[3]):r[d]=c[d]=f[d]=p[d]=0}return n.pixels=[r,c,f],n.mask=p,n.pixelType="u8",n.maskIsAlpha=u,n}function Me(t,e,n=!1){const l=new Float32Array(3*wt),i=e.length;for(let s=0;s<wt;s++)l[3*s]=t[2*s]??mt-1,l[3*s+1]=t[2*s+1]??mt,l[3*s+2]=e[s]??0,s<i&&(s>0&&(l[3*s]-=1e-5),t[2*s+1]!==t[2*s]&&(s<i-1||!n)&&(l[3*s+1]-=1e-5));return l}function Ae(t,e){if(!R(t))return null;const{width:n,height:o}=t,{inputRanges:l,outputValues:i,outputPixelType:s,noDataRanges:h,allowUnmatched:a,replacementValue:r,isLastInputRangeInclusive:c}=e,f=t.pixels[0],p=F.createEmptyBand(s,f.length),u=t.mask,d=new Uint8Array(n*o);u?d.set(u):d.fill(255);const m=t.pixelType.startsWith("f")?1e-6:0,g=l.map(w=>w-m);g[0]=l[0],g[g.length-1]=l[l.length-1]+(c?1e-6:0);const x=l.length/2,[k,A]=ut(s);for(let w=0;w<o;w++)for(let y=0;y<n;y++){const U=w*n+y;if(d[U]){const b=f[U];let P=!1;for(let I=x-1;I>=0;I--)if(b===l[2*I]||b>g[2*I]&&b<g[2*I+1]){p[U]=i[I],P=!0;break}P||(a?p[U]=b>A?A:b<k?k:r??b:d[U]=0)}}const M=h==null?void 0:h.length;if(M)for(let w=0;w<o;w++)for(let y=0;y<n;y++){const U=w*n+y;if(!u||u[U]){const b=f[U];for(let P=0;P<M;P+=2)if(b>=h[P]&&b<=h[P+1]){p[U]=0,d[U]=0;break}}}return new F({width:n,height:o,pixelType:s,pixels:[p],mask:d})}function yt(t,e,n,o){const l=n!=null&&n.length>=2?new Set(n):null,i=(n==null?void 0:n.length)===1?n[0]:null,s=!!(e!=null&&e.length);for(let h=0;h<t.length;h++)if(o[h]){const a=t[h];if(s){let r=!1;for(let c=0;c<e.length;c+=2)if(a>=e[c]&&a<=e[c+1]){r=!0;break}r||(o[h]=0)}o[h]&&(a===i||l!=null&&l.has(a))&&(o[h]=0)}}function kt(t,e){const n=t[0].length;for(let o=0;o<n;o++)if(e[o]){let l=!1;for(let i=0;i<t.length;i++)if(t[i][o]){l=!0;break}l||(e[o]=0)}}function It(t,e){const n=t[0].length;for(let o=0;o<n;o++)if(e[o]){let l=!1;for(let i=0;i<t.length;i++)if(t[i][o]===0){l=!0;break}l&&(e[o]=0)}}function be(t,e){if(!R(t))return null;const{width:n,height:o,pixels:l}=t,i=n*o,s=new Uint8Array(i);t.mask?s.set(t.mask):s.fill(255);const h=l.length,{includedRanges:a,noDataValues:r,outputPixelType:c,matchAll:f,lookups:p}=e;if(p){const u=[];for(let d=0;d<h;d++){const m=p[d],g=Tt(l[d],s,m.lut,m.offset||0,"u8");u.push(g)}u.length===1?s.set(u[0]):f?kt(u,s):It(u,s)}else if(f){const u=[];for(let d=0;d<h;d++){const m=new Uint8Array(i);m.set(s),yt(l[d],a==null?void 0:a.slice(2*d,2*d+2),r==null?void 0:r[d],m),u.push(m)}u.length===1?s.set(u[0]):kt(u,s)}else for(let u=0;u<h;u++)yt(l[u],a==null?void 0:a.slice(2*u,2*u+2),r==null?void 0:r[u],s);return new F({width:n,height:o,pixelType:c,pixels:l,mask:s})}function ve(t){const{srcPixelType:e,inputRanges:n,outputValues:o,allowUnmatched:l,noDataRanges:i,isLastInputRangeInclusive:s,outputPixelType:h}=t;if(e!=="u8"&&e!=="s8"&&e!=="u16"&&e!=="s16")return null;const a=e.includes("16")?65536:256,r=e.includes("s")?-a/2:0,c=F.createEmptyBand(h,a),f=new Uint8Array(a);l&&f.fill(255);const[p,u]=ut(h);if(n!=null&&n.length&&(o!=null&&o.length)){const m=n.map(g=>g-1e-6);m[0]=n[0],s&&(m[m.length-1]=n[n.length-1]);for(let g=0;g<m.length;g++){const x=o[g]>u?u:o[g]<p?p:o[g],k=Math.ceil(m[2*g]-r),A=n[2*g+1]===n[2*g]?k:Math.floor(m[2*g+1]-r);for(let M=k;M<=A;M++)c[M]=x,f[M]=255}}if(i!=null&&i.length)for(let d=0;d<i.length;d++){const m=Math.ceil(i[2*d]-r),g=Math.floor(i[2*d+1]-r);for(let x=m;x<=g;x++)f[x]=0}return{lut:c,offset:r,mask:f}}function Ue(t,e,n){if(t!=="u8"&&t!=="s8"&&t!=="u16"&&t!=="s16")return null;const o=t.includes("16")?65536:256,l=t.includes("s")?-o/2:0,i=new Uint8Array(o);if(e)for(let s=0;s<e.length;s++){const h=Math.ceil(e[2*s]-l),a=Math.floor(e[2*s+1]-l);for(let r=h;r<=a;r++)i[r]=255}else i.fill(255);if(n)for(let s=0;s<n.length;s++)i[n[s]-l]=0;return{lut:i,offset:l}}function Jt(t,e,n,o,l,i,s,h){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:i<=o*e?0:i<o*e+e?i-o*e:e,xmax:l+s<=n*t?0:l+s<n*t+t?l+s-n*t:t,ymax:i+h<=o*e?0:i+h<o*e+e?i+h-o*e:e}}function Pe(t,e){if(!t||t.length===0)return null;const n=t.find(d=>d.pixelBlock);if((n==null?void 0:n.pixelBlock)==null)return null;const o=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,l=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,i=.01*Math.min(o,l),s=t.sort((d,m)=>Math.abs(d.extent.ymax-m.extent.ymax)>i?m.extent.ymax-d.extent.ymax:Math.abs(d.extent.xmin-m.extent.xmin)>i?d.extent.xmin-m.extent.xmin:0),h=Math.min.apply(null,s.map(d=>d.extent.xmin)),a=Math.min.apply(null,s.map(d=>d.extent.ymin)),r=Math.max.apply(null,s.map(d=>d.extent.xmax)),c=Math.max.apply(null,s.map(d=>d.extent.ymax)),f={x:Math.round((e.xmin-h)/o),y:Math.round((c-e.ymax)/l)},p={width:Math.round((r-h)/o),height:Math.round((c-a)/l)},u={width:Math.round((e.xmax-e.xmin)/o),height:Math.round((e.ymax-e.ymin)/l)};return Math.round(p.width/n.pixelBlock.width)*Math.round(p.height/n.pixelBlock.height)!==s.length||f.x<0||f.y<0||p.width<u.width||p.height<u.height?null:{extent:e,pixelBlock:Xt(s.map(d=>d.pixelBlock),p,{clipOffset:f,clipSize:u})}}function ht(t,e,n,o,l,i){const{width:s,height:h}=n.block,{x:a,y:r}=n.offset,{width:c,height:f}=n.mosaic,p=Jt(s,h,o,l,a,r,c,f);let u=0,d=0;if(i){const m=i.hasGCSSShiftTransform?360:i.halfWorldWidth??0,g=s*i.resolutionX,x=i.startX+o*g;x<m&&x+g>m?d=i.rightPadding:x>=m&&(u=i.leftMargin-i.rightPadding,d=0)}if(p.xmax-=d,typeof e!="number")for(let m=p.ymin;m<p.ymax;m++){const g=(l*h+m-r)*c+(o*s-a)+u,x=m*s;for(let k=p.xmin;k<p.xmax;k++)t[g+k]=e[x+k]}else for(let m=p.ymin;m<p.ymax;m++){const g=(l*h+m-r)*c+(o*s-a)+u;for(let x=p.xmin;x<p.xmax;x++)t[g+x]=e}}function Xt(t,e,n={}){var I;const{clipOffset:o,clipSize:l,alignmentInfo:i,blockWidths:s}=n;if(s)return Ht(t,e,{blockWidths:s});const h=t.find(T=>R(T));if(h==null)return null;const a=l?l.width:e.width,r=l?l.height:e.height,c=h.width,f=h.height,p=e.width/c,u=e.height/f,d={offset:o||{x:0,y:0},mosaic:l||e,block:{width:c,height:f}},m=h.pixelType,g=F.getPixelArrayConstructor(m),x=h.pixels.length,k=[];let A,M;for(let T=0;T<x;T++){M=new g(a*r);for(let v=0;v<u;v++)for(let $=0;$<p;$++){const V=t[v*p+$];R(V)&&(A=V.pixels[T],ht(M,A,d,$,v,i))}k.push(M)}const w=t.some(T=>T==null||T.mask!=null&&T.mask.length>0),y=t.some(T=>(T==null?void 0:T.bandMasks)&&T.bandMasks.length>1),U=w?new Uint8Array(a*r):void 0,b=y?[]:void 0;if(U){for(let T=0;T<u;T++)for(let v=0;v<p;v++){const $=t[T*p+v],V=$!=null?$.mask:null;ht(U,V??($?255:0),d,v,T,i)}if(b)for(let T=0;T<x;T++){const v=new Uint8Array(a*r);for(let $=0;$<u;$++)for(let V=0;V<p;V++){const S=t[$*p+V],B=((I=S==null?void 0:S.bandMasks)==null?void 0:I[T])??(S==null?void 0:S.mask);ht(v,B??(S?255:0),d,V,$,i)}b.push(v)}}const P=new F({width:a,height:r,pixels:k,pixelType:m,bandMasks:b,mask:U});return P.updateStatistics(),P}function Ht(t,e,n){var g;const o=t.find(x=>x!=null);if(o==null)return null;const l=t.some(x=>x==null||!!x.mask),{width:i,height:s}=e,h=l?new Uint8Array(i*s):null,{blockWidths:a}=n,r=[],c=o.getPlaneCount(),f=F.getPixelArrayConstructor(o.pixelType);if(l)for(let x=0,k=0;x<t.length;k+=a[x],x++){const A=t[x];if(!R(A))continue;const M=A.mask;for(let w=0;w<s;w++)for(let y=0;y<a[x];y++)h[w*i+y+k]=M==null?255:M[w*A.width+y]}const p=t.some(x=>(x==null?void 0:x.bandMasks)&&x.bandMasks.length>1),u=p?[]:void 0,d=i*s;for(let x=0;x<c;x++){const k=new f(d),A=p?new Uint8Array(d):void 0;for(let M=0,w=0;M<t.length;w+=a[M],M++){const y=t[M];if(!R(y))continue;const U=y.pixels[x];if(U!=null){for(let b=0;b<s;b++)for(let P=0;P<a[M];P++)k[b*i+P+w]=U[b*y.width+P];if(A){const b=((g=y.bandMasks)==null?void 0:g[x])??y.mask;for(let P=0;P<s;P++)for(let I=0;I<a[M];I++)A[P*i+I+w]=b?b[P*y.width+I]:255}}}r.push(k),u&&A&&u.push(A)}const m=new F({width:i,height:s,mask:h,bandMasks:u,pixels:r,pixelType:o.pixelType});return m.updateStatistics(),m}function Te(t,e,n){if(!R(t))return null;const{width:o,height:l}=t,i=e.x,s=e.y,h=n.width+i,a=n.height+s;if(i<0||s<0||h>o||a>l||i===0&&s===0&&h===o&&a===l)return t;t.mask||(t.mask=new Uint8Array(o*l));const r=t.mask;for(let c=0;c<l;c++){const f=c*o;for(let p=0;p<o;p++)r[f+p]=c<s||c>=a||p<i||p>=h?0:1}return t.updateStatistics(),t}function Kt(t){if(!R(t))return null;const e=t.clone(),{width:n,height:o,pixels:l}=t,i=l[0],s=e.pixels[0],h=t.mask;for(let a=2;a<o-1;a++){const r=new Map;for(let f=a-2;f<a+2;f++)for(let p=0;p<4;p++){const u=f*n+p;st(r,i[u],h?h[u]:1)}s[a*n]=Mt(r),s[a*n+1]=s[a*n+2]=s[a*n];let c=3;for(;c<n-1;c++){let f=(a-2)*n+c+1;st(r,i[f],h?h[f]:1),f=(a-1)*n+c+1,st(r,i[f],h?h[f]:1),f=a*n+c+1,st(r,i[f],h?h[f]:1),f=(a+1)*n+c+1,st(r,i[f],h?h[f]:1),f=(a-2)*n+c-3,lt(r,i[f],h?h[f]:1),f=(a-1)*n+c-3,lt(r,i[f],h?h[f]:1),f=a*n+c-3,lt(r,i[f],h?h[f]:1),f=(a+1)*n+c-3,lt(r,i[f],h?h[f]:1),s[a*n+c]=Mt(r)}s[a*n+c+1]=s[a*n+c]}for(let a=0;a<n;a++)s[a]=s[n+a]=s[2*n+a],s[(o-1)*n+a]=s[(o-2)*n+a];return e.updateStatistics(),e}function Mt(t){if(t.size===0)return 0;let e=0,n=-1,o=0;const l=t.keys();let i=l.next();for(;!i.done;)o=t.get(i.value),o>e&&(n=i.value,e=o),i=l.next();return n}function lt(t,e,n){if(n===0)return;const o=t.get(e);o===1?t.delete(e):t.set(e,o-1)}function st(t,e,n){n!==0&&t.set(e,t.has(e)?t.get(e)+1:1)}function Bt(t,e,n){let{x:o,y:l}=e;const{width:i,height:s}=n;if(o===0&&l===0&&s===t.height&&i===t.width)return t;const{width:h,height:a}=t,r=Math.max(0,l),c=Math.max(0,o),f=Math.min(o+i,h),p=Math.min(l+s,a);if(f<0||p<0||!R(t))return null;o=Math.max(0,-o),l=Math.max(0,-l);const{pixels:u}=t,d=i*s,m=u.length,g=[];for(let M=0;M<m;M++){const w=u[M],y=F.createEmptyBand(t.pixelType,d);for(let U=r;U<p;U++){const b=U*h;let P=(U+l-r)*i+o;for(let I=c;I<f;I++)y[P++]=w[b+I]}g.push(y)}const x=new Uint8Array(d),k=t.mask;for(let M=r;M<p;M++){const w=M*h;let y=(M+l-r)*i+o;for(let U=c;U<f;U++)x[y++]=k?k[w+U]:1}const A=new F({width:n.width,height:n.height,pixelType:t.pixelType,pixels:g,mask:x});return A.updateStatistics(),A}function $t(t,e=!0){if(!R(t))return null;const{pixels:n,width:o,height:l,mask:i,pixelType:s}=t,h=[],a=Math.round(o/2),r=Math.round(l/2),c=l-1,f=o-1;for(let u=0;u<n.length;u++){const d=n[u],m=F.createEmptyBand(s,a*r);let g=0;for(let x=0;x<l;x+=2)for(let k=0;k<o;k+=2){const A=d[x*o+k];if(e){const M=k===f?A:d[x*o+k+1],w=x===c?A:d[x*o+k+o],y=k===f?w:x===c?M:d[x*o+k+o+1];m[g++]=(A+M+w+y)/4}else m[g++]=A}h.push(m)}let p=null;if(i!=null){p=new Uint8Array(a*r);let u=0;for(let d=0;d<l;d+=2)for(let m=0;m<o;m+=2){const g=i[d*o+m];if(e){const x=m===f?g:i[d*o+m+1],k=d===c?g:i[d*o+m+o],A=m===f?k:d===c?x:i[d*o+m+o+1];p[u++]=g*x*k*A?1:0}else p[u++]=g}}return new F({width:a,height:r,pixelType:s,pixels:h,mask:p})}function Ie(t,e,n=0,o=!0){if(!R(t))return null;const{width:l,height:i}=e;let{width:s,height:h}=t;const a=new Map,r={x:0,y:0},c=1+n;let f=t;for(let p=0;p<c;p++){const u=Math.ceil(s/l),d=Math.ceil(h/i);for(let m=0;m<d;m++){r.y=m*i;for(let g=0;g<u;g++){r.x=g*l;const x=Bt(f,r,e);a.set(`${p}/${m}/${g}`,x)}}p<c-1&&(f=$t(f,o)),s=Math.round(s/2),h=Math.round(h/2)}return a}function Be(t){const{pixelBlock:e,tileSize:n,level:o,row:l,col:i,useBilinear:s}=t;if(!R(e))return null;const{width:h,height:a}=n,r=2**o,c=r*h,f=r*a;let p=Bt(e,{y:l*f,x:i*c},{width:c,height:f});if(!p)return null;for(let u=o;u>0;u--)p=$t(p,s);return p}function St(t,e,n,o,l=0){const{width:i,height:s}=t,{width:h,height:a}=e,r=o.cols,c=o.rows,f=Math.ceil(h/r-.1/r),p=Math.ceil(a/c-.1/c);let u,d,m,g,x,k,A;const M=f*r,w=M*p*c,y=new Float32Array(w),U=new Float32Array(w),b=new Uint32Array(w),P=new Uint32Array(w);let I,T,v=0;for(let $=0;$<p;$++)for(let V=0;V<f;V++){u=12*($*f+V),d=n[u],m=n[u+1],g=n[u+2],x=n[u+3],k=n[u+4],A=n[u+5];for(let S=0;S<c;S++){v=($*c+S)*M+V*r,T=(S+.5)/c;for(let B=0;B<S;B++)I=(B+.5)/r,y[v+B]=(d*I+m*T+g)*i+l,U[v+B]=(x*I+k*T+A)*s+l,b[v+B]=Math.floor(y[v+B]),P[v+B]=Math.floor(U[v+B])}u+=6,d=n[u],m=n[u+1],g=n[u+2],x=n[u+3],k=n[u+4],A=n[u+5];for(let S=0;S<c;S++){v=($*c+S)*M+V*r,T=(S+.5)/c;for(let B=S;B<r;B++)I=(B+.5)/r,y[v+B]=(d*I+m*T+g)*i+l,U[v+B]=(x*I+k*T+A)*s+l,b[v+B]=Math.floor(y[v+B]),P[v+B]=Math.floor(U[v+B])}}return{offsets_x:y,offsets_y:U,offsets_xi:b,offsets_yi:P,gridWidth:M}}function $e(t,e){const{coefficients:n,spacing:o}=e,{offsets_x:l,offsets_y:i,gridWidth:s}=St(t,t,n,{rows:o[0],cols:o[1]}),{width:h,height:a}=t,r=new Float32Array(h*a),c=180/Math.PI;for(let f=0;f<a;f++)for(let p=0;p<h;p++){const u=f*s+p,d=f===0?u:u-s,m=f===a-1?u:u+s,g=l[d]-l[m],x=i[m]-i[d];if(isNaN(g)||isNaN(x))r[f*h+p]=90;else{let k=Math.atan2(x,g)*c;k=(360+k)%360,r[f*h+p]=k}}return r}function Se(t,e,n,o,l="nearest"){if(!R(t))return null;l==="majority"&&(t=Kt(t));const{pixels:i,mask:s,bandMasks:h,pixelType:a}=t,r=t.width,c=t.height,f=F.getPixelArrayConstructor(a),p=i.length,{width:u,height:d}=e;let m=!1;for(let v=0;v<n.length;v+=3)n[v]===-1&&n[v+1]===-1&&n[v+2]===-1&&(m=!0);const{offsets_x:g,offsets_y:x,offsets_xi:k,offsets_yi:A,gridWidth:M}=St({width:r,height:c},e,n,o,l==="majority"?.5:0);let w;const y=(v,$,V,S)=>{const B=v instanceof Float32Array||v instanceof Float64Array?0:.5;for(let C=0;C<d;C++){w=C*M;for(let D=0;D<u;D++){if(g[w]<0||x[w]<0)v[C*u+D]=0;else if(S)v[C*u+D]=$[k[w]+A[w]*r];else{const j=Math.floor(g[w]),q=Math.floor(x[w]),L=Math.ceil(g[w]),O=Math.ceil(x[w]),W=g[w]-j,X=x[w]-q;if(!V||V[j+q*r]&&V[L+q*r]&&V[j+O*r]&&V[L+O*r]){const tt=(1-W)*$[j+q*r]+W*$[L+q*r],K=(1-W)*$[j+O*r]+W*$[L+O*r];v[C*u+D]=(1-X)*tt+X*K+B}else v[C*u+D]=$[k[w]+A[w]*r]}w++}}},U=[];let b;const P=(h==null?void 0:h.length)===p,I=[];for(let v=0;v<p;v++){if(P){const $=new Uint8Array(u*d);y($,h[v],h[v],!0),I.push($)}b=new f(u*d),y(b,i[v],P?h[v]:s,l==="nearest"||l==="majority"),U.push(b)}const T=new F({width:u,height:d,pixelType:a,pixels:U,bandMasks:P?I:void 0});if(s!=null)T.mask=new Uint8Array(u*d),y(T.mask,s,s,!0);else if(m){T.mask=new Uint8Array(u*d);for(let v=0;v<u*d;v++)T.mask[v]=g[v]<0||x[v]<0?0:1}return T.updateStatistics(),T}function Fe(t){const{pixelBlock:e,extent:n,fieldNames:o,skipFactor:l,skipSpatialReference:i=!1,pixelIdOffset:s=0}=t,h=[],{width:a,height:r,pixels:c,mask:f}=e,p=t.imageRowSize??a,u=n.width/a,d=n.height/r,m=c.length,g=Math.floor(l/2),{xmin:x,ymax:k}=n,A=i?void 0:n.spatialReference.toJSON();for(let M=g;M<r;M+=l)for(let w=g;w<a;w+=l){const y=M*a+w;if(!f||f[y]){const U={x:x+(w+.5)*u,y:k-(M+.5)*d,spatialReference:A},b={objectId:s+M*p+w};for(let P=0;P<m;P++)b[o[P+1]]=c[P][y];h.push({geometry:U,attributes:b})}}return h}const Z=new Map;Z.set("meter-per-second",1),Z.set("kilometer-per-hour",.277778),Z.set("knots",.514444),Z.set("feet-per-second",.3048),Z.set("mile-per-hour",.44704);const ft=180/Math.PI,pt=5,ot=new Et({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function dt(t,e){return Z.get(t)/Z.get(e)||1}function Ft(t){return(450-t)%360}function Vt(t,e="geographic"){const[n,o]=t,l=Math.sqrt(n*n+o*o);let i=Math.atan2(o,n)*ft;return i=(360+i)%360,e==="geographic"&&(i=Ft(i)),[l,i]}function Qt(t,e="geographic"){let n=t[1];e==="geographic"&&(n=Ft(n)),n%=360;const o=t[0];return[o*Math.cos(n/ft),o*Math.sin(n/ft)]}function Ve(t,e,n,o="geographic"){if(!R(t)||n==null)return t;const l=e==="vector-magdir"?t.clone():At(t,e),i=l.pixels[1];for(let s=0;s<i.length;s++)i[s]=o==="geographic"?(i[s]+n[s]+270)%360:(i[s]+360-n[s])%360;return e==="vector-magdir"?l:At(l,"vector-magdir")}function At(t,e,n="geographic",o=1){if(!R(t))return t;const{pixels:l,width:i,height:s}=t,h=i*s,a=l[0],r=l[1],c=t.pixelType.startsWith("f")?t.pixelType:"f32",f=F.createEmptyBand(c,h),p=F.createEmptyBand(c,h);let u=0;for(let m=0;m<s;m++)for(let g=0;g<i;g++)e==="vector-uv"?([f[u],p[u]]=Vt([a[u],r[u]],n),f[u]*=o):([f[u],p[u]]=Qt([a[u],r[u]],n),f[u]*=o,p[u]*=o),u++;const d=new F({pixelType:c,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[f,p]});return d.updateStatistics(),d}function Ce(t,e,n=1){if(n===1||!R(t))return t;const o=t.clone(),{pixels:l,width:i,height:s}=o,h=l[0];l[1];let a=0;for(let r=0;r<s;r++)for(let c=0;c<i;c++)h[a]*=n,a++;return o.updateStatistics(),o}function De(t,e,n,o,l){if(l==null||!l.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/o),height:Math.round(n/o),resolution:t.width/e};const i=l.xmin,s=l.ymax,h=(t.xmax-t.xmin)/e*o,a=(t.ymax-t.ymin)/n*o,r=(h+a)/2;return t.xmin=i+Math.floor((t.xmin-i)/h)*h,t.xmax=i+Math.ceil((t.xmax-i)/h)*h,t.ymin=s+Math.floor((t.ymin-s)/a)*a,t.ymax=s+Math.ceil((t.ymax-s)/a)*a,{extent:t,width:Math.round(t.width/h),height:Math.round(t.height/a),resolution:r}}const Yt=Ct(0,0,0);function Ct(t=0,e=0,n=Math.PI,o=!0){o&&(n=(2*Math.PI-n)%(2*Math.PI));const l=o?-1:1,i=13*l,s=-7*l,h=-2*l,a=-16*l,r=21.75,[c,f]=E(0,e+i,n,r),[p,u]=E(t-5.5,e+s,n,r),[d,m]=E(t+5.5,e+s,n,r),[g,x]=E(t-1.5,e+h,n,r),[k,A]=E(t+1.5,e+h,n,r),[M,w]=E(t-1.5,e+a,n,r),[y,U]=E(t+1.5,e+a,n,r);return[c,f,p,u,g,x,k,A,d,m,M,w,y,U]}function Zt(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const o=10,l=n?-1:1,i=5*l,s=20*l,h=25*l,a=45,r=0,c=0,f=2,p=0,u=f*l,d=n?1:-1,m=o/2*d;let[g,x]=[r+m,c-s],[k,A]=[g+f*d,x],[M,w]=[k-p*d,A+u],[y,U]=[r-m,c-h],[b,P]=[y+p*d,U-u],I=Math.ceil(t/pt),T=Math.floor(I/10);I-=8*T;const v=[],$=[];for(let W=0;W<I/2;W++,T--){T<=0&&I%2==1&&W===(I-1)/2&&(y=r,b=y+p*d,U=(U+x)/2,P=U-u);const[X,tt]=E(y,U,e,a);if(T>0){const[K,nt]=E(k,U,e,a),[it,_]=E(g,x,e,a);v.push(K),v.push(nt),v.push(X),v.push(tt),v.push(it),v.push(_)}else{const[K,nt]=E(k,A,e,a),[it,_]=E(M,w,e,a),[N,at]=E(b,P,e,a);$.push(X),$.push(tt),$.push(N),$.push(at),$.push(it),$.push(_),$.push(K),$.push(nt)}U+=i,x+=i,A+=i,w+=i,P+=i}const[V,S]=E(r+m,c+s,e,a),B=(o/2+f)*d,[C,D]=E(r+B,c+s,e,a),[j,q]=E(r+m,c-h,e,a),[L,O]=E(r+B,c-h,e,a);return{pennants:v,barbs:$,shaft:[V,S,C,D,j,q,L,O]}}function E(t,e,n,o=1){const l=Math.sqrt(t*t+e*e)/o,i=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[l,(2*Math.PI+i-n)%(2*Math.PI)]}const rt=[0,1,3,6,10,16,21,27,33,40,47,55,63],te=[0,.5,1,1.5,2],ee=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Q(t,e,n,o){const l=dt(o||"knots",n);let i;for(i=1;i<e.length;i++)if(i===e.length-1){if(t<e[i]*l)break}else if(t<=e[i]*l)break;return Math.min(i-1,e.length-2)}function ne(t,e,n,o,l){let i=0;switch(e){case"beaufort_kn":i=Q(t,rt,"knots",n);break;case"beaufort_km":i=Q(t,rt,"kilometer-per-hour",n);break;case"beaufort_ft":i=Q(t,rt,"feet-per-second",n);break;case"beaufort_m":i=Q(t,rt,"meter-per-second",n);break;case"classified_arrow":i=Q(t,l??[],o,n);break;case"ocean_current_m":i=Q(t,te,"meter-per-second",n);break;case"ocean_current_kn":i=Q(t,ee,"knots",n)}return i}function ie(t,e){const{style:n,inputUnit:o,outputUnit:l,breakValues:i}=e,s=ot.fromJSON(o),h=ot.fromJSON(l),a=7*6,r=15;let c=0,f=0;const{width:p,height:u,mask:d}=t,m=t.pixels[0],g=t.pixels[1],x=d!=null?d.filter(w=>w>0).length:p*u,k=new Float32Array(x*a),A=new Uint32Array(r*x),M=e.invertDirection?Ct(0,0,0,!1):Yt;for(let w=0;w<u;w++)for(let y=0;y<p;y++){const U=w*p+y;if(!d||d[w*p+y]){const b=(g[U]+360)%360/180*Math.PI,P=ne(m[U],n,s,h,i);for(let T=0;T<M.length;T+=2)k[c++]=(y+.5)/p,k[c++]=(w+.5)/u,k[c++]=M[T],k[c++]=M[T+1]+b,k[c++]=P,k[c++]=m[U];const I=7*(c/a-1);A[f++]=I,A[f++]=I+1,A[f++]=I+2,A[f++]=I+0,A[f++]=I+4,A[f++]=I+3,A[f++]=I+0,A[f++]=I+2,A[f++]=I+3,A[f++]=I+2,A[f++]=I+5,A[f++]=I+3,A[f++]=I+5,A[f++]=I+6,A[f++]=I+3}}return{vertexData:k,indexData:A}}const ct=[];function se(t,e){if(ct.length===0)for(let u=0;u<30;u++)ct.push(Zt(5*u,0,!e.invertDirection));const n=dt(ot.fromJSON(e.inputUnit),"knots"),{width:o,height:l,mask:i}=t,s=t.pixels[0],h=t.pixels[1],a=6,r=[],c=[];let f=0,p=0;for(let u=0;u<l;u++)for(let d=0;d<o;d++){const m=u*o+d,g=s[m]*n;if((!i||i[u*o+d])&&g>=pt){const x=(h[m]+360)%360/180*Math.PI,{pennants:k,barbs:A,shaft:M}=ct[Math.min(Math.floor(g/5),29)];if(k.length+A.length===0)continue;let w=r.length/a;const y=(d+.5)/o,U=(u+.5)/l;for(let b=0;b<k.length;b+=2)r[f++]=y,r[f++]=U,r[f++]=k[b],r[f++]=k[b+1]+x,r[f++]=0,r[f++]=g;for(let b=0;b<A.length;b+=2)r[f++]=y,r[f++]=U,r[f++]=A[b],r[f++]=A[b+1]+x,r[f++]=0,r[f++]=g;for(let b=0;b<M.length;b+=2)r[f++]=y,r[f++]=U,r[f++]=M[b],r[f++]=M[b+1]+x,r[f++]=0,r[f++]=g;for(let b=0;b<k.length/6;b++)c[p++]=w,c[p++]=w+1,c[p++]=w+2,w+=3;for(let b=0;b<A.length/8;b++)c[p++]=w,c[p++]=w+1,c[p++]=w+2,c[p++]=w+1,c[p++]=w+2,c[p++]=w+3,w+=4;c[p++]=w+0,c[p++]=w+1,c[p++]=w+2,c[p++]=w+1,c[p++]=w+3,c[p++]=w+2,w+=4}}return{vertexData:new Float32Array(r),indexData:new Uint32Array(c)}}function le(t,e){let o=0,l=0;const{width:i,height:s,mask:h}=t,a=t.pixels[0],r=[],c=[],f=dt(ot.fromJSON(e.inputUnit),"knots"),p=e.style==="wind_speed"?pt:Number.MAX_VALUE;for(let u=0;u<s;u++)for(let d=0;d<i;d++){const m=a[u*i+d]*f;if((!h||h[u*i+d])&&m<p){for(let x=0;x<4;x++)r[o++]=(d+.5)/i,r[o++]=(u+.5)/s,r[o++]=x<2?-.5:.5,r[o++]=x%2==0?-.5:.5,r[o++]=0,r[o++]=m;const g=4*(o/24-1);c[l++]=g,c[l++]=g+1,c[l++]=g+2,c[l++]=g+1,c[l++]=g+2,c[l++]=g+3}}return{vertexData:new Float32Array(r),indexData:new Uint32Array(c)}}function _e(t,e){return e.style==="simple_scalar"?le(t,e):e.style==="wind_speed"?se(t,e):ie(t,e)}function Re(t,e,n,o=[0,0],l=.5){const{width:i,height:s,mask:h}=t,[a,r]=t.pixels,[c,f]=o,p=Math.round((i-c)/n),u=Math.round((s-f)/n),d=p*u,m=new Float32Array(d),g=new Float32Array(d),x=new Uint8Array(d);for(let A=0;A<u;A++)for(let M=0;M<p;M++){let w=0;const y=A*p+M,U=Math.max(0,A*n+f),b=Math.max(0,M*n+c),P=Math.min(s,U+n),I=Math.min(i,b+n);for(let T=U;T<P;T++)for(let v=b;v<I;v++){const $=T*i+v;if(!h||h[$]){w++;const V=[a[$],r[$]],[S,B]=V;m[y]+=S,g[y]+=B}}if(w>=(P-U)*(I-b)*(1-l)){x[y]=1;const[T,v]=Vt([m[y]/w,g[y]/w]);m[y]=T,g[y]=v}else x[y]=0,m[y]=0,g[y]=0}const k=new F({width:p,height:u,pixels:[m,g],mask:x});return k.updateStatistics(),k}const J=()=>Y.getLogger("esri.views.2d.engine.flow.dataUtils"),re=10;async function Le(t,e,n,o){const l=performance.now(),i=oe(e,n),s=performance.now(),h=he(e,i,n.width,n.height),a=performance.now(),r=fe(h),c=performance.now(),f=t==="Streamlines"?ue(r,re):pe(r),p=performance.now();return et("esri-2d-profiler")&&(J().info("I.1","_createFlowFieldFromData (ms)",Math.round(s-l)),J().info("I.2","_getStreamlines (ms)",Math.round(a-s)),J().info("I.3","createAnimatedLinesData (ms)",Math.round(c-a)),J().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(p-c)),J().info("I.5","createFlowMesh (ms)",Math.round(p-l)),J().info("I.6","Mesh size (bytes)",f.vertexData.buffer.byteLength+f.indexData.buffer.byteLength)),await Promise.resolve(),Ot(o),f}function oe(t,e){const n=ce(e.data,e.width,e.height,t.smoothing);return t.interpolate?(o,l)=>{const i=Math.floor(o),s=Math.floor(l);if(i<0||i>=e.width)return[0,0];if(s<0||s>=e.height)return[0,0];const h=o-i,a=l-s,r=i,c=s,f=i<e.width-1?i+1:i,p=s<e.height-1?s+1:s,u=n[2*(c*e.width+r)],d=n[2*(c*e.width+f)],m=n[2*(p*e.width+r)],g=n[2*(p*e.width+f)],x=n[2*(c*e.width+r)+1],k=n[2*(c*e.width+f)+1];return[(u*(1-a)+m*a)*(1-h)+(d*(1-a)+g*a)*h,(x*(1-a)+n[2*(p*e.width+r)+1]*a)*(1-h)+(k*(1-a)+n[2*(p*e.width+f)+1]*a)*h]}:(o,l)=>{const i=Math.round(o),s=Math.round(l);return i<0||i>=e.width||s<0||s>=e.height?[0,0]:[n[2*(s*e.width+i)],n[2*(s*e.width+i)+1]]}}function ae(t,e,n,o,l,i,s,h,a){const r=[];let c=n,f=o,p=0,[u,d]=e(c,f);u*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(u*u+d*d);let g,x;r.push({x:c,y:f,t:p,speed:m});for(let k=0;k<t.verticesPerLine;k++){let[A,M]=e(c,f);A*=t.velocityScale,M*=t.velocityScale;const w=Math.sqrt(A*A+M*M);if(w<t.minSpeedThreshold)return r;const y=A/w,U=M/w;if(c+=y*t.segmentLength,f+=U*t.segmentLength,p+=t.segmentLength/w,Math.acos(y*g+U*x)>t.maxTurnAngle)return r;if(t.collisions){const b=Math.round(c*a),P=Math.round(f*a);if(b<0||b>s-1||P<0||P>h-1)return r;const I=i[P*s+b];if(I!==-1&&I!==l)return r;i[P*s+b]=l}r.push({x:c,y:f,t:p,speed:w}),g=y,x=U}return r}function he(t,e,n,o){const l=[],i=new Ut,s=1/Math.max(t.lineCollisionWidth,1),h=Math.round(n*s),a=Math.round(o*s),r=new Int32Array(h*a);for(let f=0;f<r.length;f++)r[f]=-1;const c=[];for(let f=0;f<o;f+=t.lineSpacing)for(let p=0;p<n;p+=t.lineSpacing)c.push({x:p,y:f,sort:i.getFloat()});c.sort((f,p)=>f.sort-p.sort);for(const{x:f,y:p}of c)if(i.getFloat()<t.density){const u=ae(t,e,f,p,l.length,r,h,a,s);if(u.length<2)continue;l.push(u)}return l}function ce(t,e,n,o){if(o===0)return t;const l=Math.round(3*o),i=new Array(2*l+1);let s=0;for(let r=-l;r<=l;r++){const c=Math.exp(-r*r/(o*o));i[r+l]=c,s+=c}for(let r=-l;r<=l;r++)i[r+l]/=s;const h=new Float32Array(t.length);for(let r=0;r<n;r++)for(let c=0;c<e;c++){let f=0,p=0;for(let u=-l;u<=l;u++){if(c+u<0||c+u>=e)continue;const d=i[u+l];f+=d*t[2*(r*e+(c+u))],p+=d*t[2*(r*e+(c+u))+1]}h[2*(r*e+c)]=f,h[2*(r*e+c)+1]=p}const a=new Float32Array(t.length);for(let r=0;r<e;r++)for(let c=0;c<n;c++){let f=0,p=0;for(let u=-l;u<=l;u++){if(c+u<0||c+u>=n)continue;const d=i[u+l];f+=d*h[2*((c+u)*e+r)],p+=d*h[2*((c+u)*e+r)+1]}a[2*(c*e+r)]=f,a[2*(c*e+r)+1]=p}return a}function fe(t,e){const n=new Ut,o=t.reduce((a,r)=>a+r.length,0),l=new Float32Array(4*o),i=new Array(t.length);let s=0,h=0;for(const a of t){const r=s;for(const c of a)l[4*s]=c.x,l[4*s+1]=c.y,l[4*s+2]=c.t,l[4*s+3]=c.speed,s++;i[h++]={startVertex:r,numberOfVertices:a.length,totalTime:a[a.length-1].t,timeSeed:n.getFloat()}}return{lineVertices:l,lineDescriptors:i}}function ue(t,e){const{lineVertices:o,lineDescriptors:l}=t;let i=0,s=0;for(const u of l)i+=2*u.numberOfVertices,s+=6*(u.numberOfVertices-1);const h=new Float32Array(i*9),a=new Uint32Array(s);let r=0,c=0;function f(){a[c++]=r-2,a[c++]=r,a[c++]=r-1,a[c++]=r,a[c++]=r+1,a[c++]=r-1}function p(u,d,m,g,x,k,A,M){const w=r*9;let y=0;h[w+y++]=u,h[w+y++]=d,h[w+y++]=1,h[w+y++]=m,h[w+y++]=k,h[w+y++]=A,h[w+y++]=g/2,h[w+y++]=x/2,h[w+y++]=M,r++,h[w+y++]=u,h[w+y++]=d,h[w+y++]=-1,h[w+y++]=m,h[w+y++]=k,h[w+y++]=A,h[w+y++]=-g/2,h[w+y++]=-x/2,h[w+y++]=M,r++}for(const u of l){const{totalTime:d,timeSeed:m}=u;let g=null,x=null,k=null,A=null,M=null,w=null;for(let y=0;y<u.numberOfVertices;y++){const U=o[4*(u.startVertex+y)],b=o[4*(u.startVertex+y)+1],P=o[4*(u.startVertex+y)+2],I=o[4*(u.startVertex+y)+3];let T=null,v=null,$=null,V=null;if(y>0){T=U-g,v=b-x;const S=Math.sqrt(T*T+v*v);if(T/=S,v/=S,y>1){let B=T+M,C=v+w;const D=Math.sqrt(B*B+C*C);B/=D,C/=D;const j=Math.min(1/(B*T+C*v),e);B*=j,C*=j,$=-C,V=B}else $=-v,V=T;$!==null&&V!==null&&(p(g,x,k,$,V,d,m,I),f())}g=U,x=b,k=P,M=T,w=v,A=I}p(g,x,k,-w,M,d,m,A)}return{vertexData:h,indexData:a}}function pe(t){const{lineVertices:l,lineDescriptors:i}=t;let s=0,h=0;for(const S of i){const B=S.numberOfVertices-1;s+=4*B*2,h+=6*B*2}const a=new Float32Array(s*16),r=new Uint32Array(h);let c,f,p,u,d,m,g,x,k,A,M,w,y,U,b=0,P=0;function I(){r[P++]=b-8,r[P++]=b-7,r[P++]=b-6,r[P++]=b-7,r[P++]=b-5,r[P++]=b-6,r[P++]=b-4,r[P++]=b-3,r[P++]=b-2,r[P++]=b-3,r[P++]=b-1,r[P++]=b-2}function T(S,B,C,D,j,q,L,O,W,X,tt,K,nt,it){const _=b*16;let N=0;for(const at of[1,2])for(const Dt of[1,2,3,4])a[_+N++]=S,a[_+N++]=B,a[_+N++]=C,a[_+N++]=D,a[_+N++]=L,a[_+N++]=O,a[_+N++]=W,a[_+N++]=X,a[_+N++]=at,a[_+N++]=Dt,a[_+N++]=nt,a[_+N++]=it,a[_+N++]=j/2,a[_+N++]=q/2,a[_+N++]=tt/2,a[_+N++]=K/2,b++}function v(S,B){let C=k+M,D=A+w;const j=Math.sqrt(C*C+D*D);C/=j,D/=j;const q=k*C+A*D;C/=q,D/=q;let L=M+y,O=w+U;const W=Math.sqrt(L*L+O*O);L/=W,O/=W;const X=M*L+w*O;L/=X,O/=X,T(c,f,p,u,-D,C,d,m,g,x,-O,L,S,B),I()}function $(S,B,C,D,j,q){if(k=M,A=w,M=y,w=U,k==null&&A==null&&(k=M,A=w),d!=null&&m!=null){y=S-d,U=B-m;const L=Math.sqrt(y*y+U*U);y/=L,U/=L}k!=null&&A!=null&&v(j,q),c=d,f=m,p=g,u=x,d=S,m=B,g=C,x=D}function V(S,B){k=M,A=w,M=y,w=U,k==null&&A==null&&(k=M,A=w),k!=null&&A!=null&&v(S,B)}for(const S of i){c=null,f=null,p=null,u=null,d=null,m=null,g=null,x=null,k=null,A=null,M=null,w=null,y=null,U=null;const{totalTime:B,timeSeed:C}=S;for(let D=0;D<S.numberOfVertices;D++)$(l[4*(S.startVertex+D)],l[4*(S.startVertex+D)+1],l[4*(S.startVertex+D)+2],l[4*(S.startVertex+D)+3],B,C);V(B,C)}return{vertexData:a,indexData:r}}function bt(t,e){const n=e.pixels,{width:o,height:l}=e,i=new Float32Array(o*l*2),s=e.mask||new Uint8Array(o*l*2);if(e.mask||s.fill(255),t==="vector-uv")for(let h=0;h<o*l;h++)i[2*h]=n[0][h],i[2*h+1]=-n[1][h];else if(t==="vector-magdir")for(let h=0;h<o*l;h++){const a=n[0][h],r=Wt(n[1][h]),c=Math.cos(r-Math.PI/2),f=Math.sin(r-Math.PI/2);i[2*h]=c*a,i[2*h+1]=f*a}return{data:i,mask:s,width:o,height:l}}async function Ne(t,e,n,o,l,i){const s=performance.now(),h=qt(e.spatialReference);if(!h){const M=await vt(t,e,n,o,l,i);return et("esri-2d-profiler")&&J().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-s)),et("esri-2d-profiler")&&J().info("I.9","Number of parts",1),M}const[a,r]=h.valid,c=r-a,f=Math.ceil(e.width/c),p=e.width/f,u=Math.round(n/f);let d=e.xmin;const m=[],g=performance.now();for(let M=0;M<f;M++){const w=new Gt({xmin:d,xmax:d+p,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});m.push(vt(t,w,u,o,l,i)),d+=p}const x=await Promise.all(m);et("esri-2d-profiler")&&J().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-g)),et("esri-2d-profiler")&&J().info("I.9","Number of parts",x.length);const k={data:new Float32Array(n*o*2),mask:new Uint8Array(n*o),width:n,height:o};let A=0;for(const M of x){for(let w=0;w<M.height;w++)for(let y=0;y<M.width;y++)A+y>=n||(k.data[2*(w*n+A+y)]=M.data[2*(w*M.width+y)],k.data[2*(w*n+A+y)+1]=M.data[2*(w*M.width+y)+1],k.mask[w*n+A+y]=M.mask[w*M.width+y]);A+=M.width}return et("esri-2d-profiler")&&J().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-s)),k}async function vt(t,e,n,o,l,i){var a;const s={requestProjectedLocalDirections:!0,signal:i};if(l!=null&&(s.timeExtent=l),t.type==="imagery"){await t.load({signal:i});const r=await t.internalFetchImage(e,n,o,s);return((a=r==null?void 0:r.pixelData)==null?void 0:a.pixelBlock)==null?{data:new Float32Array(n*o*2),mask:new Uint8Array(n*o),width:n,height:o}:bt(t.rasterInfo.dataType,r.pixelData.pixelBlock)}await t.load({signal:i});const h=await t.fetchPixels(e,n,o,s);return(h==null?void 0:h.pixelBlock)==null?{data:new Float32Array(n*o*2),mask:new Uint8Array(n*o),width:n,height:o}:bt(t.serviceRasterInfo.dataType,h.pixelBlock)}export{Ae as A,Me as B,Fe as D,Be as E,Bt as I,Ue as M,Se as N,Re as S,Xt as T,Pe as U,Ie as W,le as _,_e as a,ot as b,F as c,dt as d,Pt as e,At as f,Ne as g,we as h,ke as i,$e as j,ye as k,Vt as l,De as m,xe as n,ge as o,Ce as p,xt as q,R as r,Le as s,gt as t,Ve as u,Te as v,wt as w,be as x,ve as y,Tt as z};
