const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/intersectionOperator-DbH-6Wgo.js","assets/index-Btyj_e22.js","assets/index-1Ols0T8J.css","assets/Point2D-D2kgyQ2l.js","assets/ProjectionTransformation-CkhaapGK.js","assets/Envelope2D-DpFkwyFI.js","assets/Transformation2D-DUMRLKSD.js","assets/OperatorDefinitions-DP7_WWTp.js","assets/jsonConverter-5OTbKOt2.js","assets/operatorIntersection-DUL8khQs.js","assets/apiConverter-BYW5cCQU.js"])))=>i.map(i=>d[i]);
import{s as p,c2 as ot,aL as qe,a4 as lt,aq as Ge,aM as ut,a6 as mt,bL as J,dI as ct,aO as Je,ar as F,as as v,at as M,bJ as dt,qL as je,qM as D,a1 as pt,fv as yt,db as ft,L as ht,cf as N,cg as C,qN as gt,qO as wt,qP as Ft,aw as V,fw as St,mQ as vt,qQ as xt,mP as qt,cN as Se,qR as Ue,am as Vt,qS as B,fj as Ve,_ as Lt,ch as zt,qT as R,bF as _t,qU as Tt,mR as bt,qV as j,af as Et,fq as Ze,aF as Le,qW as $t}from"./index-Btyj_e22.js";import{F as pe,U as L,N as le,b as Oe,T as Ct,M as Nt}from"./utils-isg7vTDt.js";import{d as Mt,c as It,j as ze,m as ge,q as We,C as ue,$ as me,P as He,a as Ot,n as At}from"./utils-BtJq9HTN.js";import{a as kt}from"./executeQueryJSON-C-VivJzQ.js";import"./pbf-nIFiWyE0.js";import{summaryStatistics as U,uniqueValues as _e,histogram as ce,classBreaks as Te,heatmapStatistics as Pt}from"./statsWorker-B6gj0rr-.js";import Qt from"./AttributeBinsQuery-BNJ1eaiH.js";import{a as Bt,m as Rt,n as Dt,b as Gt}from"./FixedIntervalBinParameters-CBsXBMic.js";import"./ClassBreaksDefinition-BOTSUbEt.js";import"./query-DU102Gub.js";import"./pbfQueryUtils-rtYdziuZ.js";import"./OptimizedFeature-Bd9Ncgqr.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./queryUtils-CrxIK-y_.js";import"./json-Wa8cmqdu.js";function Jt(e,t){if(!e.view)throw new p(`${t}:missing-parameters`,"'view' parameter is required for binning");if(e.sqlExpression)throw new p(`${t}:invalid-parameters`,"'sqlExpression' parameter is not supported for binning");if(e.view.type==="3d")throw new p(`${t}:invalid-parameters`,"3d view is not supported for binning")}let te=class K{constructor(){this.connection=null}async open(t){this.connection=await ot("statsWorker",{strategy:"distributed",signal:t})}destroy(){var t;(t=this.connection)==null||t.close()}static getInstance(){return K.instance||(K.instance=new K),K.instance}async summaryStatistics(t,a){if(!this.connection)throw new p("worker-client:summary-statistics","connection is required");return this.connection.invoke("summaryStatistics",{attribute:t,features:a})}async uniqueValues(t,a){if(!this.connection)throw new p("worker-client:unique-values","connection is required");return this.connection.invoke("uniqueValues",{attribute:t,features:a})}async classBreaks(t,a){if(!this.connection)throw new p("worker-client:class-breaks","connection is required");return this.connection.invoke("classBreaks",{attribute:t,features:a})}async histogram(t,a){if(!this.connection)throw new p("worker-client:histogram","connection is required");return this.connection.invoke("histogram",{attribute:t,features:a})}async heatmapStatistics(t,a){if(!this.connection)throw new p("worker-client:heatmap-statistics","connection is required");return this.connection.invoke("heatmapStatistics",{attribute:t,features:a})}};async function jt(e,t,a,r,i){return Zt(t,await Ut(e,t,a,r,i))}async function Ut(e,t,a,r,i){var c;const s={...r},l=Wt(t,a),o=((c=t.outStatistics)==null?void 0:c[0])!=null,n=lt("featurelayer-pbf-statistics"),u=!o||n;let m;return u||(m=await kt(e,l,s,i)),a==null||a.fieldsIndex,m.fields,m}async function Zt(e,t,a,r){return qe.fromJSON(t)}function Wt(e,t){let a=Ge.from(e);return a.sourceSpatialReference=a.sourceSpatialReference??(t==null?void 0:t.sourceSpatialReference)??null,a}async function Ht(e,t,a,r){const i=ut(e),{source:s,checkValueRange:l}=t,{classificationDefinition:o}=a,n={...a.toJSON(),f:"json"};let u=null;if(u=(o==null?void 0:o.type)==="class-breaks-definition"?o.classificationField:o==null?void 0:o.attributeField,s){const y={source:s==null?void 0:s.toJSON()};n.layer=JSON.stringify(y)}n.classificationDef&&(n.classificationDef=JSON.stringify(n.classificationDef));let m={query:n};r&&(m={...r,...m});const c={url:i.path,field:u,checkValueRange:l},d=i.path+"/generateRenderer";return mt(d,m).then(y=>Kt(c,y))}function Kt(e,t){const{field:a,checkValueRange:r,url:i}=e,s=t==null?void 0:t.data;if(!s)return;if(!r){const u=Ae(s);return Promise.resolve(u)}const l=new J({statisticType:"min",onStatisticField:a}),o=new J({statisticType:"max",onStatisticField:a}),n=new Ge({outStatistics:[l,o]});return jt(i,n).then(u=>{const m=u.features[0].attributes;let c=null,d=null;for(const y in m)y.toLowerCase().indexOf("min")===0?c=m[y]:d=m[y];return Ae(s,c,d)})}function Ae(e,t,a){if(e.type==="classBreaks"){const i=ct(e);return{classBreaks:i.classBreakInfos.map((s,l)=>(l===0&&t!=null&&(s.minValue=t),l===i.classBreakInfos.length-1&&a!=null&&(s.maxValue=a),{minValue:s.minValue,maxValue:s.maxValue,label:s.label})),normalizationTotal:i.normalizationTotal}}const{uniqueValueInfos:r}=e;return{uniqueValues:(r==null?void 0:r.map((i,s)=>(s===0&&t!=null&&(i.value=t),s===r.length-1&&a!=null&&(i.value=a),{count:i.count,value:i.value,label:i.label})))??[]}}let P=class extends Je{constructor(e){super(e),this.classificationDefinition=null,this.where=null}};F([v({json:{name:"classificationDef",write:!0}})],P.prototype,"classificationDefinition",void 0),F([v({type:String,json:{write:!0}})],P.prototype,"where",void 0),P=F([M("esri.rest.support.GenerateRendererParameters")],P);let O=class extends Je{constructor(t){super(t),this.type="unique-value-definition",this.attributeField=null,this.attributeField2=null,this.attributeField3=null,this.fieldDelimiter=null}get uniqueValueFields(){const t=[];return this.attributeField&&t.push(this.attributeField),this.attributeField2&&t.push(this.attributeField2),this.attributeField3&&t.push(this.attributeField3),t}};F([dt({uniqueValueDef:"unique-value-definition"})],O.prototype,"type",void 0),F([v()],O.prototype,"attributeField",void 0),F([v()],O.prototype,"attributeField2",void 0),F([v()],O.prototype,"attributeField3",void 0),F([v({json:{write:!0}})],O.prototype,"fieldDelimiter",void 0),F([v({json:{write:!0}})],O.prototype,"uniqueValueFields",null),O=F([M("esri.rest.support.UniqueValueDefinition")],O);const Ke="no_dominant_category";function Xt(e){return{expression:Yt(e,{defaultValue:`'${Ke}'`})}}function Yt(e,t){const{defaultValue:a,layer:r}=t,i=[];if(a){const s=e.map(l=>`${l} <= 0`).join(" AND ");i.push(`WHEN ${s} THEN ${a}`)}for(const s of e){const l=e.reduce((u,m)=>(s!==m&&u.push(`${s} > ${m}`),u),[]).join(" AND "),o=r&&je(r,s),n=`'${s}'`?`'${s}'`:o?D(s):s;i.push(`WHEN ${l} THEN ${n}`)}return`CASE ${i.join(" ")} ELSE ${a||"0"} END`}function ea(e){return e&&e.map(t=>`$feature["${t}"];`).join(`
`)+`
`||""}function ta(e,t=!1){const a=e.map(i=>`"${i}"`);return`
  var fieldNames = [ ${a.join(", ")} ];
  var numFields = ${a.length};
  var maxValueField = null;
  var maxValue = -Infinity;
  var value, i, totalValue = null;

  for(i = 0; i < numFields; i++) {
    value = $feature[fieldNames[i]];

    if(value > 0) {
      if(value > maxValue) {
        maxValue = value;
        maxValueField = fieldNames[i];
      }
      else if (value == maxValue) {
        maxValueField = null;
      }
    }
    ${t?`
  if(value != null && value >= 0) {
    if (totalValue == null) { totalValue = 0; }
    totalValue = totalValue + value;
  }
  `:""}
  }
  `}function be(e){const t=ta(e);return`
  ${ea(e)}
  ${t}
  return maxValueField;
  `}let _=class extends pt{constructor(t){super(t),this.adapterName="layer-adapter"}};F([v({readOnly:!0})],_.prototype,"adapterName",void 0),F([v({constructOnly:!0})],_.prototype,"layer",void 0),F([v()],_.prototype,"geometryType",void 0),F([v()],_.prototype,"objectIdField",void 0),F([v()],_.prototype,"supportsSQLExpression",void 0),F([v()],_.prototype,"hasQueryEngine",void 0),F([v()],_.prototype,"minScale",void 0),F([v()],_.prototype,"maxScale",void 0),F([v()],_.prototype,"fullExtent",void 0),_=F([M("esri.smartMapping.support.adapters.LayerAdapter")],_);const aa=/_value$/i,ra=Math.LOG10E,ia={SECOND:1e3,MINUTE:6e4,HOUR:36e5},Y=10;function ee(e){return e.map(t=>t.toJSON())}function ke(e,t){var o;const a=[],r=e.layer,i="featureReduction"in r?r.featureReduction:null,s=(i==null?void 0:i.type)==="binning",l=i!=null&&"fields"in i?(o=i.fields)==null?void 0:o.map(n=>{var u;return(u=n.name)==null?void 0:u.toLowerCase()}).filter(Boolean):[];if(!s||!t)return a;for(const n of t)l.includes(n.toLowerCase())||a.push(n);return a}function de(e,t,a){var i;const r=[];if(t)for(const s of t){const l=e.getField(s);l&&a&&"availableFields"in a&&!((i=a.availableFields)!=null&&i.includes(l.name))&&r.push(l.name)}return r}function Ee(e,t){var s;const a=e&&e.features;if((a==null?void 0:a.length)===0)return{avg:null,count:0,max:null,median:null,min:null,nullcount:0,stddev:null,sum:null,variance:null};const r=(s=a==null?void 0:a[0])==null?void 0:s.attributes,i={};for(const l in r)i[l.replace(aa,"").toLowerCase()]=r[l];return i.totalcount!=null&&i.totalcount>=i.count&&(i.nullcount=i.totalcount-i.count),delete i.totalcount,i.min===i.max&&i.min!=null&&i.stddev==null&&(i.stddev=i.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach(l=>{i[l]!=null&&(i[l]=Math.ceil(i[l]))}),i.min===i.max&&i.min!=null&&(i.avg=i.min,i.stddev=i.variance=0)),i}function sa(e){const t=[],a=e.classBreaks,r=a[0].minValue,i=a[a.length-1].maxValue;a.forEach(l=>{t.push([l.minValue,l.maxValue])});const s={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:r,max:i,intervals:t,sqlExpr:Z(s),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}function Z(e){const{field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,layer:s}=e,l=je(s,t);let o=t;return a==="percent-of-total"?o=`((${l?D(t):t} / ${i}) * 100)`:a==="log"?o=`(log(${t}) * ${ra})`:a==="field"?o=`(${l?D(t):t} / ${r})`:a==="natural-log"?o=`(log(${l?D(t):t}))`:a==="square-root"&&(o=`(power(${l?D(t):t}, 0.5))`),o}function Xe(e,t){let a;if(t=t.toLowerCase(),e){for(const r in e)if(r.toLowerCase()!==t){a=e[r];break}}return a}function X(e,t){let a;if(t=t.toLowerCase(),e){for(const r in e)if(r.toLowerCase()===t){a=e[r];break}}return a}function Ye(e,t,a,r,i){const s={},l="countOFExpr";e&&e.features&&e.features.forEach(n=>{const u=n.attributes,m=Xe(u,l),c=X(u,l);m!=null&&c!=null&&m!==0&&(s[m]=c)});const o=[];return ze(t,a,r).forEach((n,u)=>{const m=(u+1).toString();o.push({minValue:n[0],maxValue:n[1],count:s.hasOwnProperty(m)?s[m]:0})}),{bins:o,minValue:t,maxValue:a,normalizationTotal:i}}async function $e(e,t){const a=e&&e.features,{field:r,field2:i,field3:s,fieldDelimiter:l,layer:o,view:n,signal:u,labels:m}=t,c=`countOF${(!r||!i)&&r||"Expr"}`,d={};let y=!1;for(const g of a){const h=g.attributes,S=X(h,c);let w=r?X(h,r):Xe(h,c),x=i?X(h,i):null,b=s?X(h,s):null;w===null&&S===0&&(y=!0),(w==null||typeof w=="string"&&w.trim()==="")&&(w=null),i&&(x==null||typeof x=="string"&&x.trim()==="")&&(x=null),s&&(b==null||typeof b=="string"&&b.trim()==="")&&(b=null);let z=w;i&&(z=`${ge(z)}${l}${ge(x)}`,s&&(z=`${z}${l}${ge(b)}`)),d[z]==null?d[z]={count:S,data:z}:d[z].count=d[z].count+S}if(r&&y){const g=r+" is NULL";try{const h=await o.queryFeatureCount({whereClause:g,view:n,signal:u});return d.null.count=d.null.count+h,we(d,m)}catch{return V(u),we(d,m)}}return we(d,m)}function we(e,t){if(t)for(const a in e)e[a].label=t[a];return{count:e}}async function Fe(e,t,a){const r=e?a.getField(e):null,i=r?a.getFieldDomain(r.name):null;if(i)return i;const{uniqueValueInfos:s}=await a.uniqueValues({field:e,sqlWhere:t.sqlWhere,features:t.features,useFeaturesInView:t.useFeaturesInView,view:t.view,signal:t.signal}),l=s.map(o=>new gt({code:o.value}));return new wt({codedValues:l})}async function ye(e,t){if(!e.returnAllCodedValues)return[];const{field:a,field2:r,field3:i}=e;if(a&&!r){const l=a?t.getField(a):null,o=l?t.getFieldDomain(l.name):null;return o?[o]:[]}const s=[];return a&&(s.push(Fe(a,e,t)),r&&(s.push(Fe(r,e,t)),i&&s.push(Fe(i,e,t)))),Promise.all(s)}function na(e,t){return Ft(e,new Date(0),t,"milliseconds").sqlExpression}function oa(e,t){return`EXTRACT(${t} FROM ${e}) * ${ia[t]}`}function la(e){return e?D(["HOUR","MINUTE","SECOND"].map(t=>`(${oa(e,t)})`).join(" + ")):null}function E(e){var t;return{viewingMode:e.type==="2d"?"map":e.viewingMode,scale:e.scale,spatialReference:(t=e.spatialReference)==null?void 0:t.toJSON()}}function Ce(e,t){const a=new Set(e.map(i=>i.value)),r=t.filter(i=>!a.has(i));for(const i of r)e.push({value:i,count:0});e.sort((i,s)=>t.indexOf(i.value)-t.indexOf(s.value));for(const i of e)i.value===Ke&&(i.value=null);return{predominantCategoryInfos:e}}function Pe(e){const t="featureReduction"in e?e.featureReduction:null;return((t!=null&&"fields"in t?t.fields:null)??[]).map(a=>{const r=ua(a,e.fieldsIndex);return r?new ft({type:r,name:a.name,alias:a.alias}):null}).filter(ht)}function ua(e,t){var a,r;switch(e.statisticType){case"avg":case"avg_angle":return"double";case"count":return"integer";case"min":case"max":case"sum":return e.onStatisticField?((a=t.get(e.onStatisticField))==null?void 0:a.type)??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?null:"double":null;case"mode":return e.onStatisticField?((r=t.get(e.onStatisticField))==null?void 0:r.type)??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?"string":"double":null;default:return null}}function et(e,t){return N(t)?na(e,t==null?void 0:t.name):C(t)?la(t==null?void 0:t.name):null}function Ne(e,t,a,r=!0){const{field:i,normalizationType:s,normalizationField:l,normalizationTotal:o,minValue:n,maxValue:u,filter:m}=t,c=e.supportsSQLExpression?et(e,a)||t.sqlExpression:null,d=Z({field:i,normalizationType:s,normalizationField:l,normalizationTotal:o,layer:e}),y=c||d,g=y?le(y,n,u):null,h=pe({field:i,normalizationField:l,normalizationType:s}),S=L(t.sqlWhere,h),w=L(S,g),x=Mt({normalizationField:l,normalizationType:s,sqlExpression:c,supportsSQLExpression:e.supportsSQLExpression,minValue:n,maxValue:u}),b=yt(e.getField(i??void 0)),{include:z,exclude:I}=t.outStatisticTypes||{},fe=It.filter(T=>(!z||z.includes(T))&&(!I||!I.includes(T))&&(T==="nullcount"?x:!b||T==="count")&&(T!=="median"||r)),A=e.createQuery();return A.where=L(A.where,w),A.sqlFormat=c?"standard":null,A.outStatistics=fe.map(T=>{const k=new J;let W=null,H=null,Ie=`${T}_value`;if(T==="variance")W="var",H=y;else if(T==="nullcount"){const he=e.objectIdField;W="count",H=he&&e.getField(he)?he:"1",Ie="totalcount_value"}else T==="median"?(W="percentile-continuous",H=y,k.statisticParameters={value:.5}):(W=T,H=y);return k.statisticType=W,k.onStatisticField=H,k.outStatisticFieldName=Ie,k}),$(A,m),A}function $(e,t){t&&(e.geometry=t.geometry,e.spatialRelationship=t.spatialRelationship)}function tt(e,t){const{field:a,field2:r,field3:i,sqlExpression:s}=t,l=!(!a||!r),o=e.createQuery();return o.where=L(o.where,t.sqlWhere),o.sqlFormat=s?"standard":null,o.outStatistics=[ma(l?null:a,l?"1":s)].filter(Boolean),o.groupByFieldsForStatistics=[a||s,r,i].filter(Boolean),$(o,t.filter),o}function ma(e,t){const a="countOF"+(e||"Expr"),r=new J;return r.statisticType="count",r.onStatisticField=t?"1":e,r.outStatisticFieldName=a,r}function re(e,t,a,r=Y,i,s,l){const{min:o,max:n,normTotal:u,excludeZerosExpr:m}=t,c=t.intervals||ze(o,n,r),d=t.sqlExpr||a;return ca(e,c,d,m,i,s,l).then(y=>({bins:y.map((g,h)=>({minValue:c[h][0],maxValue:c[h][1],count:g.status==="fulfilled"?g.value:0})),minValue:o,maxValue:n,normalizationTotal:u}))}function ca(e,t,a,r,i,s,l){const o=[],n=t.length;for(let u=0;u<n;u++){const m=L(r,L(a+" >= "+t[u][0],t[u][1]!==null?a+(u===n-1?" <= ":" < ")+t[u][1]:""));o.push(m)}return Promise.allSettled(o.map(u=>e.queryFeatureCount({whereClause:u,view:i,filter:s,signal:l})))}const at="countOFExpr",da="lowerBoundary",pa="upperBoundary";function rt(e,t,a){const r=e.valueExpression||e.sqlExpression,i=e.signal;if(!r){const{field:s,normalizationType:l,normalizationField:o}=e,n=s?t.getField(s):null,u=N(n)||C(n);return{sqlExpression:u?et(t,n):Z({field:s,normalizationType:l,normalizationField:o,normalizationTotal:a,layer:t}),sqlWhere:u?null:e.sqlWhere||pe({field:s,normalizationType:l,normalizationField:o}),filter:e.filter,signal:i}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,filter:e.filter,signal:i}}async function ve(e,t,a){const{field:r,normalizationType:i,normalizationField:s,signal:l}=e,o=pe({field:r,normalizationType:i,normalizationField:s}),n=new P({classificationDefinition:We({field:r,normalizationType:i,normalizationField:s,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,definedInterval:e.definedInterval,breakCount:e.numBins||Y}),where:L(o,a)});return t.generateRenderer(n,l).then(u=>{const{normalizationTotal:m,classBreaks:c}=u;return sa({field:r,normalizationType:i,normalizationField:s,normalizationTotal:m,classBreaks:c,where:o,layer:t})})}async function ya(e,t,a,r,i){const{field:s,sqlExpression:l,normalizationField:o,classificationMethod:n,normalizationType:u}=e,m=s?t.getField(s):null,c=C(m),d=qt(m)||c,y=e.numBins||Y;if(d){if(u||n)throw new p(`${t.adapterName}:not-supported`,"NormalizationType and classificationMethod are not supported for date-only and time-only fields");const g=(r-a)/y/1e3,h=g/86400;return new Bt({field:s,expression:l,interval:{unit:c?"seconds":"days",value:Math.ceil(c?g:h)},start:a,end:r})}if(n==="defined-interval")return new Rt({field:s,expression:l,normalizationField:o,normalizationTotal:i,normalizationType:u,interval:e.definedInterval??Math.ceil((r-a)/y),start:u?null:a,end:u?null:r,normalizationMinValue:u?a:null,normalizationMaxValue:u?r:null});if(n==="manual")throw new p(`${t.adapterName}:not-supported`,"Layer does not support manual classificationMethod");if(n==="natural-breaks"||n==="quantile"||n==="standard-deviation"){const g=Z({field:s,normalizationField:o,normalizationTotal:i,normalizationType:u,layer:t}),h=e.minValue!==null&&e.maxValue!==null?le(g,e.minValue,e.maxValue):void 0,S=await ve(e,t,h);if(!S.intervals)throw new p(`${t.adapterName}:invalid`,"Invalid intervals returned from generate renderer");const w=[a,...S.intervals.map(x=>x[1])];return new Dt({field:u?null:s,expression:u?g:l,boundaries:w})}return new Gt({field:s,normalizationField:o,normalizationTotal:i,normalizationType:u,expression:l,numBins:y,start:u?null:a,end:u?null:r,normalizationMinValue:u?a:null,normalizationMaxValue:u?r:null})}function it(e,t,a,r){return a!=null&&r!=null?Promise.resolve({min:a,max:r}):t.summaryStatistics({...e,outStatisticTypes:{include:["min","max"]}}).then(i=>({min:i.min,max:i.max}))}async function st(e,t,a,r){const{field:i,minValue:s,maxValue:l,filter:o,view:n}=e,u=i?t.getField(i):null,m=St(u)||vt(u),c=rt(e,t,a),{min:d,max:y}=await it(c,t,s,l);if(d==null||y==null)return{query:null,min:d,max:y};const g=new J({statisticType:"count",outStatisticFieldName:at,onStatisticField:"1"}),h=L(r,c.sqlWhere),S="lowerBoundary",w="upperBoundary",x=new Qt({binParameters:await ya(e,t,d,y,a),outStatistics:[g],binOrder:e.sortOrder,where:h,lowerBoundaryAlias:S,upperBoundaryAlias:w,outTimeZone:n!=null&&n.timeZone&&m?xt(n.timeZone):null});return $(x,o),{query:x,min:d,max:y}}function Qe(e,t=!1){return typeof e!="string"?e:(t?new Date(`1970-01-01T${e}Z`):new Date(e)).getTime()}function nt(e,t,a){const r=C(t);return{...a,bins:e.features.map(i=>({minValue:Qe(i.attributes[da],r),maxValue:Qe(i.attributes[pa],r),count:i.attributes[at]}))}}function Be(e,t,a){const{valueExpression:r,view:i}=e,{featuresJSON:s,graphics:l,fieldInfos:o}=t,n={field:e.field,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:a,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return r&&i&&(s||l)&&(n.viewInfoParams=E(i),n.timeZone=i.timeZone,n.fieldInfos=o),n}const fa=5;let ae=null,Q=class extends _{constructor(){super(...arguments),this._hasLocalSource=!1,this.adapterName="in-memory-layer-adapter"}destroy(){var e;(e=this.workerClient)==null||e.destroy()}async _waitForLayerViewUpdate(e){if(!e)throw new p(`${this.adapterName}:insufficient-data`,"layerView is required to fetch the features");const t=new AbortController,a=Se(()=>!e.updating,t.signal);await Ue(a,5e3,t).catch(r=>{throw Vt.getLogger(this).warn("LayerView is taking too long to update. Aborting fetch from layerView."),r})}async _fetchFeatureSetFromMemory(e,t,a){const r=this.layer;if(this._hasLocalSource&&"queryFeatures"in r)return r.queryFeatures(e);if(!t)throw new p(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const i=await t.whenLayerView(this.layer);return await this._waitForLayerViewUpdate(i),i.queryFeatures(e,{signal:a})}async _fetchFeaturesFromMemory(e,t,a,r){const i=this.layer,s=r==="json";if(this._hasLocalSource&&"queryFeatures"in i){const o=await i.queryFeatures(t);return s?ee(o.features):o.features}if(await this._waitForLayerViewUpdate(e),s&&"queryFeaturesJSON"in e&&e.queryFeaturesJSON){const{features:o}=await e.queryFeaturesJSON(t,{signal:a});return o}if(!("queryFeatures"in e))throw new p(`${this.adapterName}:not-supported`,"'queryFeatures' is not supported on the layerView");const l=await e.queryFeatures(t,{signal:a});return s?ee(l.features):l.features}_fetchFeaturesForStats(e,t){return B({field:e.field,field2:e.field2,field3:e.field3,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,filter:e.filter,requiredFields:a,signal:e.signal},t))}async _summaryStatsFromClientQuery(e,t){const{view:a,signal:r}=e,i=Ne(this,e,t),s=await this._fetchFeatureSetFromMemory(i,a,r),l=Ee(s,N(t)||C(t));return ue(l,e.outStatisticTypes)}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:r,graphics:i,layerView:s,query:l}=t,o={include:["sum"]},n=(!r&&!i&&s&&"querySummaryStatistics"in s?await s.querySummaryStatistics(l,{field:e},{signal:a}):r?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:o},r):await U({attribute:{field:e,outStatisticTypes:o},features:i??[]})).sum;if(n==null)throw new p(`${this.adapterName}:invalid`,"invalid normalizationTotal");return n}async _summaryStatsFromMemory(e,t){const{view:a,field:r,valueExpression:i,normalizationType:s,signal:l}=e,o={field:r,valueExpression:i,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:n,graphics:u,layerView:m,query:c,fieldInfos:d}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"querySummaryStatistics"});return i&&a&&(n||u)&&(o.fieldType=t!=null&&t.type?Ve.toJSON(t.type):null,o.viewInfoParams=E(a),o.timeZone=a.timeZone,o.fieldInfos=d),s==="percent-of-total"&&e.normalizationTotal==null&&(o.normalizationTotal=await this._getNormalizationTotalFromMemory(r,{featuresJSON:n,graphics:u,layerView:m,query:c},l)),!n&&!u&&m&&"querySummaryStatistics"in m?m.querySummaryStatistics(c,o,{signal:l}):n?this.workerClient.summaryStatistics(o,n):U({attribute:o,features:u})}async _getFilteredFeatures(e,t){let a=e;const r=t==null?void 0:t.geometry;if((t==null?void 0:t.spatialRelationship)==="intersects"&&r){const i=await Lt(()=>import("./intersectionOperator-DbH-6Wgo.js").then(s=>s.i),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10]));a=e.filter(({geometry:s})=>!(!s||!i.execute(s,r)))}return e.length&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic"?{graphics:a}:{featuresJSON:a}}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t!=null&&t.length)return this._getFilteredFeatures(t,a);const{view:r,field:i,field2:s,field3:l,normalizationField:o,valueExpression:n,layerViewFunc:u,signal:m}=e;let c=e.returnGeometry;if(c==null&&n){if(!ae){const{arcadeUtils:x}=await zt();ae=x}const w=ae.hasGeometryOperations(n);w&&await ae.enableGeometryOperations(),c=w}let d=null,y=null,g=null,h=null,S=null;if(r)try{const w=this.layer.type==="subtype-sublayer"?this.layer.parent:this.layer;d=await r.whenLayerView(w),y=u!=null&&u in d&&typeof d[u]=="function"}catch{y=!1}if(y)try{await this._waitForLayerViewUpdate(d);const w=await B({field:i,field2:s,field3:l,normalizationField:o,valueExpression:n});de(this,w,d).length?y=!1:(g=this.layer.createQuery(),g.outFields=w,g.returnGeometry=!1,$(g,a)),d.suspended&&(y=!1)}catch{y=!1}return y||(h=await this._fetchFeaturesForStats({field:i,field2:s,field3:l,valueExpression:n,normalizationField:o,returnGeometry:c,filter:a,view:r,signal:m},"json"),S=(await B({valueExpression:n})).map(w=>{var x;return(x=this.getField(w))==null?void 0:x.toJSON()}).filter(Boolean)),{layerView:d,query:g,featuresJSON:h,fieldInfos:S}}async _uvFromClientQuery(e,t){const{view:a,signal:r}=e,i=tt(this,e),s=await this._fetchFeatureSetFromMemory(i,a,r),l=await $e(s,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:R,view:e.view,signal:e.signal});return me(l,t,e.returnAllCodedValues,R)}async _uvFromMemory(e,t){const{view:a,field:r,valueExpression:i,returnAllCodedValues:s,signal:l}=e,{featuresJSON:o,graphics:n,layerView:u,query:m,fieldInfos:c}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryUniqueValues"}),d={field:r,field2:e.field2,field3:e.field3,fieldDelimiter:R,valueExpression:i,domains:t,returnAllCodedValues:s};return i&&a&&(o||n)&&(d.viewInfoParams=E(a),d.timeZone=a.timeZone,d.fieldInfos=c),!o&&!n&&u&&"queryUniqueValues"in u?u.queryUniqueValues(m,d,{signal:l}):o?this.workerClient.uniqueValues(d,o):_e({attribute:d,features:n})}_histogramForField(e){let t=null;return t=e.minValue!=null&&e.maxValue!=null?Promise.resolve({min:e.minValue,max:e.maxValue}):this.summaryStatistics({...e,outStatisticTypes:{include:["min","max","count"]}}).then(a=>{if(!a.count)throw new p(`${this.adapterName}:insufficient-data`,"Either the layer has no features or none of the features have data for the field");return{min:a.min,max:a.max}}),t.then(a=>re(this,{min:a.min,max:a.max},e.field,e.numBins??void 0,e.view,e.filter,e.signal))}async _histogramFromQueryAttributeBinsFromMemory(e){const{field:t,normalizationType:a,signal:r}=e,i=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAttributeBins"}),{featuresJSON:s,graphics:l,layerView:o,query:n}=i,u=a==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,i,r):void 0;if(!o||!("queryAttributeBins"in o)||s||l){const g=Be(e,i,u);return s?this.workerClient.histogram(g,s):ce({attribute:g,features:l})}const{query:m,min:c,max:d}=await st(e,this,u,n==null?void 0:n.where);if(!m)return{bins:[],minValue:c,maxValue:d,normalizationTotal:u};const y=await o.queryAttributeBins(m,{signal:r});return nt(y,t?this.getField(t):null,{minValue:c,maxValue:d,normalizationTotal:u})}async _histogramFromMemory(e){const{field:t,signal:a}=e,r=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryHistogram"}),{featuresJSON:i,graphics:s,layerView:l,query:o}=r,n=e.normalizationType==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,r,a):void 0,u=Be(e,r,n);return!i&&!s&&l&&"queryHistogram"in l?l.queryHistogram(o,u,{signal:a}):i?this.workerClient.histogram(u,i):ce({attribute:u,features:s})}_classBreaksFromInterpolation(e){const{minValue:t,maxValue:a}=e,r=e.numClasses||fa,i=[],s=(a-t)/r;for(let n=0;n<r;n++){const u=t+n*s;i.push({minValue:u,maxValue:u+s})}i[r-1].maxValue=a;const l={classBreaks:i,normalizationTotal:e.normalizationTotal},o=He(l,e.classificationMethod);return Promise.resolve(o)}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:r,signal:i}=e,{featuresJSON:s,graphics:l,layerView:o,query:n,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryClassBreaks"}),m={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return r&&t&&(s||l)&&(m.viewInfoParams=E(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:l,layerView:o,query:n},i)),!s&&!l&&o&&"queryClassBreaks"in o?o.queryClassBreaks(n,m,{signal:i}):s?this.workerClient.classBreaks(m,s):Te({attribute:m,features:l})}async _heatmapStatsFromMemory(e){var u,m;const{view:t,field:a,radius:r,signal:i}=e;_t(t,"InMemoryLayerAdapter: must have a view");try{const c=await t.whenLayerView(this.layer);if("queryHeatmapStatistics"in c&&!c.updating&&!e.filter)return await c.queryHeatmapStatistics({field:e.field,radius:e.radius})}catch{V(i)}const{featuresJSON:s,graphics:l}=await this._processStatsFromMemoryParams({...e,returnGeometry:!0}),o=new Tt({extent:t.extent,tolerance:t.type==="2d"?t.state.resolution:(u=t.pixelSizeAt)==null?void 0:u.call(t,t.center)}),n={field:a,radius:r,transform:bt(o),spatialReference:(m=t.spatialReference)==null?void 0:m.toJSON(),size:t.size};return s!=null&&s.length||l!=null&&l.length?s?this.workerClient.heatmapStatistics(n,s):Pt({attribute:n,features:l}):{min:null,max:null}}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null}getFieldDomain(e,t){return this.layer.getFieldDomain(e,t)}createQuery(){return this.layer.createQuery()}async summaryStatistics(e){const{field:t,valueExpression:a,sqlExpression:r,features:i,view:s}=e,l=t?this.getField(t):null,o=!!a,n=(s==null?void 0:s.type)==="3d";if(!a&&r&&!this.supportsSQLExpression)throw new p(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return o||i||n?this._summaryStatsFromMemory(e,l):this._summaryStatsFromClientQuery(e,l)}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:r,view:i}=e,s=await ye(e,this),l=!!t,o=(i==null?void 0:i.type)==="3d";if(!t&&a&&!this.supportsSQLExpression)throw new p(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return l||r||o?this._uvFromMemory(e,s):this._uvFromClientQuery(e,s)}async histogram(e){const{features:t,valueExpression:a,normalizationType:r,sqlExpression:i}=e,s=t||!!a;if(!a&&i&&!this.supportsSQLExpression)throw new p(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return s||r?this._histogramFromMemory(e):this._histogramForField(e)}async classBreaks(e){return e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)}async queryFeatureCount(e){const{whereClause:t,view:a,signal:r}=e;if(!a)throw new p(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const i=this.layer.createQuery();i.where=L(i.where,t);const s=await a.whenLayerView(this.layer);return await Se(()=>!s.updating,r),s.queryFeatureCount(i,{signal:r})}async generateRenderer(e,t){throw new p(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation")}async predominantCategories(e){const{fields:t,view:a,signal:r,filter:i}=e,s=be(t),l=await this._uvFromMemory({valueExpression:s,view:a,signal:r,filter:i});return Ce(l.uniqueValueInfos,t)}async heatmapStatistics(e){return this._heatmapStatsFromMemory(e)}async getSampleFeatures(e,t){const{view:a,sampleSize:r,requiredFields:i,returnGeometry:s,filter:l,signal:o}=e,n=this.layer.createQuery(),u=1;if(n.outSpatialReference=a==null?void 0:a.spatialReference,n.returnGeometry=!!s,n.outFields=i,$(n,l),!a)throw new p(`${this.adapterName}:not-supported`,"view is required to get sample features for Layer");const m=await a.whenLayerView(this.layer);if(de(this,i,m).length)throw new p(`${this.adapterName}:not-supported`,"Required fields need to be passed in the outFields for Layer");const c=await this._fetchFeaturesFromMemory(m,n,o,t),d=r!=null&&r>0&&r<=c.length?r:c.length;return j(c,d,u)}load(e){const t=this.layer.load(e).then(async a=>{var r,i,s;this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.type==="stream"||!!((i=(r=a.capabilities)==null?void 0:r.query)!=null&&i.supportsSqlExpression),this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent="fullExtent"in a?a.fullExtent:(s=a.parent)==null?void 0:s.fullExtent,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=te.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};F([v({readOnly:!0})],Q.prototype,"adapterName",void 0),F([v({constructOnly:!0})],Q.prototype,"layer",void 0),Q=F([M("esri.smartMapping.support.adapters.InMemoryLayerAdapter")],Q);const Re=5,De=2e4,ha=4e5;let q=class extends Q{constructor(){super(...arguments),this.adapterName="feature-layer-adapter"}_isStatsSupportedOnService(){var t,a;const e=this.layer;if(!((a=(t=e.capabilities)==null?void 0:t.query)!=null&&a.supportsStatistics)||this.geometryType==="multipatch"&&!Et(e.url)&&e.version<10.5)throw new p(`${this.adapterName}:not-supported`,"Layer does not support statistics query");return Promise.resolve()}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then(a=>a.features)}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(ee)}_summaryStatsFromGenRend(e){const t=e.normalizationType,a=e.normalizationField;return this.classBreaks({field:e.field,numClasses:Re,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:t==="field"?a:void 0,minValue:e.minValue,maxValue:e.maxValue,filter:e.filter,signal:e.signal}).then(r=>{var n;let i,s,l;if((n=r.classBreakInfos)==null||n.some(u=>(u.hasAvg&&(i=u),!!i)),i){const u=i.maxValue-i.minValue;s=i.minValue+u/2,l=4*u}const o={min:r.minValue,max:r.maxValue,avg:s,stddev:l};return ue(o,e.outStatisticTypes)})}async _summaryStatsFromServiceQuery(e,t){var o;await this._isStatsSupportedOnService(),e.normalizationType==="percent-of-total"&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType,e.filter));const a=N(t)||C(t),r="capabilities"in this.layer?this.layer.capabilities:null,i=Ne(this,e,t,((o=r==null?void 0:r.query)==null?void 0:o.supportsPercentileStatistics)??!1),s=await this.layer.queryFeatures(i,{signal:e.signal}),l=Ee(s,a);return ue(l,e.outStatisticTypes)}_uvFromGenRenderer(e,t){const a=e.field??void 0,r=new O({attributeField:a}),i=new P({classificationDefinition:r});return this.generateRenderer(i,e.signal).then(s=>{const l={},o=this.getField(a);return s.uniqueValues.forEach(n=>{let u=n.value;u!=null&&u!==""&&(typeof u!="string"||u.trim()!==""&&u.toLowerCase()!=="<null>")||(u=null),l[u]==null?l[u]={count:n.count,data:Ze(o)&&u?Number(u):u}:l[u].count=l[u].count+n.count}),{count:l}}).then(s=>me(s,[t],e.returnAllCodedValues))}async _uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(tt(this,e),{signal:e.signal})).then(a=>$e(a,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:R,view:e.view,signal:e.signal})).then(a=>me(a,t,e.returnAllCodedValues,R))}_getNormalizationTotal(e,t,a,r){return e&&t==="percent-of-total"?this.summaryStatistics({field:e,outStatisticTypes:{include:["sum"]},filter:a,signal:r}).then(i=>i.sum):Promise.resolve(null)}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.filter,e.signal).then(t=>{const a=rt(e,this,t);return it(a,this,e.minValue,e.maxValue).then(r=>{const i=r.min,s=r.max;if(i==null||s==null)return{bins:[],minValue:i,maxValue:s,normalizationTotal:t};const l=e.numBins||Y,o=ze(i,s,l),n=ga(a.sqlExpression,o,e.minValue!=null&&e.maxValue!=null),u=new J({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),m=this.layer.createQuery();return m.where=L(m.where,a.sqlWhere),m.sqlFormat="standard",m.outStatistics=[u],m.groupByFieldsForStatistics=[n],m.orderByFields=[n],$(m,e.filter),this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(m,{signal:a.signal})).then(c=>Ye(c,i,s,l,t))})})}async _histogramFromQueryAttributeBins(e){const{field:t,normalizationType:a,filter:r,signal:i}=e,s=await this._getNormalizationTotal(t,a,r,i),l=this.layer.createQuery(),{query:o,min:n,max:u}=await st(e,this,s,l==null?void 0:l.where);if(!o)return{bins:[],minValue:n,maxValue:u,normalizationTotal:s};const m=await this.layer.queryAttributeBins(o,{signal:i});return nt(m,t?this.getField(t):null,{minValue:n,maxValue:u,normalizationTotal:s})}_classBreaksFromGenRend(e){const{field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,signal:s}=e,l=pe({field:t,normalizationType:a,normalizationField:r}),o=Z({field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,layer:this}),n=le(o,e.minValue,e.maxValue),u=We({field:t,normalizationType:a,normalizationField:r,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||Re}),m=new P({classificationDefinition:u});return m.where=L(l,n),this.generateRenderer(m,s).then(c=>He(c,e.classificationMethod))}async summaryStatistics(e){const{field:t,normalizationType:a,valueExpression:r,sqlExpression:i,view:s,features:l,useFeaturesInView:o}=e,n=t?this.getField(t):null,u=N(n)||C(n),m=r&&!(i&&this.supportsSQLExpression),c=this._hasLocalSource||l||o,d=s&&s.type==="3d";if(c||m)return m||l||o||d?this._summaryStatsFromMemory(e,n):this._summaryStatsFromClientQuery(e,n);if(!this.supportsSQLExpression&&(u||i||a==="natural-log"||a==="square-root"))throw new p(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return(a&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,n)).catch(()=>(V(e.signal),this._summaryStatsFromMemory(e,n)))}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:r,useFeaturesInView:i,signal:s}=e,l=t&&!(a&&this.supportsSQLExpression),o=this._hasLocalSource||r||i||l,n=e.view,u=n&&n.type==="3d",m=await ye(e,this);return o?l||r||i||u?this._uvFromMemory(e,m):this._uvFromClientQuery(e,m):this._uvFromServiceQuery(e,m).catch(c=>(V(s),!e.field||e.field2||e.field3||e.filter?c:this._uvFromGenRenderer(e,m[0]))).catch(()=>(V(s),u?this._uvFromMemory(e,m):this._uvFromClientQuery(e,m)))}async histogram(e){var b,z;const{field:t,normalizationType:a,normalizationField:r,classificationMethod:i,view:s,filter:l,signal:o}=e,n=t?this.getField(t):null,u=N(n)||C(n),m=e.valueExpression||e.sqlExpression,c=e.valueExpression&&!(e.sqlExpression&&this.supportsSQLExpression),d=this._hasLocalSource||e.features||e.useFeaturesInView||c,y=this.supportsSQLExpression,g=!i||i==="equal-interval",h=e.minValue,S=e.maxValue,w=h!=null&&S!=null,x=e.numBins||Y;if(d)return this._histogramFromMemory(e);if((z=(b=this.layer.capabilities)==null?void 0:b.operations)!=null&&z.supportsQueryBins&&e.useQueryAttributeBins)try{return await this._histogramFromQueryAttributeBins(e)}catch{return V(o),this._histogramFromQueryAttributeBinsFromMemory(e)}if((m||y)&&g){if(!y&&(m||a==="natural-log"||a==="square-root"))throw new p(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return this._histogramForExpr(e)}if(u&&g)throw new p(`${this.adapterName}:not-supported`,"Normalization and date field are not allowed when layer does not support standardized SQL expression for queries");return a||!g?ve(e,this).then(I=>{if(!w)return re(this,I,t,x,s,l,o);if(h>I.max||S<I.min)throw new p(`${this.adapterName}:insufficient-data`,"Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(g)return re(this,{min:h,max:S,sqlExpr:I.sqlExpr,excludeZerosExpr:I.excludeZerosExpr},t,x,s,l,o);{const fe={field:t,normalizationType:a,normalizationField:r,normalizationTotal:I.normTotal,layer:this},A=Z(fe),T=le(A,h,S);return ve(e,this,T).then(k=>re(this,k,t,x,s,l,o))}}):this._histogramForField(e)}async classBreaks(e){const t=e.analyzeData!==!1,a=this._hasLocalSource||e.features||e.useFeaturesInView||e.valueExpression||e.filter;return t&&a?this._classBreaksFromMemory(e):(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch(()=>(V(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){if(this._hasLocalSource)throw new p(`${this.adapterName}:not-supported`,"Layer does not support count query");const t=this.layer,a=t.createQuery();return a.where=L(a.where,e.whereClause),$(a,e.filter),t.queryFeatureCount(a,{signal:e.signal})}async generateRenderer(e,t){var i;const a=this.layer;if(this._hasLocalSource||a.version<10.1)throw new p(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)");const r=a.createQuery();return e.where=L(e.where,r.where),Ht(((i=a.parsedUrl)==null?void 0:i.path)??"",{source:a.dynamicDataSource??void 0,gdbVersion:a.gdbVersion??void 0},e,{signal:t})}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new p(`${this.adapterName}:not-supported`,"Layer does not support advanced SQL expressions and standardized queries");const{fields:t,view:a,signal:r,filter:i}=e,s=be(t),l=Xt(t),o=a&&this._hasLocalSource?await this._uvFromMemory({valueExpression:s,view:a,signal:r,filter:i}):await this._uvFromServiceQuery({sqlExpression:l.expression,valueExpression:s,signal:r,filter:i});return Ce(o.uniqueValueInfos,t)}async getSampleFeatures(e,t){var y,g;const{view:a,requiredFields:r,returnGeometry:i,filter:s,signal:l}=e,o=e.sampleSize;if(o==null||o===0)return[];const n=this.layer.createQuery(),u=1,m=t==="json";n.outSpatialReference=a==null?void 0:a.spatialReference,n.returnGeometry=!!i,n.outFields=r,$(n,s);let c=[],d=!1;if(a)try{const h=await a.whenLayerView(this.layer);if(d=!de(this,r,h).length,d){if(o>=1&&!e.filter&&"getSampleFeatures"in h){await this._waitForLayerViewUpdate(h);const S=await h.getSampleFeatures({minFeatureCount:o,sampleSize:o});if(S!=null)return m?S:S.map(w=>Le.fromJSON(w))}if(c=await this._fetchFeaturesFromMemory(h,n,l,t),c.length>=o&&o>0)return j(c,o,u)}}catch{V(l)}try{if(this._hasLocalSource)return d?c:m?await this._fetchFeaturesJSONFromService(n,l):await this._fetchFeaturesFromService(n,l);const h=await this.queryFeatureCount({view:a,filter:s,signal:l}),S=this.layer.capabilities.query.maxRecordCount;let w=o===-1?h:o;if(w=S&&w>S?S:w,h<=c.length||c.length>=S)return c;if(n.maxAllowableOffset=e.resolution||(a?a.extent.width/a.width/a.scale:$t(this.layer.spatialReference))*ha,h<=w)return m?await this._fetchFeaturesJSONFromService(n,l):await this._fetchFeaturesFromService(n,l);if(h<=De){const x=this.layer.createQuery();$(x,s);const b=await this.layer.queryObjectIds();return n.objectIds=j(b,w,u),m?await this._fetchFeaturesJSONFromService(n,l):await this._fetchFeaturesFromService(n,l)}return(g=(y=this.layer.capabilities)==null?void 0:y.query)!=null&&g.supportsPagination&&(n.num=Math.min(w,De)),m?await this._fetchFeaturesJSONFromService(n,l):await this._fetchFeaturesFromService(n,l)}catch{return V(l),c}}load(e){const t=this.layer.load(e).then(async a=>{var r,i;this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=(i=(r=a.capabilities)==null?void 0:r.query)==null?void 0:i.supportsSqlExpression,this._hasLocalSource=!a.url&&!!a.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent,this.workerClient=te.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};function ga(e,t,a){const r=[],i=t.length;return t.forEach((s,l)=>{const[o,n]=s;let u=null;u=l!==0||a?l!==i-1||a?L(`${e} >= ${o}`,`${e} ${l===i-1?" <= ":" < "} ${n}`):`${e} >= ${o}`:`${e} < ${n}`,r.push("WHEN ("+u+") THEN "+(l+1))}),["CASE",r.join(" "),"ELSE 0","END"].join(" ")}F([v({readOnly:!0})],q.prototype,"adapterName",void 0),F([v({constructOnly:!0})],q.prototype,"layer",void 0),q=F([M("esri.smartMapping.support.adapters.FeatureLayerAdapter")],q);let ie=class extends q{constructor(){super(...arguments),this.adapterName="csv-layer-adapter"}async _createGenerateRendererResult(e,t,a,r,i){const s=e==null?void 0:e.features;if(!(s==null?void 0:s.length))throw new p("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");const o=ee(s);let n=null;if(r==="percent-of-total"&&(n=(await this.workerClient.summaryStatistics({field:t},o)).sum,n==null))throw new p("csv-layer-adapter:invalid","invalid normalizationTotal");if((i==null?void 0:i.type)==="class-breaks-definition"){const m=(await Oe({field:t,normalizationType:r,normalizationField:a,normalizationTotal:n},o)).filter(c=>Number.isFinite(c));return Ot({definition:i,values:m,normalizationTotal:n})}const u=(await Oe({field:t},o)).filter(m=>m!=null&&typeof m=="string"&&m.trim()!=="");return At(u)}generateRenderer(e,t){const a=e.classificationDefinition;let r=null,i=null,s=null;(a==null?void 0:a.type)==="class-breaks-definition"?(r=a.classificationField,i=a.normalizationField,s=a.normalizationType):r=a==null?void 0:a.attributeField;const l=this.layer;return B({field:r,normalizationField:i}).then(o=>{const n=l.createQuery();return n.returnGeometry=!1,n.outFields=o,n.where=L(n.where,e.where),l.queryFeatures(n,{signal:t}).then(u=>this._createGenerateRendererResult(u,r,i,s,a))})}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=te.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};F([v({readOnly:!0})],ie.prototype,"adapterName",void 0),ie=F([M("esri.smartMapping.support.adapters.CSVLayerAdapter")],ie);let se=class extends q{constructor(){super(...arguments),this.adapterName="feature-layer-binning-adapter"}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:r,graphics:i,layerView:s,query:l}=t,o={include:["sum"]},n=(!r&&!i&&s&&"queryAggregateSummaryStatistics"in s?await s.queryAggregateSummaryStatistics(l,{field:e,outStatisticTypes:o},{signal:a}):r?await this.workerClient.summaryStatistics({field:e},r):await U({attribute:{field:e,outStatisticTypes:o},features:i})).sum;if(n==null)throw new p(`${this.adapterName}:invalid`,"invalid normalizationTotal");return n}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t!=null&&t.length)return this._getFilteredFeatures(t,a);const{view:r,field:i,field2:s,field3:l,normalizationField:o,valueExpression:n,returnGeometry:u,layerViewFunc:m,signal:c}=e;let d=null,y=null,g=null,h=null,S=null;if(r)try{if(d=await r.whenLayerView(this.layer),y=m!=null&&m in d&&typeof d[m]=="function",y){await this._waitForLayerViewUpdate(d);const w=await B({field:i,field2:s,field3:l,normalizationField:o,valueExpression:n});ke(this,w).length?y=!1:(g="createAggregateQuery"in d?d.createAggregateQuery():null,g?(g.outFields=w,g.returnGeometry=!1,$(g,a)):y=!1),d.suspended&&(y=!1)}}catch{y=!1}if(!y&&(S=Pe(this.layer).map(w=>w.toJSON()),h=await this._fetchFeaturesForStats({field:i,field2:s,field3:l,valueExpression:n,normalizationField:o,returnGeometry:u,filter:a,view:r,signal:c},"json"),!(h!=null&&h.length)))throw new p(`${this.adapterName}:insufficient-data`,"No features are available to calculate statistics");return{layerView:d,query:g,featuresJSON:h,fieldInfos:S}}async _summaryStatsFromMemory(e,t){const{view:a,field:r,valueExpression:i,normalizationType:s,signal:l}=e,o={field:r,valueExpression:i,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:n,graphics:u,layerView:m,query:c,fieldInfos:d}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateSummaryStatistics"});return i&&a&&(n||u)&&(o.fieldType=t!=null&&t.type?Ve.toJSON(t.type):null,o.viewInfoParams=E(a),o.timeZone=a.timeZone,o.fieldInfos=d),s==="percent-of-total"&&e.normalizationTotal==null&&(o.normalizationTotal=await this._getNormalizationTotalFromMemory(r,{featuresJSON:n,graphics:u,layerView:m,query:c},l)),!n&&!u&&m&&"queryAggregateSummaryStatistics"in m?m.queryAggregateSummaryStatistics(c,o,{signal:l}):n?this.workerClient.summaryStatistics(o,n):U({attribute:o,features:u})}async _uvFromMemory(e,t){const{view:a,field:r,valueExpression:i,returnAllCodedValues:s,signal:l}=e,{featuresJSON:o,graphics:n,layerView:u,query:m,fieldInfos:c}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateUniqueValues"}),d={field:r,field2:e.field2,field3:e.field3,fieldDelimiter:R,valueExpression:i,domains:t,returnAllCodedValues:s};return i&&a&&(o||n)&&(d.viewInfoParams=E(a),d.timeZone=a.timeZone,d.fieldInfos=c),!o&&!n&&u&&"queryAggregateUniqueValues"in u?u.queryAggregateUniqueValues(m,d,{signal:l}):o?this.workerClient.uniqueValues(d,o):_e({attribute:d,features:n})}async _histogramFromMemory(e){const{view:t,field:a,valueExpression:r,signal:i}=e,{featuresJSON:s,graphics:l,layerView:o,query:n,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateHistogram"}),m={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return r&&t&&(s||l)&&(m.viewInfoParams=E(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:l,layerView:o,query:n},i)),!s&&!l&&o&&"queryAggregateHistogram"in o?o.queryAggregateHistogram(n,m,{signal:i}):s?this.workerClient.histogram(m,s):ce({attribute:m,features:l})}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:r,signal:i}=e,{featuresJSON:s,graphics:l,layerView:o,query:n,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateClassBreaks"}),m={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return r&&t&&(s||l)&&(m.viewInfoParams=E(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:l,layerView:o,query:n},i)),!s&&!l&&o&&"queryAggregateClassBreaks"in o?o.queryAggregateClassBreaks(n,m,{signal:i}):s?this.workerClient.classBreaks(m,s):Te({attribute:m,features:l})}getField(e=""){const t=Pe(this.layer);return t==null?void 0:t.find(a=>a.name.toLowerCase()===(e==null?void 0:e.toLowerCase()))}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!1,supportsStatistics:!0}:null}getFieldDomain(e,t){return null}async summaryStatistics(e){const{field:t}=e,a=t?this.getField(t):null,r=N(a)||C(a),i=e.sqlExpression&&!e.valueExpression&&!t;if(r||i)throw new p(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._summaryStatsFromMemory(e,a)}async uniqueValues(e){const t=await ye(e,this);return this._uvFromMemory(e,t)}async histogram(e){const{field:t}=e,a=t?this.getField(t):null,r=N(a)||C(a),i=e.sqlExpression&&!e.valueExpression&&!t;if(r||i)throw new p(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._histogramFromMemory(e)}async classBreaks(e){return(e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)).catch(()=>(V(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){var r;const t=await((r=e.view)==null?void 0:r.whenLayerView(this.layer));if(!t||!("queryAggregateCount"in t)||!t.queryAggregateCount)throw new p(`${this.adapterName}:not-supported`,"LayerView is not supported.");await this._waitForLayerViewUpdate(t);const a=t.createAggregateQuery();return a.where=L(a.where,e.whereClause),$(a,e.filter),t.queryAggregateCount(a,{signal:e.signal})}generateRenderer(e,t){throw new p(`${this.adapterName}:not-supported`,"'generateRenderer' is not supported.")}heatmapStatistics(e){throw new p(`${this.adapterName}:not-supported`,"'heatmapStatistics' is not supported.")}async predominantCategories(e){const{fields:t,view:a,signal:r}=e,i=be(t),s=await this._uvFromMemory({valueExpression:i,view:a,signal:r});return Ce(s.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,sampleSize:r,requiredFields:i,returnGeometry:s,filter:l,signal:o}=e;if(!a)throw new p(`${this.adapterName}:not-supported`,"'view' is required to get sample features for binning.");if(a.type==="3d")throw new p(`${this.adapterName}:not-supported`,"3d 'view' is not supported to get sample features for binning.");const n=await a.whenLayerView(this.layer);if(!("queryAggregateJSON"in n&&n.queryAggregateJSON&&"queryAggregates"in n&&n.queryAggregates))throw new p(`${this.adapterName}:not-supported`,"LayerView is not supported.");if(await this._waitForLayerViewUpdate(n),ke(this,i).length)throw new p(`${this.adapterName}:insufficient-data`,"Layer does not have required fields");const u=1,m=t==="json",c=n.createAggregateQuery();c.outSpatialReference=a==null?void 0:a.spatialReference,c.returnGeometry=!!s,c.outFields=i,$(c,l);const{features:d}=m?await n.queryAggregateJSON(c,{signal:o}):await n.queryAggregates(c,{signal:o});return d.length&&r!=null&&r>0&&r<=d.length?j(d,r,u):d}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType="polygon",this.objectIdField=null,this.supportsSQLExpression=!1,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent;const r="featureReduction"in a?a.featureReduction:null;if((r==null?void 0:r.type)!=="binning"&&(r==null?void 0:r.type)!=="cluster")throw new p(`${this.adapterName}:invalid-parameters`,`Feature reduction type ${r==null?void 0:r.type} is not supported`);this.workerClient=te.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};F([v({readOnly:!0})],se.prototype,"adapterName",void 0),se=F([M("esri.smartMapping.support.adapters.FeatureLayerBinningAdapter")],se);const wa=se;let G=class extends _{constructor(e){super(e),this._featureLayerAdapter=null,this.workerClient=null,this.adapterName="scene-layer-adapter"}destroy(){var e;(e=this.workerClient)==null||e.destroy()}_hasCachedStatistics(e){return this.layer.hasCachedStatistics(e)}_updateQuery(e,t=[],a=[]){if(!e||!a.length)return e;const r=this.layer.objectIdField,i=e.clone(),s=t.filter(o=>{const n=this.layer.getField(o);return!a.includes(n.name)}),l=s.some(o=>this.layer.getField(o).name===r);return i.outFields=l?s:[...s,r],i}async _fetchFeaturesFromMemory(e,t,a){if(!e)throw new p("scene-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const r=await e.whenLayerView(this.layer),i=new AbortController,s=i.signal,l=Se(()=>!r.updating,s);await Ue(l,5e3,i);const o=de(this,a,r);V(s);const n=this._updateQuery(t,a??[],o),u=await r.queryFeatures(n,{signal:s});V(s);const m=u.features;return o.length?r.whenGraphicAttributes(m,o):m}async _fetchFeaturesJSONFromMemory(e,t,a){return this._fetchFeaturesFromMemory(e,t,a).then(ee)}_fetchFeaturesForStats(e,t){return B({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:a,signal:e.signal},t))}async _processStatsFromMemoryParams(e){const t=e.features;if(t!=null&&t.length)return t.length&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic"?{graphics:t}:{featuresJSON:t};const{view:a,field:r,normalizationField:i,valueExpression:s,signal:l}=e,o=await this._fetchFeaturesForStats({field:r,valueExpression:s,normalizationField:i,view:a,signal:l},null);if(!(o!=null&&o.length))throw new p("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");return{graphics:o}}_getCachedStatistics(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.minValue||e.maxValue?Promise.reject(new p("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression', 'sqlWhere', 'minValue' or 'maxValue' is specified")):a.queryCachedStatistics(t==null?void 0:t.name,{signal:e.signal}).then(r=>{const i=r.stats,{min:s,max:l,totalValuesCount:o}=i;let{avg:n,stddev:u,sum:m,variance:c,count:d}=i;return s===0&&l===0||(n=n===0?null:n,m=m===0?null:m,u=u===0?null:u,c=c===0?null:c,d=d===0?null:d),d==null&&(m!=null&&n!=null?d=Math.round(m/n):o!=null&&(d=o)),{avg:n,count:d,max:l,min:s,stddev:u,sum:m,variance:c}})}async _getNormalizationTotal(e,t,a){const r={include:["sum"]},i=(t?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:r},t):await U({attribute:{field:e,outStatisticTypes:r},features:a})).sum;if(i==null)throw new p("scene-layer-adapter:invalid","invalid normalizationTotal");return i}async _getSummaryStatisticsFromMemory(e,t){const{view:a,field:r,normalizationField:i,valueExpression:s}=e,{featuresJSON:l,graphics:o}=await this._processStatsFromMemoryParams(e),n={field:r,valueExpression:s,normalizationType:e.normalizationType,normalizationField:i,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes};return e.valueExpression&&a&&l&&(n.fieldType=t!=null&&t.type?Ve.toJSON(t.type):null,n.viewInfoParams=E(a),n.timeZone=a.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotal(r,l,o)),l?this.workerClient.summaryStatistics(n,l):U({attribute:n,features:o})}_getCachedStatisticsForUniqueValues(e,t){const a=this.layer,r=t==null?void 0:t.name,i=t&&e.field?this.getFieldDomain(e.field):null;return e.valueExpression||e.sqlExpression||e.sqlWhere?Promise.reject(new p("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression' or 'sqlWhere' is specified")):a.queryCachedStatistics(r,{signal:e.signal}).then(s=>{var d;const l=s.stats;if(!l.mostFrequentValues)throw new Error;const o=(d=s.labels)==null?void 0:d.labels,n={},u=[],m="countOF"+r;l.mostFrequentValues.forEach(y=>{const g=new Le({attributes:{}});g.attributes[r]=t&&t.name!==a.objectIdField&&(Ze(t)||N(t))?Number(y.value):y.value,g.attributes[m]=y.count,u.push(g)}),o&&o.forEach(y=>{n[y.value]=y.label});const c=new qe({features:u});return $e(c,{layer:this,field:e.field,labels:n,view:e.view,signal:e.signal})}).then(s=>me(s,[i],e.returnAllCodedValues))}async _getUniqueValuesFromMemory(e,t){const{view:a,field:r,field2:i,field3:s,valueExpression:l,returnAllCodedValues:o}=e,n={field:r,field2:i,field3:s,fieldDelimiter:R,valueExpression:l,domains:t,returnAllCodedValues:o},{featuresJSON:u,graphics:m}=await this._processStatsFromMemoryParams(e);return e.valueExpression&&a&&u&&(n.viewInfoParams=E(a),n.timeZone=a.timeZone),u?this.workerClient.uniqueValues(n,u):_e({attribute:n,features:m})}_getCachedStatisticsForHistogram(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.normalizationType?Promise.reject(new p("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression' or 'sqlExpression' or 'sqlWhere' or 'normalizationType' is specified")):a.queryCachedStatistics(t&&t.name,{signal:e.signal}).then(r=>{const i=r.stats,{minValue:s,maxValue:l}=e,o=s??i.min,n=l??i.max,u=e.numBins||10,m=Fa(i.histogram,o,n,u);return Ye(m,o,n,u)})}async _getClassBreaksFromMemory(e){const{view:t,field:a,normalizationField:r,valueExpression:i}=e,{featuresJSON:s,graphics:l}=await this._processStatsFromMemoryParams(e),o={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:r,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return e.valueExpression&&t&&s&&(o.viewInfoParams=E(t),o.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(o.normalizationTotal=await this._getNormalizationTotal(a,s,l)),s?this.workerClient.classBreaks(o,s):Te({attribute:o,features:l})}async _getHistogramFromMemory(e){const{view:t,field:a}=e,{featuresJSON:r,graphics:i}=await this._processStatsFromMemoryParams(e),s={field:a,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return e.valueExpression&&t&&r&&(s.viewInfoParams=E(t),s.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(s.normalizationTotal=await this._getNormalizationTotal(a,r,i)),r?this.workerClient.histogram(s,r):ce({attribute:s,features:i})}getField(e){return this.layer.getField(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this.layer.getFieldUsageInfo(t.name);return{supportsLabelingInfo:a.supportsLabelingInfo,supportsPopupTemplate:a.supportsPopupTemplate,supportsRenderer:a.supportsRenderer,supportsLayerQuery:a.supportsLayerQuery,supportsStatistics:!0}}getFieldDomain(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.getFieldDomain(e,t):null}createQuery(){return this.layer.createQuery()}summaryStatistics(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.summaryStatistics(e);if(e.filter)throw new p("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t==null?void 0:t.name)?this._getCachedStatistics(e,t).catch(()=>(V(e.signal),this._getSummaryStatisticsFromMemory(e,t))):this._getSummaryStatisticsFromMemory(e,t)}async uniqueValues(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.uniqueValues(e);if(e.filter)throw new p("scene-layer-adapter:not-supported","filter is not supported");const t=await ye(e,this),{field:a,field2:r}=e,i=a&&r,s=this.getField(a);return!i&&s&&this._hasCachedStatistics(s.name)?this._getCachedStatisticsForUniqueValues(e,s).catch(()=>(V(e.signal),this._getUniqueValuesFromMemory(e,t))):this._getUniqueValuesFromMemory(e,t)}histogram(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.histogram(e);if(e.filter)throw new p("scene-layer-adapter:not-supported","filter is not supported");return t&&this._hasCachedStatistics(t.name)?this._getCachedStatisticsForHistogram(e,t).catch(()=>(V(e.signal),this._getHistogramFromMemory(e))):this._getHistogramFromMemory(e)}classBreaks(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.classBreaks(e);if(e.filter)throw new p("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t==null?void 0:t.name)?Promise.reject(new p("scene-layer-adapter:not-supported","Cached stats not supported")):this._getClassBreaksFromMemory(e)}queryFeatureCount(e){return this._featureLayerAdapter?this._featureLayerAdapter.queryFeatureCount(e):Promise.reject(new p("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support count query"))}generateRenderer(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.generateRenderer(e,t):Promise.reject(new p("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support generateRenderer operation"))}heatmapStatistics(e){return this._featureLayerAdapter?this._featureLayerAdapter.heatmapStatistics(e):Promise.reject(new p("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support heatmapStatistics operation"))}async predominantCategories(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.predominantCategories(e);throw new p("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support predominantCategories")}async getSampleFeatures(e,t){if(e.filter)throw new p("scene-layer-adapter:not-supported","filter is not supported");const{view:a,sampleSize:r,requiredFields:i,returnGeometry:s,signal:l}=e,o=1,n=t==="json",u=this.createQuery();u.outFields=i,u.returnGeometry=!!s,u.where=null,u.num=r;let m=[];try{if(m=n?await this._fetchFeaturesJSONFromMemory(a,u,i):await this._fetchFeaturesFromMemory(a,u,i),m.length&&r!=null&&r>0&&r<=m.length)return j(m,r,o)}catch{V(l)}let c=null;if(this._featureLayerAdapter){const d={...e};delete d.view,c=await this._featureLayerAdapter.getSampleFeatures(d,t)}return c!=null&&c.length?c:j(m,m.length,o)}load(e){const t=this.layer.load(e).then(async a=>{this.workerClient=te.getInstance(),await this.workerClient.open(e.signal);const r=a.associatedLayer;if(this.geometryType=a.geometryType,r!=null)return this._featureLayerAdapter=new q({layer:r}),this._featureLayerAdapter.load(e).then(()=>{this.objectIdField=this._featureLayerAdapter.objectIdField,this.supportsSQLExpression=this._featureLayerAdapter.supportsSQLExpression,this.minScale=this._featureLayerAdapter.minScale,this.maxScale=this._featureLayerAdapter.maxScale,this.fullExtent=this._featureLayerAdapter.fullExtent});this.objectIdField=a.objectIdField,this.supportsSQLExpression=!1,this.hasQueryEngine=!1,this.fullExtent=a.fullExtent});return this.addResolvingPromise(t),Promise.resolve(this)}};function Fa(e,t=e.minimum,a=e.maximum,r){const i=[];for(let u=0;u<r;u++)i[u]=0;const s=e.counts.length,l=e.minimum,o=e.maximum;for(let u=0;u<s;u++){const m=(u+.5)/s,c=((1-m)*l+m*o-t)/(a-t)*r;c>=0&&c<=r&&(i[c===r?r-1:Math.floor(c)]+=e.counts[u])}const n=[];return i.forEach((u,m)=>{const c=new Le({attributes:{}});c.attributes.EXPR_1=m+1,c.attributes.countOFExpr=u,n.push(c)}),new qe({features:n})}F([v({readOnly:!0})],G.prototype,"adapterName",void 0),F([v({constructOnly:!0})],G.prototype,"layer",void 0),G=F([M("esri.smartMapping.support.adapters.SceneLayerAdapter")],G);let ne=class extends G{constructor(e){super(e),this.adapterName="point-cloud-layer-adapter"}getField(e){return this.layer.fieldsIndex.get(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this._hasCachedStatistics(t.name);return{supportsLabelingInfo:a,supportsPopupTemplate:a,supportsRenderer:a,supportsLayerQuery:!1,supportsStatistics:a}}getFieldDomain(){return null}load(e){const t=this.layer.load(e).then(()=>{this.geometryType="point",this.objectIdField=null,this.supportsSQLExpression=!1,this.hasQueryEngine=!1});return this.addResolvingPromise(t),Promise.resolve(this)}};F([v({readOnly:!0})],ne.prototype,"adapterName",void 0),ne=F([M("esri.smartMapping.support.adapters.PointCloudLayerAdapter")],ne);let oe=class extends Q{constructor(){super(...arguments),this.adapterName="stream-layer-adapter"}async _summaryStatsFromClientQuery(e,t){var o;const{signal:a,view:r}=e,i=Ne(this,e,t);i.outStatistics=(o=i.outStatistics)==null?void 0:o.filter(n=>n.outStatisticFieldName!=="totalcount_value");const s=await this._fetchFeatureSetFromMemory(i,r,a),l=Ee(s,N(t)||C(t));return ue(l,e.outStatisticTypes)}};F([v({readOnly:!0})],oe.prototype,"adapterName",void 0),oe=F([M("esri.smartMapping.support.adapters.StreamLayerAdapter")],oe);var f;(function(e){e[e.CatalogLayer=0]="CatalogLayer",e[e.CatalogFootprintLayer=1]="CatalogFootprintLayer",e[e.CSVLayer=2]="CSVLayer",e[e.FeatureLayer=3]="FeatureLayer",e[e.GeoJSONLayer=4]="GeoJSONLayer",e[e.ImageryLayer=5]="ImageryLayer",e[e.KnowledgeGraphSublayer=6]="KnowledgeGraphSublayer",e[e.OGCFeatureLayer=7]="OGCFeatureLayer",e[e.OrientedImageryLayer=8]="OrientedImageryLayer",e[e.ParquetLayer=9]="ParquetLayer",e[e.PointCloudLayer=10]="PointCloudLayer",e[e.SceneLayer=11]="SceneLayer",e[e.StreamLayer=12]="StreamLayer",e[e.SubtypeGroupLayer=13]="SubtypeGroupLayer",e[e.SubtypeSublayer=14]="SubtypeSublayer",e[e.WFSLayer=15]="WFSLayer"})(f||(f={}));const xe={[f.CatalogLayer]:{adapter:q,type:"catalog",label:"CatalogLayer"},[f.CatalogFootprintLayer]:{adapter:q,type:"catalog-footprint",label:"CatalogFootprintLayer"},[f.CSVLayer]:{adapter:ie,type:"csv",label:"CSVLayer"},[f.FeatureLayer]:{adapter:q,type:"feature",label:"FeatureLayer"},[f.ImageryLayer]:{adapter:q,type:"imagery",label:"ImageryLayer"},[f.GeoJSONLayer]:{adapter:q,type:"geojson",label:"GeoJSONLayer"},[f.KnowledgeGraphSublayer]:{adapter:q,type:"knowledge-graph-sublayer",label:"KnowledgeGraphSublayer"},[f.OGCFeatureLayer]:{adapter:Q,type:"ogc-feature",label:"OGCFeatureLayer"},[f.OrientedImageryLayer]:{adapter:q,type:"oriented-imagery",label:"OrientedImageryLayer"},[f.ParquetLayer]:{adapter:q,type:"parquet",label:"ParquetLayer"},[f.PointCloudLayer]:{adapter:ne,type:"point-cloud",label:"PointCloudLayer"},[f.SceneLayer]:{adapter:G,type:"scene",label:"SceneLayer"},[f.StreamLayer]:{adapter:oe,type:"stream",label:"StreamLayer"},[f.SubtypeGroupLayer]:{adapter:q,type:"subtype-group",label:"SubtypeGroupLayer"},[f.SubtypeSublayer]:{adapter:q,type:"subtype-sublayer",label:"SubtypeSublayer"},[f.WFSLayer]:{adapter:q,type:"wfs",label:"WFSLayer"}},Me=[f.CatalogLayer,f.CatalogFootprintLayer,f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.KnowledgeGraphSublayer,f.OGCFeatureLayer,f.OrientedImageryLayer,f.ParquetLayer,f.PointCloudLayer,f.SceneLayer,f.StreamLayer,f.SubtypeGroupLayer,f.SubtypeSublayer,f.WFSLayer];f.CatalogFootprintLayer,f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.KnowledgeGraphSublayer,f.OGCFeatureLayer,f.OrientedImageryLayer,f.ParquetLayer,f.SceneLayer,f.StreamLayer,f.SubtypeGroupLayer,f.SubtypeSublayer,f.WFSLayer;const Sa=[f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.OGCFeatureLayer,f.KnowledgeGraphSublayer,f.OrientedImageryLayer,f.ParquetLayer,f.StreamLayer,f.WFSLayer];function va(e){return e.map(t=>xe[t].label)}function xa(e,t=Me,a){if(e instanceof _)return e;const r=qa(e,t);return r?a?new wa({layer:e}):new r({layer:e}):null}function qa(e,t=Me){let a=null;return t.some(r=>{const i=e.type===xe[r].type;return i&&(a=xe[r].adapter),i}),a}async function Va(e){if(!(e!=null&&e.layer)||!e.field&&!e.valueExpression)throw new p("unique-values:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");const t=e.valueExpression||e.sqlExpression,a=t&&!e.sqlExpression;if(t){if(a){if(!e.view)throw new p("unique-values:missing-parameters","View is required when 'valueExpression' is specified")}else if(!e.valueExpression)throw new p("unique-values:missing-parameters","'valueExpression' parameters are required")}e.forBinning&&Jt(e,"unique-values");const{layer:r,...i}=e,s=[...Me,f.ImageryLayer],l=e.forBinning?Sa:s,o=xa(r,l,e.forBinning);if(!o)throw new p("unique-values:invalid-parameters","'layer' must be one of these types: "+va(l).join(", "));const n={layerAdapter:o,...i},u=n.signal!=null?{signal:n.signal}:null;await o.load(u);const m=await B({field:n.field,field2:n.field2,field3:n.field3,valueExpression:n.valueExpression}),c=Ct(o,m,"unique-values:invalid-parameters");if(c)throw c;n.filter&&!n.filter.spatialRelationship&&(n.filter.spatialRelationship="intersects");const d=Nt(n.filter,"summary-statistics:invalid-parameters");if(d)throw d;return n}async function Ra(e){const{layerAdapter:t,...a}=await Va(e);return t.uniqueValues(a)}export{Ra as default};
