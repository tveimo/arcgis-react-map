import{h0 as f,L as x}from"./index-cGsjYgnw.js";import{w as d,j as y}from"./operatorOffset-BV0ZyQL5.js";import{getSpatialReference as p,fromGeometry as G,toGeometry as u,fromGeometries as g}from"./jsonConverter-CZ37VDxk.js";import"./ProjectionTransformation-C5NGE5t7.js";import"./Envelope2D-DpFkwyFI.js";import"./Point2D-D2kgyQ2l.js";import"./Transformation2D-DUMRLKSD.js";import"./OperatorDefinitions-DP7_WWTp.js";const l={round:0,bevel:1,miter:2,square:3};function v(t,e,n={}){const{miterLimit:a=10,flattenError:s=0,joins:c="round",unit:r}=n,o=p(t);r&&o&&(e=f(e,r,o));const m=G(t),i=m.getSpatialReference();return u(d(m.getGeometry(),i,e,l[c],a,s),i)}function w(t,e,n={}){const{miterLimit:a=10,flattenError:s=0,joins:c="round",unit:r}=n,o=p(t);r&&o&&(e=f(e,r,o));const[m,i]=g(t);return y(m,i,e,l[c],a,s).map(j=>u(j,i)).filter(x)}export{v as execute,w as executeMany};
