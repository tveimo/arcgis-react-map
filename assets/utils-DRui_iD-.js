import{cg as j,cf as C,ch as O,ao as R,eW as Y,cB as A,av as G,eX as _,eY as D,eZ as v,e_ as S,s as U,el as V}from"./index-BU6th8yW.js";import{m as E,B}from"./utils-Cfa-EdBv.js";let f=null;const L=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function P(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function J(e,t,n,i){const s=Y(n)?A(n):null,o=s?Math.round((s.valid[1]-s.valid[0])/t.scale[0]):null;return e.map(l=>{const a=new G(l.geometry);return _(t,a,a),l.geometry=s?P(a,o??0,i[0]):a,l})}function K(e,t=18,n,i,s){const o=new Float64Array(i*s);t=Math.round(V(t));let l=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY;const F=D(n);for(const{geometry:p,attributes:N}of e){const{x:g,y:c}=p,w=Math.max(0,g-t),b=Math.max(0,c-t),M=Math.min(s,c+t),x=Math.min(i,g+t),h=+F(N);for(let m=b;m<M;m++)for(let d=w;d<x;d++){const I=m*i+d,$=S(d-g,m-c,t)*h,u=o[I]+=$;l=Math.min(l,u),a=Math.max(a,u)}}return{min:l,max:a}}function Z(e){const t=L.exec(e);if(!t)return null;const{hh:n,mm:i,ss:s,ms:o}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(s)*v.seconds+Number(o||0)}async function Q(e,t,n=!0){if(!t)return[];const{field:i,field2:s,field3:o,fieldDelimiter:l,fieldInfos:a,timeZone:F}=e,p=i&&(a==null?void 0:a.find(u=>u.name.toLowerCase()===i.toLowerCase())),N=!!p&&j(p),g=!!p&&C(p),c=e.valueExpression,w=e.normalizationType,b=e.normalizationField,M=e.normalizationTotal,x=[],h=e.viewInfoParams;let m=null,d=null;if(c){if(!f){const{arcadeUtils:u}=await O();f=u}f.hasGeometryOperations(c)&&await f.enableGeometryOperations(),m=f.createFunction(c),d=h?f.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new R(h.spatialReference)}):null}const I=e.fieldInfos,$=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&I?{fields:I}:null;return t.forEach(u=>{const y=u.attributes;let r;if(c){const T=$?{...u,layer:$}:u,z=f.createExecContext(T,d,F);r=f.executeFunction(m,z)}else y&&(r=y[i],s?(r=`${E(r)}${l}${E(y[s])}`,o&&(r=`${r}${l}${E(y[o])}`)):typeof r=="string"&&n&&(g?r=r?new Date(r).getTime():null:N&&(r=r?Z(r):null)));if(w&&typeof r=="number"&&isFinite(r)){const T=y&&parseFloat(y[b]);r=B(r,w,T,M)}x.push(r)}),x}function ee(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let s;return n==="field"?s="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(s=`(${t} > 0)`),s}function te(e,t,n){const i=t!=null?e+" >= "+t:"",s=n!=null?e+" <= "+n:"";let o="";return o=i&&s?k(i,s):i||s,o?"("+o+")":""}function k(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function ne(e,t){if(e&&e.spatialRelationship!=="intersects")return new U(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function ie(e,t,n){const i=q({layer:e,fields:t});if(i.length)return new U(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const s=W({layer:e,fields:t});return s.length?new U(n,"Unsupported fields: "+s.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function q(e){const t=e.layer;return e.fields.filter(n=>!t.getField(n))}function W(e){const t=e.layer;return e.fields.filter(n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics})}export{ee as F,Z as I,ne as M,te as N,ie as T,k as U,Q as b,K as w,J as x};
